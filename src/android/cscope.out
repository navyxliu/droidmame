cscope 15 $HOME/Downloads/imame4all-read-only/MAME4all/trunk/src/android               0000695824
	@allegro.h

1 
	#KEY_ESC
 1

	)

2 
	#KEY_1
 2

	)

3 
	#KEY_2
 3

	)

4 
	#KEY_3
 4

	)

5 
	#KEY_4
 5

	)

6 
	#KEY_5
 6

	)

7 
	#KEY_6
 7

	)

8 
	#KEY_7
 8

	)

9 
	#KEY_8
 9

	)

10 
	#KEY_9
 10

	)

11 
	#KEY_0
 11

	)

12 
	#KEY_MINUS
 12

	)

13 
	#KEY_EQUALS
 13

	)

14 
	#KEY_BACKSPACE
 14

	)

15 
	#KEY_TAB
 15

	)

16 
	#KEY_Q
 16

	)

17 
	#KEY_W
 17

	)

18 
	#KEY_E
 18

	)

19 
	#KEY_R
 19

	)

20 
	#KEY_T
 20

	)

21 
	#KEY_Y
 21

	)

22 
	#KEY_U
 22

	)

23 
	#KEY_I
 23

	)

24 
	#KEY_O
 24

	)

25 
	#KEY_P
 25

	)

26 
	#KEY_OPENBRACE
 26

	)

27 
	#KEY_CLOSEBRACE
 27

	)

28 
	#KEY_ENTER
 28

	)

29 
	#KEY_LCONTROL
 29

	)

30 
	#KEY_A
 30

	)

31 
	#KEY_S
 31

	)

32 
	#KEY_D
 32

	)

33 
	#KEY_F
 33

	)

34 
	#KEY_G
 34

	)

35 
	#KEY_H
 35

	)

36 
	#KEY_J
 36

	)

37 
	#KEY_K
 37

	)

38 
	#KEY_L
 38

	)

39 
	#KEY_COLON
 39

	)

40 
	#KEY_QUOTE
 40

	)

41 
	#KEY_TILDE
 41

	)

42 
	#KEY_LSHIFT
 42

	)

43 
	#KEY_BACKSLASH
 43

	)

44 
	#KEY_Z
 44

	)

45 
	#KEY_X
 45

	)

46 
	#KEY_C
 46

	)

47 
	#KEY_V
 47

	)

48 
	#KEY_B
 48

	)

49 
	#KEY_N
 49

	)

50 
	#KEY_M
 50

	)

51 
	#KEY_COMMA
 51

	)

52 
	#KEY_STOP
 52

	)

53 
	#KEY_SLASH
 53

	)

54 
	#KEY_RSHIFT
 54

	)

55 
	#KEY_ASTERISK
 55

	)

56 
	#KEY_ALT
 56

	)

57 
	#KEY_SPACE
 57

	)

58 
	#KEY_CAPSLOCK
 58

	)

59 
	#KEY_F1
 59

	)

60 
	#KEY_F2
 60

	)

61 
	#KEY_F3
 61

	)

62 
	#KEY_F4
 62

	)

63 
	#KEY_F5
 63

	)

64 
	#KEY_F6
 64

	)

65 
	#KEY_F7
 65

	)

66 
	#KEY_F8
 66

	)

67 
	#KEY_F9
 67

	)

68 
	#KEY_F10
 68

	)

69 
	#KEY_NUMLOCK
 69

	)

70 
	#KEY_SCRLOCK
 70

	)

71 
	#KEY_HOME
 71

	)

72 
	#KEY_UP
 72

	)

73 
	#KEY_PGUP
 73

	)

74 
	#KEY_MINUS_PAD
 74

	)

75 
	#KEY_LEFT
 75

	)

76 
	#KEY_5_PAD
 76

	)

77 
	#KEY_RIGHT
 77

	)

78 
	#KEY_PLUS_PAD
 78

	)

79 
	#KEY_END
 79

	)

80 
	#KEY_DOWN
 80

	)

81 
	#KEY_PGDN
 81

	)

82 
	#KEY_INSERT
 82

	)

83 
	#KEY_DEL
 83

	)

84 
	#KEY_PRTSCR
 84

	)

85 
	#KEY_F11
 87

	)

86 
	#KEY_F12
 88

	)

87 
	#KEY_DEL_PAD
 90

	)

88 
	#KEY_LWIN
 91

	)

89 
	#KEY_RWIN
 92

	)

90 
	#KEY_MENU
 93

	)

91 
	#KEY_1_PAD
 101

	)

92 
	#KEY_2_PAD
 102

	)

93 
	#KEY_3_PAD
 103

	)

94 
	#KEY_4_PAD
 104

	)

95 
	#KEY_6_PAD
 106

	)

96 
	#KEY_7_PAD
 107

	)

97 
	#KEY_8_PAD
 108

	)

98 
	#KEY_9_PAD
 109

	)

99 
	#KEY_0_PAD
 110

	)

100 
	#KEY_BACKSLASH2
 111

	)

101 
	#KEY_ENTER_PAD
 115

	)

102 
	#KEY_RCONTROL
 120

	)

103 
	#KEY_ALTGR
 121

	)

104 
	#KEY_SLASH_PAD
 122

	)

105 
	#KEY_PAUSE
 123

	)

107 
	#KEY_MAX
 128

	)

109 
	#JOY_TYPE_AUTODETECT
 -1

	)

110 
	#JOY_TYPE_NONE
 0

	)

111 
	#JOY_TYPE_STANDARD
 1

	)

112 
	#JOY_TYPE_2PADS
 2

	)

113 
	#JOY_TYPE_4BUTTON
 3

	)

114 
	#JOY_TYPE_6BUTTON
 4

	)

115 
	#JOY_TYPE_8BUTTON
 5

	)

116 
	#JOY_TYPE_FSPRO
 6

	)

117 
	#JOY_TYPE_WINGEX
 7

	)

118 
	#JOY_TYPE_SIDEWINDER
 8

	)

119 
	#JOY_TYPE_GAMEPAD_PRO
 9

	)

120 
	#JOY_TYPE_GRIP
 10

	)

121 
	#JOY_TYPE_GRIP4
 11

	)

122 
	#JOY_TYPE_SNESPAD_LPT1
 12

	)

123 
	#JOY_TYPE_SNESPAD_LPT2
 13

	)

124 
	#JOY_TYPE_SNESPAD_LPT3
 14

	)

125 
	#JOY_TYPE_PSXPAD_LPT1
 15

	)

126 
	#JOY_TYPE_PSXPAD_LPT2
 16

	)

127 
	#JOY_TYPE_PSXPAD_LPT3
 17

	)

128 
	#JOY_TYPE_N64PAD_LPT1
 18

	)

129 
	#JOY_TYPE_N64PAD_LPT2
 19

	)

130 
	#JOY_TYPE_N64PAD_LPT3
 20

	)

131 
	#JOY_TYPE_WINGWARRIOR
 21

	)

132 
	#JOY_TYPE_IFSEGA_ISA
 22

	)

133 
	#JOY_TYPE_IFSEGA_PCI
 23

	)

135 
	#GFX_AUTO
 0

	)

136 
	#GFX_VESA1
 1

	)

137 
	#GFX_VESA2B
 2

	)

138 
	#GFX_VESA2L
 3

	)

139 
	#GFX_VESA3
 4

	)

	@android_frontend.cpp

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<sys/°©.h
>

5 
	~<uni°d.h
>

6 
	~<dúít.h
>

7 
	~<™droid/log.h
>

8 
	~"möimÆ.h
"

9 
	~"™droid_‰⁄ãnd_li°.h
"

10 
	~"™droid_‰⁄ãnd_míu.h
"

11 
	~"™droid_‰⁄ãnd_•œsh.h
"

12 
	~"sh¨ed.h
"

14 
	ggame_num_avaû
=0;

15 
	gœ°_game_£À˘ed
=0;

16 
	g∂ayemu
[16] = "mame\0";

17 
	g∂aygame
[16] = "builtinn\0";

19 
	gm4Æl_öGame
=0;

20 
	gm4Æl_exôGame
=0;

22 
	gm4Æl_video_a•e˘
=0;

23 
	gm4Æl_video_rŸ©e
=0;

24 
	gm4Æl_video_sync
=0;

25 
	gm4Æl_video_dïth
=8;

26 
	gm4Æl_‰ameskù
=-1;

27 
	gm4Æl_sound
 = 4;

28 
	gm4Æl_˛ock_˝u
= 80;

29 
	gm4Æl_˛ock_sound
=80;

30 
	gm4Æl_chót
=0;

31 
	gm4Æl_buâ⁄s
=2;

32 
	gm4Æl_waysStick
 = 8;

33 
	gm4Æl_ASMC‹es
 = 1;

34 
	gm4Æl_˝u_c‹es
 = 0;

37 
m4Æl_a•e˘R©io
;

38 
m4Æl_¸›Video
;

39 
m4Æl_fixedRes
;

40 
emuœãd_width
;

41 
emuœãd_height
;

42 
m4Æl_HiS≥cs
;

43 
m4Æl_hide_LR
;

44 
m4Æl_B∂usX
;

45 
m4Æl_œndsˇ≥_buâ⁄s
;

47 
	g_ma°î_vﬁume
 = 100;

49 
my_™droid_maö
 (
¨gc
, **
¨gv
);

51 
	$lﬂd_bmp_8bµ
(*
out
, *
ö
)

53 
i
,
x
,
y
;

54 
r
,
g
,
b
,
c
;

55 
ö
+=14;

56 
ö
+=40;

58 
i
=0;i<256;i++) {

59 
b
=*
ö
++;

60 
g
=*
ö
++;

61 
r
=*
ö
++;

62 
c
=*
ö
++;

63 
	`gp2x_video_cﬁ‹8
(
i
,
r
,
g
,
b
);

65 
	`gp2x_video_£çÆëã
();

67 *
p
 = (*)
out
;

68 
y
=239;y!=-1;y--) {

69 
x
=0;x<320;x++) {

71 *
p
++=
gp2x_∑Àâe
[
ö
[
x
+
y
*320]];

74 
	}
}

76 
	$gp2x_öåo_s¸ìn
() {

77 
«me
[256];

78 
FILE
 *
f
;

79 
	`gp2x_video_Êù
();

80 
	`•rötf
(
«me
,
	`gë_documíts_∑th
("skins/splash.bmp"));

81 
f
=
	`f›í
(
«me
,"rb");

82 i‡(
f
) {

83 
	`‰ód
(
gp2x•œsh_bmp
,1,77878,
f
);

84 
	`f˛o£
(
f
);

89 
	`lﬂd_bmp_8bµ
(
gp2x_s¸ìn8
,
gp2x•œsh_bmp
);

90 
	`gp2x_video_Êù
();

91 
ExKey
=
	`gp2x_joy°ick_ªad
(0);

92 if(
ExKey
!=0);

93 
	`gp2x_timî_dñay
(50);

95 
	`•rötf
(
«me
,
	`gë_documíts_∑th
("skins/menu.bmp"));

96 
f
=
	`f›í
(
«me
,"rb");

97 i‡(
f
) {

98 
	`‰ód
(
gp2xmíu_bmp
,1,77878,
f
);

99 
	`f˛o£
(
f
);

101 
	}
}

103 
	$game_li°_öô
()

105 
i
;

106 
DIR
 *
d
=
	`›ídú
(
	`gë_documíts_∑th
("roms"));

107 
game
[32];

108 i‡(
d
)

110 
dúít
 *
a˘uÆ
=
	`ªaddú
(
d
);

111 
a˘uÆ
)

113 
i
=0;i<
NUMGAMES
;i++)

115 i‡(
_drivîs
[
i
].
avaûabÀ
==0)

117 
	`•rötf
(
game
,"%s.zù",
_drivîs
[
i
].
«me
);

118 i‡(
	`°rcmp
(
a˘uÆ
->
d_«me
,
game
)==0)

120 
_drivîs
[
i
].
avaûabÀ
=1;

121 
game_num_avaû
++;

126 
a˘uÆ
=
	`ªaddú
(
d
);

128 
	`˛o£dú
(
d
);

130 
	}
}

133 
	$game_li°_öô
(
¨gc
)

136 
	`game_li°_öô
();

137 
	}
}

139 
	$game_li°_võw
(*
pos
) {

141 
i
;

142 
võw_pos
;

143 
aux_pos
=0;

144 
s¸ìn_y
 = 45;

145 
s¸ìn_x
 = 38;

148 
	`lﬂd_bmp_8bµ
(
gp2x_s¸ìn8
,
gp2xmíu_bmp
);

151 i‡(*
pos
<0)

152 *
pos
=
game_num_avaû
-1;

153 i‡(*
pos
>(
game_num_avaû
-1))

154 *
pos
=0;

157 i‡(*
pos
<10) {

158 
võw_pos
=0;

160 i‡(*
pos
>
game_num_avaû
-11) {

161 
võw_pos
=
game_num_avaû
-21;

162 
võw_pos
=(view_pos<0?0:view_pos);

164 
võw_pos
=*
pos
-10;

169 
i
=0;i<
NUMGAMES
;i++) {

170 i‡(
_drivîs
[
i
].
avaûabÀ
==1) {

171 i‡(
aux_pos
>=
võw_pos
 &&áux_pos<=view_pos+20) {

172 
	`gp2x_gamñi°_ãxt_out
–
s¸ìn_x
, 
s¸ìn_y
, 
_drivîs
[
i
].
des¸ùti⁄
);

173 i‡(
aux_pos
==*
pos
) {

174 
	`gp2x_gamñi°_ãxt_out
–
s¸ìn_x
-10, 
s¸ìn_y
,">" );

175 
	`gp2x_gamñi°_ãxt_out
–
s¸ìn_x
-13, 
s¸ìn_y
-1,"-" );

177 
s¸ìn_y
+=8;

179 
aux_pos
++;

183 i‡(
game_num_avaû
==0)

185 
	`gp2x_gamñi°_ãxt_out
(35, 110, "NO AVAILABLE ROMS FOUND");

187 #ifde‡
ARMV7


188 
	`gp2x_gamñi°_ãxt_out
( (8*6)-8, (29*8)-6,"MAME4droid. v1.5 by D.Valdeita");

190 
	`gp2x_gamñi°_ãxt_out
( (8*6)-8, (29*8)-6,"MAME4droid v1.5 by D.Valdeita");

193 
	}
}

195 
	$game_li°_£À˘
 (
ödex
, *
game
, *
emu
) {

196 
i
;

197 
aux_pos
=0;

198 
i
=0;i<
NUMGAMES
;i++)

200 i‡(
_drivîs
[
i
].
avaûabÀ
==1)

202 if(
aux_pos
==
ödex
)

204 
	`°r˝y
(
game
,
_drivîs
[
i
].
«me
);

205 
	`°r˝y
(
emu
,
_drivîs
[
i
].
exe
);

206 
m4Æl_˝u_c‹es
=
_drivîs
[
i
].
c‹es
;

209 
aux_pos
++;

212 
	}
}

215 *
	$game_li°_des¸ùti⁄
 (
ödex
)

217 
i
;

218 
aux_pos
=0;

219 
i
=0;i<
NUMGAMES
;i++) {

220 i‡(
_drivîs
[
i
].
avaûabÀ
==1) {

221 if(
aux_pos
==
ödex
) {

222 (
_drivîs
[
i
].
des¸ùti⁄
);

224 
aux_pos
++;

228 
	}
}

230 
	$show_›ti⁄s
(*
game
)

232 
ExKey
=0;

233 
£À˘ed_›ti⁄
=0;

234 
x_Pos
 = 41;

235 
y_Pos
 = 43;

236 
›ti⁄s_cou¡
 = 12;

237 
ãxt
[256];

238 
FILE
 *
f
;

239 
i
=0;

241 
ExKey
=
	`gp2x_joy°ick_ªad
(0)&0x8c0ff55){

242 
	`gp2x_video_Êù
();

243 
	`gp2x_timî_dñay
(1);

247 
	`•rötf
(
ãxt
,
	`gë_documíts_∑th
("‰⁄ãnd/%s_v5.cfg"),
game
);

248 
f
=
	`f›í
(
ãxt
,"r");

249 i‡(
f
) {

250 
	`fsˇnf
(
f
,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",&
m4Æl_video_a•e˘
,&
m4Æl_video_rŸ©e
,&
m4Æl_video_sync
,

251 &
m4Æl_‰ameskù
,&
m4Æl_sound
,&
m4Æl_buâ⁄s
,&
m4Æl_˛ock_˝u
,&
m4Æl_˛ock_sound
,&
i
,&
m4Æl_chót
,&
m4Æl_video_dïth
,&
m4Æl_waysStick
,&
m4Æl_˝u_c‹es
);

252 
	`f˛o£
(
f
);

258 
	`lﬂd_bmp_8bµ
(
gp2x_s¸ìn8
,
gp2xmíu_bmp
);

261 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
,"Selected Game:\0");

262 
	`°∫˝y
 (
ãxt
,
	`game_li°_des¸ùti⁄
(
œ°_game_£À˘ed
),33);

263 
ãxt
[32]='\0';

264 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+10,
ãxt
);

267 
m4Æl_video_a•e˘
)

269 0: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Original"); ;

273 1: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Cropping 4/3"); ;

274 2: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Cropping 3/4"); ;

276 3: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Fixed 320x240"); ;

277 4: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Fixed 240x320"); ;

278 5: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Fixed 640x480"); ;

279 6: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+30,"Video Aspect Fixed 480x640"); ;

283 
m4Æl_video_rŸ©e
)

285 0: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+40,"Video Rotate No"); ;

286 1: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+40,"Video Rotate Yes"); ;

287 2: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+40,"Video Rotate TATE"); ;

291 
m4Æl_video_dïth
)

293 -1: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+50,"Video Depth Auto"); ;

294 8: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+50,"Video Depth 8 bit"); ;

295 16: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+50,"Video Depth 16 bit"); ;

299 
m4Æl_video_sync
)

301 0: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+60, "Video Sync Normal"); ;

302 1: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+60, "Video Sync DblBuf"); ;

303 -1: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+60,"Video Sync OFF"); ;

307 if(
m4Æl_‰ameskù
==-1) {

308 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+70, "Frame-Skip Auto");

311 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+70,"Føme-Skù %d",
m4Æl_‰ameskù
);

315 
m4Æl_sound
)

317 0: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","OFF"); ;

319 1: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (11 KHz fast)"); ;

320 2: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (22 KHz fast)"); ;

321 3: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (33 KHz fast)"); ;

322 4: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (44 KHz fast)"); ;

324 5: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (11 KHz)"); ;

325 6: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (22 KHz)"); ;

326 7: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (33 KHz)"); ;

327 8: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (44 KHz)"); ;

329 9: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (11 KHz stereo)"); ;

330 10: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (22 KHz stereo)"); ;

331 11: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (33 KHz stereo)"); ;

332 12: 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+80,"Sound %s","ON (44 KHz stereo)"); ;

337 
m4Æl_waysStick
)

339 8: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+90, "Stick 8-way"); ;

340 4: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+90, "Stick 4-way"); ;

341 2: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+90, "Stick 2-way"); ;

345 
m4Æl_buâ⁄s
)

347 0: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 0 Button"); ;

348 1: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 1 Button"); ;

349 2: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 2 Buttons"); ;

350 3: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 3 Buttons (A=B+X)"); ;

351 4: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 3 Buttons"); ;

352 5: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons 4 Buttons"); ;

353 6: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+100, "Num Buttons All Buttons"); ;

357 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+110,"CPU Clock %d%%",
m4Æl_˛ock_˝u
);

360 
	`gp2x_gamñi°_ãxt_out_fmt
(
x_Pos
,
y_Pos
+120,"AudiÿClock %d%%",
m4Æl_˛ock_sound
);

364 if(
m4Æl_ASMC‹es
)

366 
m4Æl_˝u_c‹es
)

368 0: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores None"); ;

369 1: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores Cyclone"); ;

370 2: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores DrZ80"); ;

371 3: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores Cyclone+DrZ80"); ;

372 4: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores DrZ80(snd)"); ;

373 5: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores Cyclone+DrZ80(snd)"); ;

374 6: 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores All"); ;

379 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+130, "CPU ASM cores None");

383 i‡(
m4Æl_chót
)

384 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+140,"Cheats ON");

386 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+140,"Cheats OFF");

389 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
,
y_Pos
+160,"Press BÅo confirm, XÅoÑeturn\0");

392 
	`gp2x_gamñi°_ãxt_out
(
x_Pos
-16,
y_Pos
+(
£À˘ed_›ti⁄
*10)+30," >");

394 
	`gp2x_video_Êù
();

396 
	`gp2x_timî_dñay
(150);

397 
ExKey
=
	`gp2x_joy°ick_ªad
(0)&0x8c0ff55;

399 if(
ExKey
 & 
GP2X_DOWN
){

400 
£À˘ed_›ti⁄
++;

401 
£À˘ed_›ti⁄
 = sñe˘ed_›ti⁄ % 
›ti⁄s_cou¡
;

403 if(
ExKey
 & 
GP2X_UP
){

404 
£À˘ed_›ti⁄
--;

405 if(
£À˘ed_›ti⁄
<0)

406 
£À˘ed_›ti⁄
 = 
›ti⁄s_cou¡
 - 1;

408 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_L
 || ExKey & 
GP2X_RIGHT
 || ExKey & 
GP2X_LEFT
)

410 
£À˘ed_›ti⁄
) {

412 if((
ExKey
 & 
GP2X_R
Ë|| (ExKey & 
GP2X_RIGHT
))

414 
m4Æl_video_a•e˘
++;

415 i‡(
m4Æl_video_a•e˘
>6)

416 
m4Æl_video_a•e˘
=0;

421 
m4Æl_video_a•e˘
--;

422 i‡(
m4Æl_video_a•e˘
<0)

423 
m4Æl_video_a•e˘
=6;

427 if((
ExKey
 & 
GP2X_R
Ë|| (ExKey & 
GP2X_RIGHT
))

429 
m4Æl_video_rŸ©e
++;

430 i‡(
m4Æl_video_rŸ©e
>2)

431 
m4Æl_video_rŸ©e
=0;

435 
m4Æl_video_rŸ©e
--;

436 i‡(
m4Æl_video_rŸ©e
<0)

437 
m4Æl_video_rŸ©e
=2;

441 
m4Æl_video_dïth
)

443 -1: 
m4Æl_video_dïth
=8; ;

444 8: 
m4Æl_video_dïth
=16; ;

445 16: 
m4Æl_video_dïth
=-1; ;

449 
m4Æl_video_sync
=m4all_video_sync+1;

450 i‡(
m4Æl_video_sync
>1)

451 
m4Æl_video_sync
=-1;

455 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_RIGHT
 )

457 
m4Æl_‰ameskù
 ++;

458 i‡(
m4Æl_‰ameskù
>11)

459 
m4Æl_‰ameskù
=-1;

463 
m4Æl_‰ameskù
--;

464 i‡(
m4Æl_‰ameskù
<-1)

465 
m4Æl_‰ameskù
=11;

469 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_RIGHT
)

471 
m4Æl_sound
 ++;

472 i‡(
m4Æl_sound
>12)

473 
m4Æl_sound
=0;

477 
m4Æl_sound
--;

478 i‡(
m4Æl_sound
<0)

479 
m4Æl_sound
=12;

483 
m4Æl_waysStick
)

485 8: 
m4Æl_waysStick
=4; ;

486 4: 
m4Æl_waysStick
=2; ;

487 2: 
m4Æl_waysStick
=8; ;

491 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_RIGHT
)

493 
m4Æl_buâ⁄s
 ++;

494 i‡(
m4Æl_buâ⁄s
>6)

495 
m4Æl_buâ⁄s
=0;

499 
m4Æl_buâ⁄s
--;

500 i‡(
m4Æl_buâ⁄s
<0)

501 
m4Æl_buâ⁄s
=6;

506 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_RIGHT
)

508 
m4Æl_˛ock_˝u
 += 10;

509 i‡(
m4Æl_˛ock_˝u
 > 200)

510 
m4Æl_˛ock_˝u
 = 200;

514 
m4Æl_˛ock_˝u
 -= 10;

515 i‡(
m4Æl_˛ock_˝u
 < 10)

516 
m4Æl_˛ock_˝u
 = 10;

521 if(
ExKey
 & 
GP2X_R
 || ExKey & 
GP2X_RIGHT
)

523 
m4Æl_˛ock_sound
 += 10;

524 i‡(
m4Æl_˛ock_sound
 > 200)

525 
m4Æl_˛ock_sound
 = 200;

528 
m4Æl_˛ock_sound
 -= 10;

529 i‡(
m4Æl_˛ock_sound
 < 10)

530 
m4Æl_˛ock_sound
 = 10;

534 
m4Æl_˝u_c‹es
=(m4all_cpu_cores+1)%7;

537 
m4Æl_chót
=!m4all_cheat;

542 i‡((
ExKey
 & 
GP2X_A
Ë|| (ExKey & 
GP2X_B
Ë|| (ExKey & 
GP2X_PUSH
Ë|| (ExKey & 
GP2X_START
))

545 
	`•rötf
(
ãxt
,
	`gë_documíts_∑th
("‰⁄ãnd/%s_v5.cfg"),
game
);

546 
f
=
	`f›í
(
ãxt
,"w");

547 i‡(
f
) {

548 
	`Ârötf
(
f
,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
m4Æl_video_a•e˘
,
m4Æl_video_rŸ©e
,
m4Æl_video_sync
,

549 
m4Æl_‰ameskù
,
m4Æl_sound
,
m4Æl_buâ⁄s
,
m4Æl_˛ock_˝u
,
m4Æl_˛ock_sound
,
i
,
m4Æl_chót
,
m4Æl_video_dïth
,
m4Æl_waysStick
,
m4Æl_˝u_c‹es
);

550 
	`f˛o£
(
f
);

551 
	`sync
();

557 i‡((
ExKey
 & 
GP2X_X
Ë|| (ExKey & 
GP2X_Y
Ë|| (ExKey & 
GP2X_SELECT
))

563 
	}
}

565 
	$gp2x_exô
()

567 
	}
}

569 
	$£À˘_game
(*
emu
, *
game
)

572 
ExKey
;

575 
	`°r˝y
(
game
,"builtinn");

578 
	`gp2x_video_Êù
();

581 
ExKey
=
	`gp2x_joy°ick_ªad
(0)&0x8c0ff55){

582 
	`gp2x_video_Êù
();

583 
	`gp2x_timî_dñay
(1);

589 
	`game_li°_võw
(&
œ°_game_£À˘ed
);

590 
	`gp2x_video_Êù
();

592 
	`gp2x_timî_dñay
(100);

593 
ExKey
=
	`gp2x_joy°ick_ªad
(0);

595 i‡(
ExKey
 & 
GP2X_UP
Ë
œ°_game_£À˘ed
--;

596 i‡(
ExKey
 & 
GP2X_DOWN
Ë
œ°_game_£À˘ed
++;

597 i‡((
ExKey
 & 
GP2X_L
Ë|| ExKey & 
GP2X_LEFT
Ë
œ°_game_£À˘ed
-=21;

598 i‡((
ExKey
 & 
GP2X_R
Ë|| ExKey & 
GP2X_RIGHT
Ë
œ°_game_£À˘ed
+=21;

601 i‡(((
ExKey
 & 
GP2X_A
Ë|| (ExKey & 
GP2X_B
Ë|| (ExKey & 
GP2X_PUSH
Ë|| (ExKey & 
GP2X_START
)Ë&& 
game_num_avaû
!=0)

604 
	`game_li°_£À˘
(
œ°_game_£À˘ed
, 
game
, 
emu
);

609 
m4Æl_video_a•e˘
=0;

610 
m4Æl_video_rŸ©e
=0;

611 
m4Æl_video_sync
=0;

612 
m4Æl_‰ameskù
=-1;

613 
m4Æl_chót
=0;

614 
m4Æl_waysStick
 = 8;

616 
m4Æl_sound
 = 4;

617 
m4Æl_video_dïth
=16;

619 if(
m4Æl_HiS≥cs
)

621 
m4Æl_˛ock_˝u
= 100;

622 
m4Æl_˛ock_sound
= 100;

623 
m4Æl_buâ⁄s
=2;

624 
m4Æl_sound
=12;

628 
m4Æl_˛ock_˝u
= 80;

629 
m4Æl_˛ock_sound
= 80;

630 
m4Æl_buâ⁄s
=2;

633 if(
	`show_›ti⁄s
(
game
))

640 
	}
}

642 
	$execuã_game
 (*
∂ayemu
, *
∂aygame
)

644 *
¨gs
[255];

645 
°r
[8][64];

646 
n
=0;

647 
i
=0;

650 
¨gs
[
n
]=
∂ayemu
;Ç++;

653 
¨gs
[
n
]=
∂aygame
;Ç++;

664 i‡(
m4Æl_video_dïth
==8)

666 
¨gs
[
n
]="-depth";Ç++;

667 
¨gs
[
n
]="8";Ç++;

669 i‡(
m4Æl_video_dïth
==16)

671 
¨gs
[
n
]="-depth";Ç++;

672 
¨gs
[
n
]="16";Ç++;

676 
m4Æl_a•e˘R©io
 = 
m4Æl_¸›Video
 = 
m4Æl_fixedRes
 = 0;

677 i‡(
m4Æl_video_a•e˘
==0)

679 
m4Æl_a•e˘R©io
 = 1;

680 }if(
m4Æl_video_a•e˘
==1){

681 
m4Æl_¸›Video
 = 1;

682 }if(
m4Æl_video_a•e˘
==2){

683 
m4Æl_¸›Video
 = 2;

684 }if(
m4Æl_video_a•e˘
==3){

685 
m4Æl_fixedRes
 = 1;

687 }if(
m4Æl_video_a•e˘
==4){

688 
m4Æl_fixedRes
 = 2;

689 }if(
m4Æl_video_a•e˘
==5){

690 
m4Æl_fixedRes
 = 3;

691 }if(
m4Æl_video_a•e˘
==6){

692 
m4Æl_fixedRes
 = 4;

696 i‡((
m4Æl_video_rŸ©e
>=1) && (m4all_video_rotate<=2))

698 
¨gs
[
n
]="-ror";Ç++;

701 i‡((
m4Æl_video_rŸ©e
>=2) && (m4all_video_rotate<=2))

703 
¨gs
[
n
]="-rotatecontrols";Ç++;

707 i‡(
m4Æl_video_sync
==1)

709 
¨gs
[
n
]="-nodirty";Ç++;

711 i‡(
m4Æl_video_sync
==-1)

713 
¨gs
[
n
]="-nothrottle";Ç++;

717 i‡(
m4Æl_‰ameskù
>=0)

719 
¨gs
[
n
]="-frameskip";Ç++;

720 
	`•rötf
(
°r
[
i
],"%d",
m4Æl_‰ameskù
);

721 
¨gs
[
n
]=
°r
[
i
]; i++;Ç++;

725 i‡(
m4Æl_sound
==0)

727 
¨gs
[
n
]="-soundcard";Ç++;

728 
¨gs
[
n
]="0";Ç++;

730 i‡((
m4Æl_sound
==1) || (m4all_sound==5) || (m4all_sound==9))

732 
¨gs
[
n
]="-samplerate";Ç++;

733 
¨gs
[
n
]="11025";Ç++;

735 i‡((
m4Æl_sound
==2) || (m4all_sound==6) || (m4all_sound==10))

737 
¨gs
[
n
]="-samplerate";Ç++;

738 
¨gs
[
n
]="22050";Ç++;

740 i‡((
m4Æl_sound
==3) || (m4all_sound==7) || (m4all_sound==11))

742 
¨gs
[
n
]="-samplerate";Ç++;

743 
¨gs
[
n
]="32000";Ç++;

745 i‡((
m4Æl_sound
==4) || (m4all_sound==8) || (m4all_sound==12))

747 
¨gs
[
n
]="-samplerate";Ç++;

748 
¨gs
[
n
]="44100";Ç++;

751 i‡((
m4Æl_sound
>=1) && (m4all_sound<=4))

753 
¨gs
[
n
]="-fastsound";Ç++;

755 i‡(
m4Æl_sound
>=9)

757 
¨gs
[
n
]="-stereo";Ç++;

761 i‡(
m4Æl_˛ock_˝u
!=100)

763 
¨gs
[
n
]="-uclock";Ç++;

764 
	`•rötf
(
°r
[
i
],"%d",100-
m4Æl_˛ock_˝u
);

765 
¨gs
[
n
]=
°r
[
i
]; i++;Ç++;

769 i‡(
m4Æl_˛ock_˝u
!=100)

771 
¨gs
[
n
]="-uclocks";Ç++;

772 
	`•rötf
(
°r
[
i
],"%d",100-
m4Æl_˛ock_sound
);

773 
¨gs
[
n
]=
°r
[
i
]; i++;Ç++;

776 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4Æl.so", "ASM CORES %d %d\n",
m4Æl_ASMC‹es
,
m4Æl_˝u_c‹es
);

779 if(
m4Æl_ASMC‹es
)

781 i‡((
m4Æl_˝u_c‹es
==1) || (m4all_cpu_cores==3) || (m4all_cpu_cores==5) || (m4all_cpu_cores==6))

783 
¨gs
[
n
]="-cyclone";Ç++;

786 i‡((
m4Æl_˝u_c‹es
==2) || (m4all_cpu_cores==3) || (m4all_cpu_cores==6))

788 
¨gs
[
n
]="-drz80";Ç++;

791 i‡((
m4Æl_˝u_c‹es
==4) || (m4all_cpu_cores==5) || (m4all_cpu_cores==6))

793 
¨gs
[
n
]="-drz80_snd";Ç++;

797 i‡(
m4Æl_chót
)

799 
¨gs
[
n
]="-cheat";Ç++;

804 
¨gs
[
n
]="-romdir";Ç++;

805 
	`•rötf
(
°r
[
i
],"%s",
	`gë_documíts_∑th
("roms"));

806 
¨gs
[
n
]=
°r
[
i
]; i++;Ç++;

809 
¨gs
[
n
]=
NULL
;

811 
i
=0; i<
n
; i++)

813 
	`¥ötf
("%†",
¨gs
[
i
]);

814 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4Æl.so", "¨g: %s\n",
¨gs
[
i
]);

816 
	`¥ötf
("\n");

818 
m4Æl_öGame
 = 1;

819 
m4Æl_exôGame
=0;

820 
m4Æl_hide_LR
 = 
m4Æl_buâ⁄s
!=6;

821 
m4Æl_B∂usX
 = 
m4Æl_buâ⁄s
==3;

822 
m4Æl_œndsˇ≥_buâ⁄s
 = 
m4Æl_buâ⁄s
 <= 3 ? m4all_buttons : (m4all_buttons - 1) ;

825 
	`my_™droid_maö
(
n
, 
¨gs
);

827 if(
m4Æl_HiS≥cs
)

828 
m4Æl_buâ⁄s
=2;

830 
m4Æl_buâ⁄s
=2;

832 
m4Æl_hide_LR
 = 0;

833 
m4Æl_B∂usX
 = 0;

835 
m4Æl_exôGame
=0;

836 
m4Æl_öGame
 = 0;

837 
m4Æl_œndsˇ≥_buâ⁄s
 = 2;

838 
emuœãd_width
 = 320;

839 
emuœãd_height
 = 240;

840 
	`gp2x_£t_video_mode
(16,320,240);

842 
	}
}

845 "C" 
	$™droid_maö
 (
¨gc
, **
¨gv
)

847 
FILE
 *
f
;

849 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4all.so", "init iOS frontend");

856 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4all.so", "creados directorios");

859 
	`gp2x_öô
(1000,8,22050,16,0,60);

862 
m4Æl_sound
 = 4;

863 
m4Æl_video_dïth
 = 16;

865 if(
m4Æl_HiS≥cs
)

867 
m4Æl_˛ock_˝u
= 100;

868 
m4Æl_˛ock_sound
= 100;

869 
m4Æl_buâ⁄s
=2;

870 
m4Æl_sound
=12;

874 
	`gp2x_öåo_s¸ìn
();

877 
	`game_li°_öô
(
¨gc
);

891 
åue
)

894 
f
=
	`f›í
(
	`gë_documíts_∑th
("frontend/mame_v2.cfg"),"r");

895 i‡(
f
) {

896 
	`fsˇnf
(
f
,"%d",&
œ°_game_£À˘ed
);

897 
	`f˛o£
(
f
);

901 
	`£À˘_game
(
∂ayemu
,
∂aygame
);

904 
f
=
	`f›í
(
	`gë_documíts_∑th
("frontend/mame_v2.cfg"),"w");

905 i‡(
f
) {

906 
	`Ârötf
(
f
,"%d",
œ°_game_£À˘ed
);

907 
	`f˛o£
(
f
);

908 
	`sync
();

912 
	`execuã_game
 (
∂ayemu
,
∂aygame
);

916 
	`exô
 (0);

917 
	}
}

	@android_frontend_list.h

1 
	sdrivî
 {

2 
	mdes¸ùti⁄
[128];

3 
	m«me
[16];

4 
	mexe
[16];

5 
	mc‹es
;

6 
	mavaûabÀ
;

9 
	#NUMGAMES
 2270

	)

11 
drivî
 
	g_drivîs
[
NUMGAMES
] = {

	@android_frontend_menu.h

6 
	ggp2xmíu_bmp
[77880] = {

	@android_frontend_splash.h

6 
	ggp2x•œsh_bmp
[77880] = {

	@android_main.cpp

11 
	~"drivî.h
"

12 
	~<sig«l.h
>

13 
	~<time.h
>

14 
	~<˘y≥.h
>

15 
	~"°d¨g.h
"

16 
	~"°rög.h
"

17 
	~"möimÆ.h
"

19 
msdos_öô_sound
();

20 
msdos_öô_öput
();

21 
msdos_shutdown_sound
();

22 
msdos_shutdown_öput
();

23 
‰⁄ãnd_hñp
 (
¨gc
, **
¨gv
);

24 
∑r£_cmdlöe
 (
¨gc
, **
¨gv
, 
game
);

25 
öô_öpdú
();

27 
FILE
 *
	gîr‹log
;

31 
	$osd_öô
()

33 i‡(
	`msdos_öô_sound
())

35 
	`msdos_öô_öput
();

37 
	}
}

41 
	$osd_exô
()

43 
	`msdos_shutdown_sound
();

44 
	`msdos_shutdown_öput
();

45 
	}
}

50 
	$fuzzycmp
 (c⁄° *
s
, c⁄° *
l
)

52 
g≠s
 = 0;

53 
m©ch
 = 0;

54 
œ°
 = 1;

56 ; *
s
 && *
l
;Ü++)

58 i‡(*
s
 =*
l
)

59 
m©ch
 = 1;

60 i‡(*
s
 >'a' && *†<'z' && (*†- 'a'Ë=(*
l
 - 'A'))

61 
m©ch
 = 1;

62 i‡(*
s
 >'A' && *†<'Z' && (*†- 'A'Ë=(*
l
 - 'a'))

63 
m©ch
 = 1;

65 
m©ch
 = 0;

67 i‡(
m©ch
)

68 
s
++;

70 i‡(
m©ch
 !
œ°
)

72 
œ°
 = 
m©ch
;

73 i‡(!
m©ch
)

74 
g≠s
++;

79 ; *
s
; s++)

80 
g≠s
++;

82  
g≠s
;

83 
	}
}

86 
	$my_™droid_maö
 (
¨gc
, **
¨gv
)

88 
ªs
, 
i
, 
j
 = 0, 
game_ödex
;

89 *
∂ayback«me
 = 
NULL
;

90 
u£_cy˛⁄e
=0;

91 
u£_drz80
=0;

92 
u£_drz80_sound
=0;

93 
video_sˇÀ
;

94 
video_b‹dî
;

95 
video_a•e˘
;

96 
thrŸée
;

97 
gp2x_øm_twóks
;

99 
	`mem£t
(&
›ti⁄s
,0,(options));

102 
îr‹log
 = 0;

104 
game_ödex
 = -1;

105 
thrŸée
=1;

107 
i
 = 1;ò< 
¨gc
;i++)

109 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-log") == 0)

110 
îr‹log
 = 
	`f›í
("error.log","wa");

112 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-cyclone") == 0)

113 
u£_cy˛⁄e
=1;

114 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-drz80") == 0)

115 
u£_drz80
=1;

116 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-drz80_snd") == 0)

117 
u£_drz80_sound
=1;

119 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-scale") == 0)

120 
video_sˇÀ
=1;

121 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-border") == 0)

122 
video_b‹dî
=1;

123 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-aspect") == 0)

124 
video_a•e˘
=1;

126 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-nothrottle") == 0)

128 
thrŸée
=0;

132 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-ramtweaks") == 0)

133 
gp2x_øm_twóks
=1;

135 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-playback") == 0)

137 
i
++;

138 i‡(
i
 < 
¨gc
)

139 
∂ayback«me
 = 
¨gv
[
i
];

164 i‡(
∂ayback«me
 !
NULL
)

165 
›ti⁄s
.
∂ayback
 = 
	`osd_f›í
(
∂ayback«me
,0,
OSD_FILETYPE_INPUTLOG
,0);

168 i‡(
›ti⁄s
.
∂ayback
)

170 
INP_HEADER
 
öp_hódî
;

173 
	`osd_‰ód
(
›ti⁄s
.
∂ayback
, &
öp_hódî
, (
INP_HEADER
));

175 i‡(!
	`iß um
(
öp_hódî
.
«me
[0]))

176 
	`osd_f£ek
(
›ti⁄s
.
∂ayback
, 0, 
SEEK_SET
);

179 
i
 = 0; (
drivîs
[i] != 0); i++)

181 i‡(
	`°rcmp
(
drivîs
[
i
]->
«me
, 
öp_hódî
.name) == 0)

183 
game_ödex
 = 
i
;

184 
	`¥ötf
("Playing backÖreviouslyÑecorded game %s (%s) [pressÑeturn]\n",

185 
drivîs
[
game_ödex
]->
«me
,drivîs[game_ödex]->
des¸ùti⁄
);

186 
	`gëch¨
();

194 i‡(
game_ödex
 == -1)

197 
j
 = 1; j < 
¨gc
; j++)

199 i‡(
¨gv
[
j
][0] != '-') ;

203 
i
 = 0; 
drivîs
[i] && (
game_ödex
 == -1); i++)

205 i‡(
	`°rˇ£cmp
(
¨gv
[
j
],
drivîs
[
i
]->
«me
) == 0)

207 
game_ödex
 = 
i
;

213 i‡(
game_ödex
 == -1)

215 
fuzz
 = 9999;

217 
i
 = 0; (
drivîs
[i] != 0); i++)

219 
tmp
;

220 
tmp
 = 
	`fuzzycmp
(
¨gv
[
j
], 
drivîs
[
i
]->
des¸ùti⁄
);

222 i‡(
tmp
 > 
fuzz
)

226 i‡(
tmp
 =
fuzz
)

229 i‡(
drivîs
[
i
]->
˛⁄e_of
 != 0

230 && !(
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
))

234 i‡((!
drivîs
[
game_ödex
]->
Êags
 & 
GAME_NOT_WORKING
) ||

235 (
drivîs
[
i
]->
Êags
 & 
GAME_NOT_WORKING
))

242 
game_ödex
 = 
i
;

243 
fuzz
 = 
tmp
;

246 i‡(
game_ödex
 != -1)

247 
	`¥ötf
("fuzzyÇamêcom∑ª,Ñu¬ög %s\n",
drivîs
[
game_ödex
]->
«me
);

251 i‡(
game_ödex
 == -1)

253 
	`¥ötf
("Gamê\"%s\"ÇŸ suµ‹ãd\n", 
¨gv
[
j
]);

258 
	`∑r£_cmdlöe
 (
¨gc
, 
¨gv
, 
game_ödex
);

261 
soundˇrd
;

263 i‡(
soundˇrd
 == 0) {

264 
Machöe
->
ßm∂e_øã
 = 0;

265 
›ti⁄s
.
ßm∂î©e
=0;

270 
i
 = 1; i < 
¨gc
; i++)

272 i‡(
	`°rˇ£cmp
(
¨gv
[
i
],"-record") == 0)

274 
i
++;

275 i‡(
i
 < 
¨gc
)

276 
›ti⁄s
.
ªc‹d
 = 
	`osd_f›í
(
¨gv
[
i
],0,
OSD_FILETYPE_INPUTLOG
,1);

280 i‡(
›ti⁄s
.
ªc‹d
)

282 
INP_HEADER
 
öp_hódî
;

284 
	`mem£t
(&
öp_hódî
, '\0', (
INP_HEADER
));

285 
	`°r˝y
(
öp_hódî
.
«me
, 
drivîs
[
game_ödex
]->name);

295 
	`osd_fwrôe
(
›ti⁄s
.
ªc‹d
, &
öp_hódî
, (
INP_HEADER
));

299 i‡(
u£_cy˛⁄e
)

301 
i
=0;i<
MAX_CPU
;i++)

303 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

304 #ifde‡
NEOMAME


305 i‡(((*
ty≥
)&0xff)==
CPU_M68000
)

307 i‡(((*
ty≥
)&0xff)==
CPU_M68000
 || ((*ty≥)&0xff)==
CPU_M68010
 )

310 *
ty≥
=((*ty≥)&(~0xff))|
CPU_CYCLONE
;

316 
i
=0;i<
MAX_CPU
;i++)

318 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

319 i‡(((*
ty≥
)&0xff)==
CPU_CYCLONE
)

321 *
ty≥
=((*ty≥)&(~0xff))|
CPU_M68010
;

327 i‡(
u£_drz80
)

329 
i
=0;i<
MAX_CPU
;i++)

331 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

332 i‡(((*
ty≥
)&0xff)==
CPU_Z80
 && !((*ty≥)&
CPU_AUDIO_CPU
))

334 *
ty≥
=((*ty≥)&(~0xff))|
CPU_DRZ80
;

340 
i
=0;i<
MAX_CPU
;i++)

342 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

343 i‡((((*
ty≥
)&0xff)==
CPU_DRZ80
Ë&& !((*ty≥)&
CPU_AUDIO_CPU
))

345 *
ty≥
=((*ty≥)&(~0xff))|
CPU_Z80
;

351 i‡(
u£_drz80_sound
)

353 
i
=0;i<
MAX_CPU
;i++)

355 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

356 i‡((((*
ty≥
)&0xff)==
CPU_Z80
Ë&& ((*ty≥)&
CPU_AUDIO_CPU
))

358 *
ty≥
=((*ty≥)&(~0xff))|
CPU_DRZ80
;

364 
i
=0;i<
MAX_CPU
;i++)

366 *
ty≥
=(*)&(
drivîs
[
game_ödex
]->
drv
->
˝u
[
i
].
˝u_ty≥
);

367 i‡((((*
ty≥
)&0xff)==
CPU_DRZ80
Ë&& ((*ty≥)&
CPU_AUDIO_CPU
))

369 *
ty≥
=((*ty≥)&(~0xff))|
CPU_Z80
;

377 i‡–(
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"hbarrel")==0) || (strcasecmp(drivers[game_index]->name,"hbarrelw")==0) ||

378 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"midres")==0) || (strcasecmp(drivers[game_index]->name,"midresu")==0) ||

379 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"midresj")==0) || (strcasecmp(drivers[game_index]->name,"tnk3")==0) ||

380 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"tnk3j")==0) || (strcasecmp(drivers[game_index]->name,"ikari")==0) ||

381 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"ikarijp")==0) || (strcasecmp(drivers[game_index]->name,"ikarijpb")==0) ||

382 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"victroad")==0) || (strcasecmp(drivers[game_index]->name,"dogosoke")==0) ||

383 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"gwar")==0) || (strcasecmp(drivers[game_index]->name,"gwarj")==0) ||

384 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"gwara")==0) || (strcasecmp(drivers[game_index]->name,"gwarb")==0) ||

385 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"bermudat")==0) || (strcasecmp(drivers[game_index]->name,"bermudaj")==0) ||

386 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"bermudaa")==0) || (strcasecmp(drivers[game_index]->name,"mplanets")==0) ||

387 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"forgottn")==0) || (strcasecmp(drivers[game_index]->name,"lostwrld")==0) ||

388 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"gondo")==0) || (strcasecmp(drivers[game_index]->name,"makyosen")==0) ||

389 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"topgunr")==0) || (strcasecmp(drivers[game_index]->name,"topgunbl")==0) ||

390 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"tron")==0) || (strcasecmp(drivers[game_index]->name,"tron2")==0) ||

391 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"kroozr")==0) ||(strcasecmp(drivers[game_index]->name,"crater")==0) ||

392 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"dotron")==0) || (strcasecmp(drivers[game_index]->name,"dotrone")==0) ||

393 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"zwackery")==0) || (strcasecmp(drivers[game_index]->name,"ikari3")==0) ||

394 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"searchar")==0) || (strcasecmp(drivers[game_index]->name,"sercharu")==0) ||

395 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"timesold")==0) || (strcasecmp(drivers[game_index]->name,"timesol1")==0) ||

396 (
	`°rˇ£cmp
(
drivîs
[
game_ödex
]->
«me
,"btlfield")==0) || (strcasecmp(drivers[game_index]->name,"aztarac")==0))

398 
u£_mou£
;

399 
u£_mou£
=0;

403 
	`¥ötf
 ("%†(%s)...\n",
drivîs
[
game_ödex
]->
des¸ùti⁄
,drivîs[game_ödex]->
«me
);

404 
ªs
 = 
	`run_game
 (
game_ödex
);

407 i‡(
îr‹log
Ë
	`f˛o£
 (errorlog);

408 i‡(
›ti⁄s
.
∂ayback
Ë
	`osd_f˛o£
 (options.playback);

409 i‡(
›ti⁄s
.
ªc‹d
Ë
	`osd_f˛o£
 (options.record);

410 i‡(
›ti⁄s
.
œnguage_fûe
Ë
	`osd_f˛o£
 (options.language_file);

412 i‡(
ªs
!=0)

415 
	`gp2x_video_Êù_sögÀ
();

416 
	`gp2x_joy°ick_¥ess
(0);

422 
	}
}

424 
CLIB_DECL
 
	$logîr‹
(c⁄° *
ãxt
,...)

426 i‡(
îr‹log
)

428 
va_li°
 
¨g
;

429 
	`va_°¨t
(
¨g
,
ãxt
);

430 
	`vÂrötf
(
îr‹log
,
ãxt
,
¨g
);

431 
	`va_íd
(
¨g
);

433 
	}
}

	@blit.cpp

1 
	~"drivî.h
"

2 
	~"dúty.h
"

5 *
dúty_ﬁd
;

6 *
dúty_√w
;

7 
gfx_xoff£t
;

8 
gfx_yoff£t
;

9 
gfx_di•œy_löes
;

10 
gfx_di•œy_cﬁumns
;

11 
gfx_width
;

12 
gfx_height
;

13 
skùlöes
;

14 
skùcﬁumns
;

16 
	#SCREEN8
 
gp2x_s¸ìn8


	)

17 
	#SCREEN16
 
gp2x_s¸ìn15


	)

18 
	#FLIP_VIDEO
 
	`gp2x_video_Êù
()

	)

20 
	~"möimÆ.h
"

22 
UINT32
 *
	g∑Àâe_16bô_lookup
;

24 
	$blôs¸ìn_dúty1_cﬁ‹8
(
osd_bôm≠
 *
bôm≠
)

26 
x
, 
y
;

27 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0]);

28 *
lb
=
bôm≠
->
löe
[
skùlöes
] + 
skùcﬁumns
;

29 *
addªss
=
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

31 
y
 = 0; y < 
gfx_di•œy_löes
; y += 16)

33 
x
 = 0; x < 
gfx_di•œy_cﬁumns
; )

35 
w
 = 16;

36 i‡(
	`ISDIRTY
(
x
,
y
))

38 
h
;

39 *
lb0
 = 
lb
 + 
x
;

40 *
addªss0
 = 
addªss
 + 
x
;

41 
x
 + 
w
 < 
gfx_di•œy_cﬁumns
 && 
	`ISDIRTY
(x+w,
y
))

42 
w
 += 16;

43 i‡(
x
 + 
w
 > 
gfx_di•œy_cﬁumns
)

44 
w
 = 
gfx_di•œy_cﬁumns
 - 
x
;

45 
h
 = 0; ((h < 16Ë&& ((
y
 + hË< 
gfx_di•œy_löes
)); h++)

47 
wx
;

48 
wx
=0;wx<
w
;wx++)

50 
addªss0
[
wx
] = 
gp2x_∑Àâe
[
lb0
[wx]];

52 
lb0
 +
width
;

53 
addªss0
 +
gfx_width
;

56 
x
 +
w
;

58 
lb
 +16 * 
width
;

59 
addªss
 +16 * 
gfx_width
;

62 
FLIP_VIDEO
;

63 
	}
}

65 
	$blôs¸ìn_dúty0_cﬁ‹8
(
osd_bôm≠
 *
bôm≠
)

67 
x
,
y
;

68 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0]);

69 
cﬁumns
=
gfx_di•œy_cﬁumns
;

70 *
lb
 = 
bôm≠
->
löe
[
skùlöes
] + 
skùcﬁumns
;

71 *
addªss
 = 
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

73 
y
 = 0; y < 
gfx_di•œy_löes
; y++)

75 
x
 = 0; x < 
cﬁumns
; x++)

77 
addªss
[
x
] = 
gp2x_∑Àâe
[
lb
[x]];

79 
lb
+=
width
;

80 
addªss
+=
gfx_width
;

83 
FLIP_VIDEO
;

84 
	}
}

86 
	$blôs¸ìn_dúty1_∑Àâized16
(
osd_bôm≠
 *
bôm≠
)

88 
x
, 
y
;

89 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0])>>1;

90 *
lb
=((*)(
bôm≠
->
löe
[
skùlöes
])Ë+ 
skùcﬁumns
;

91 *
addªss
=
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

93 
y
 = 0; y < 
gfx_di•œy_löes
; y += 16)

95 
x
 = 0; x < 
gfx_di•œy_cﬁumns
; )

97 
w
 = 16;

98 i‡(
	`ISDIRTY
(
x
,
y
))

100 
h
;

101 *
lb0
 = 
lb
 + 
x
;

102 *
addªss0
 = 
addªss
 + 
x
;

103 
x
 + 
w
 < 
gfx_di•œy_cﬁumns
 && 
	`ISDIRTY
(x+w,
y
))

104 
w
 += 16;

105 i‡(
x
 + 
w
 > 
gfx_di•œy_cﬁumns
)

106 
w
 = 
gfx_di•œy_cﬁumns
 - 
x
;

107 
h
 = 0; ((h < 16Ë&& ((
y
 + hË< 
gfx_di•œy_löes
)); h++)

109 
wx
;

110 
wx
=0;wx<
w
;wx++)

112 
addªss0
[
wx
] = 
∑Àâe_16bô_lookup
[
lb0
[wx]];

114 
lb0
 +
width
;

115 
addªss0
 +
gfx_width
;

118 
x
 +
w
;

120 
lb
 +16 * 
width
;

121 
addªss
 +16 * 
gfx_width
;

124 
FLIP_VIDEO
;

125 
	}
}

127 
	$blôs¸ìn_dúty0_∑Àâized16
(
osd_bôm≠
 *
bôm≠
)

129 
x
,
y
;

130 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0])>>1;

131 
cﬁumns
=
gfx_di•œy_cﬁumns
;

132 *
lb
 = ((*)(
bôm≠
->
löe
[
skùlöes
])Ë+ 
skùcﬁumns
;

133 *
addªss
 = 
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

135 
y
 = 0; y < 
gfx_di•œy_löes
; y++)

137 
x
 = 0; x < 
cﬁumns
; x++)

139 
addªss
[
x
] = 
∑Àâe_16bô_lookup
[
lb
[x]];

141 
lb
+=
width
;

142 
addªss
+=
gfx_width
;

145 
FLIP_VIDEO
;

146 
	}
}

148 
	$blôs¸ìn_dúty1_cﬁ‹16
(
osd_bôm≠
 *
bôm≠
)

150 
x
, 
y
;

151 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0])>>1;

152 *
lb
=((*)(
bôm≠
->
löe
[
skùlöes
])Ë+ 
skùcﬁumns
;

153 *
addªss
=
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

155 
y
 = 0; y < 
gfx_di•œy_löes
; y += 16)

157 
x
 = 0; x < 
gfx_di•œy_cﬁumns
; )

159 
w
 = 16;

160 i‡(
	`ISDIRTY
(
x
,
y
))

162 
h
;

163 *
lb0
 = 
lb
 + 
x
;

164 *
addªss0
 = 
addªss
 + 
x
;

165 
x
 + 
w
 < 
gfx_di•œy_cﬁumns
 && 
	`ISDIRTY
(x+w,
y
))

166 
w
 += 16;

167 i‡(
x
 + 
w
 > 
gfx_di•œy_cﬁumns
)

168 
w
 = 
gfx_di•œy_cﬁumns
 - 
x
;

169 
h
 = 0; ((h < 16Ë&& ((
y
 + hË< 
gfx_di•œy_löes
)); h++)

171 
wx
;

172 
wx
=0;wx<
w
;wx++)

174 
addªss0
[
wx
] = 
lb0
[wx]&0xFFDF;

176 
lb0
 +
width
;

177 
addªss0
 +
gfx_width
;

180 
x
 +
w
;

182 
lb
 +16 * 
width
;

183 
addªss
 +16 * 
gfx_width
;

186 
FLIP_VIDEO
;

187 
	}
}

189 
	$blôs¸ìn_dúty0_cﬁ‹16
(
osd_bôm≠
 *
bôm≠
)

191 
x
,
y
;

192 
width
=(
bôm≠
->
löe
[1] - bitmap->line[0])>>1;

193 
cﬁumns
=
gfx_di•œy_cﬁumns
;

194 *
lb
 = ((*)(
bôm≠
->
löe
[
skùlöes
])Ë+ 
skùcﬁumns
;

195 *
addªss
 = 
SCREEN16
 + 
gfx_xoff£t
 + (
gfx_yoff£t
 * 
gfx_width
);

197 
y
 = 0; y < 
gfx_di•œy_löes
; y++)

199 
x
 = 0; x < 
cﬁumns
; x++)

201 
addªss
[
x
] = 
lb
[x]&0xFFDF;

203 
lb
+=
width
;

204 
addªss
+=
gfx_width
;

207 
FLIP_VIDEO
;

208 
	}
}

	@config.cpp

9 
	~"drivî.h
"

10 
	~<˘y≥.h
>

11 
	~"ÆÀgro.h
"

12 
	~"sh¨ed.h
"

14 
globÆ∑th
[247];

17 
‰ameskù
,
auto‰ameskù
;

18 
video_sync
, 
waô_vsync
;

19 
u£_dúty
;

20 
skùlöes
, 
skùcﬁumns
;

21 
osd_gamma_c‹ª˘i⁄
;

22 
gfx_width
, 
gfx_height
;

25 
soundˇrd
, 
u£°îeo
, 
©ãnu©i⁄
;

28 
u£_mou£
, 
joy°ick
;

31 *
chótfûe
;

34 *
hi°‹y_fûíame
,*
mameöfo_fûíame
;

37 
decompo£_rom_ßm∂e_∑th
 (*
rom∑th
, *
ßm∂ï©h
);

38 *
nvdú
, *
hidú
, *
cfgdú
, *
öpdú
, *
°adú
, *
memˇrddú
;

39 *
¨tw‹kdú
, *
s¸ìnshŸdú
, *
Æã∫©e_«me
;

41 *
chótdú
;

44 
¨ˇde_mode
;

46 
	gmame_¨gc
;

47 **
	gmame_¨gv
;

48 
	ggame
;

49 *
	grom∑th
, *
	gßm∂ï©h
;

51 
	gundî˛ock_sound
=0;

52 
	gundî˛ock_˝u
=0;

53 
	gÁ°_sound
=0;

56 
gp2x_øm_twóks
;

57 
gp2x_˛ock
;

58 
rŸ©e_c⁄åﬁs
;

60 °ru˘ { *
	m«me
; 
	mid
; } 
	gjoy_èbÀ
[] =

62 { "n⁄e", 
JOY_TYPE_NONE
 },

63 { "auto", 
JOY_TYPE_AUTODETECT
 },

64 { "°™d¨d", 
JOY_TYPE_STANDARD
 },

65 { "duÆ", 
JOY_TYPE_2PADS
 },

66 { "4buâ⁄", 
JOY_TYPE_4BUTTON
 },

67 { "6buâ⁄", 
JOY_TYPE_6BUTTON
 },

68 { "8buâ⁄", 
JOY_TYPE_8BUTTON
 },

69 { "f•ro", 
JOY_TYPE_FSPRO
 },

70 { "wögex", 
JOY_TYPE_WINGEX
 },

71 { "sidewödî", 
JOY_TYPE_SIDEWINDER
 },

72 { "gamïad¥o", 
JOY_TYPE_GAMEPAD_PRO
 },

73 { "grù", 
JOY_TYPE_GRIP
 },

74 { "grù4", 
JOY_TYPE_GRIP4
 },

75 { "¢e¶±1", 
JOY_TYPE_SNESPAD_LPT1
 },

76 { "¢e¶±2", 
JOY_TYPE_SNESPAD_LPT2
 },

77 { "¢e¶±3", 
JOY_TYPE_SNESPAD_LPT3
 },

78 { "psxÕt1", 
JOY_TYPE_PSXPAD_LPT1
 },

79 { "psxÕt2", 
JOY_TYPE_PSXPAD_LPT2
 },

80 { "psxÕt3", 
JOY_TYPE_PSXPAD_LPT3
 },

81 { "n64Õt1", 
JOY_TYPE_N64PAD_LPT1
 },

82 { "n64Õt2", 
JOY_TYPE_N64PAD_LPT2
 },

83 { "n64Õt3", 
JOY_TYPE_N64PAD_LPT3
 },

84 { "wögw¨ri‹", 
JOY_TYPE_WINGWARRIOR
 },

85 { "£gaiß", 
JOY_TYPE_IFSEGA_ISA
 },

86 { "£g≠ci", 
JOY_TYPE_IFSEGA_PCI
 },

95 
	$gë_boﬁ
 (*
£˘i⁄
, *
›ti⁄
, *
sh‹tcut
, 
def
)

97 
ªs
, 
i
;

99 
ªs
 = 
def
;

102 
i
 = 1; i < 
mame_¨gc
; i++)

104 i‡(
mame_¨gv
[
i
][0] != '-') ;

106 i‡(
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], 
›ti⁄
) == 0)

107 
ªs
 = 1;

109 i‡(
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], shortcut) == 0))

110 
ªs
 = 1;

112 i‡(
	`°∫ˇ£cmp
(&
mame_¨gv
[
i
][1], "no", 2) == 0)

114 i‡(
	`°rˇ£cmp
(&
mame_¨gv
[
i
][3], 
›ti⁄
) == 0)

115 
ªs
 = 0;

116 i‡(
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][3], shortcut) == 0))

117 
ªs
 = 0;

120 i‡(
	`°∫ˇ£cmp
(&
mame_¨gv
[
i
][1], "auto", 4) == 0)

122 i‡(
	`°rˇ£cmp
(&
mame_¨gv
[
i
][5], 
›ti⁄
) == 0)

123 
ªs
 = -1;

124 i‡(
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][5], shortcut) == 0))

125 
ªs
 = -1;

128  
ªs
;

129 
	}
}

131 
	$gë_öt
 (*
£˘i⁄
, *
›ti⁄
, *
sh‹tcut
, 
def
)

133 
ªs
,
i
;

135 
ªs
 = 
def
;

138 
i
 = 1; i < 
mame_¨gc
; i++)

140 i‡(
mame_¨gv
[
i
][0] != '-')

142 i‡((
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], 
›ti⁄
) == 0) ||

143 (
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], shortcut ) == 0)))

145 
i
++;

146 i‡(
i
 < 
mame_¨gc
Ë
ªs
 = 
	`©oi
 (
mame_¨gv
[i]);

149  
ªs
;

150 
	}
}

152 
	$gë_Êﬂt
 (*
£˘i⁄
, *
›ti⁄
, *
sh‹tcut
, 
def
)

154 
i
;

155 
ªs
;

157 
ªs
 = 
def
;

160 
i
 = 1; i < 
mame_¨gc
; i++)

162 i‡(
mame_¨gv
[
i
][0] != '-')

164 i‡((
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], 
›ti⁄
) == 0) ||

165 (
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], shortcut ) == 0)))

167 
i
++;

168 i‡(
i
 < 
mame_¨gc
Ë
ªs
 = 
	`©of
 (
mame_¨gv
[i]);

171  
ªs
;

172 
	}
}

174 *
	$gë_°rög
 (*
£˘i⁄
, *
›ti⁄
, *
sh‹tcut
, *
def
)

176 *
ªs
;

177 
i
;

179 
ªs
 = 
def
;

182 
i
 = 1; i < 
mame_¨gc
; i++)

184 i‡(
mame_¨gv
[
i
][0] != '-')

187 i‡((
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], 
›ti⁄
) == 0) ||

188 (
sh‹tcut
 && (
	`°rˇ£cmp
(&
mame_¨gv
[
i
][1], shortcut) == 0)))

190 
i
++;

191 i‡(
i
 < 
mame_¨gc
Ë
ªs
 = 
mame_¨gv
[i];

194  
ªs
;

195 
	}
}

197 
	$gë_rom_ßm∂e_∑th
 (
¨gc
, **
¨gv
, 
game_ödex
)

199 
i
;

201 
rom∑th_buf
[512];

202 
ßm∂ï©h_buf
[512];

204 
Æã∫©e_«me
 = 0;

205 
mame_¨gc
 = 
¨gc
;

206 
mame_¨gv
 = 
¨gv
;

207 
game
 = 
game_ödex
;

209 
	`•rötf
(
rom∑th_buf
,"%s.;%§oms",
globÆ∑th
,globalpath);

210 
	`•rötf
(
ßm∂ï©h_buf
,"%s.;%sßm∂es",
globÆ∑th
,globalpath);

212 
rom∑th
 = 
	`gë_°rög
 ("dúe˘‹y", "rom∑th", 
NULL
, 
rom∑th_buf
);

213 
ßm∂ï©h
 = 
	`gë_°rög
 ("dúe˘‹y", "ßm∂ï©h", 
NULL
, 
ßm∂ï©h_buf
);

216 
Æã∫©e_«me
 = 0;

217 
i
 = 1; i < 
¨gc
; i++)

219 i‡(
	`°rˇ£cmp
 (
¨gv
[
i
], "-romdir") == 0)

221 
i
++;

222 i‡(
i
 < 
¨gc
Ë
Æã∫©e_«me
 = 
¨gv
[i];

227 
	`decompo£_rom_ßm∂e_∑th
 (
rom∑th
, 
ßm∂ï©h
);

228 
	}
}

231 
	$öô_öpdú
()

233 
öpdú
 = 
	`gë_°rög
 ("dúe˘‹y", "öp", 
NULL
, "inp");

234 
	}
}

236 
	$∑r£_cmdlöe
 (
¨gc
, **
¨gv
, 
game_ödex
)

238 
nvdú_buf
[256];

239 
hidú_buf
[256];

240 
cfgdú_buf
[256];

241 
s¸ìnshŸdú_buf
[256];

242 
memˇrddú_buf
[256];

243 
°adú_buf
[256];

244 
¨tw‹kdú_buf
[256];

245 
chótdú_buf
[256];

247 
f_bóm
, 
f_Êickî
;

248 *
ªsﬁuti⁄
;

249 *
joy«me
;

250 
tm¥es
[10];

251 
i
;

252 *
tmp°r
;

254 
mame_¨gc
 = 
¨gc
;

255 
mame_¨gv
 = 
¨gv
;

256 
game
 = 
game_ödex
;

259 
›ti⁄s
.
u£_¨tw‹k
 = 
	`gë_boﬁ
 ("c⁄fig", "¨tw‹k", 
NULL
, 1);

260 
›ti⁄s
.
u£_ßm∂es
 = 
	`gë_boﬁ
 ("c⁄fig", "ßm∂es", 
NULL
, 1);

261 
video_sync
 = 
	`gë_boﬁ
 ("c⁄fig", "vsync", 
NULL
, 0);

262 
waô_vsync
 = 
	`gë_boﬁ
 ("c⁄fig", "waôvsync", 
NULL
, 0);

263 
u£_dúty
 = 
	`gë_boﬁ
 ("c⁄fig", "dúty", 
NULL
, -1);

264 
›ti⁄s
.
™tülüs
 = 
	`gë_boﬁ
 ("c⁄fig", "™tülüs", 
NULL
, 1);

265 
›ti⁄s
.
å™¶u˚ncy
 = 
	`gë_boﬁ
 ("c⁄fig", "å™¶u˚ncy", 
NULL
, 1);

267 
tmp°r
 = 
	`gë_°rög
 ("c⁄fig", "dïth", 
NULL
, "auto");

268 
›ti⁄s
.
cﬁ‹_dïth
 = 
	`©oi
(
tmp°r
);

269 i‡(
›ti⁄s
.
cﬁ‹_dïth
 != 8 && options.color_depth != 16) options.color_depth = 0;

271 
skùlöes
 = 
	`gë_öt
 ("c⁄fig", "skùlöes", 
NULL
, 0);

272 
skùcﬁumns
 = 
	`gë_öt
 ("c⁄fig", "skùcﬁumns", 
NULL
, 0);

273 
f_bóm
 = 
	`gë_Êﬂt
 ("c⁄fig", "bóm", 
NULL
, 1.5);

274 i‡(
f_bóm
 < 1.0) f_beam = 1.0;

275 i‡(
f_bóm
 > 16.0) f_beam = 16.0;

276 
f_Êickî
 = 
	`gë_Êﬂt
 ("c⁄fig", "Êickî", 
NULL
, 0.0);

277 i‡(
f_Êickî
 < 0.0) f_flicker = 0.0;

278 i‡(
f_Êickî
 > 100.0) f_flicker = 100.0;

279 
osd_gamma_c‹ª˘i⁄
 = 
	`gë_Êﬂt
 ("c⁄fig", "gamma", 
NULL
, 1.0);

280 i‡(
osd_gamma_c‹ª˘i⁄
 < 0.5) osd_gamma_correction = 0.5;

281 i‡(
osd_gamma_c‹ª˘i⁄
 > 2.0) osd_gamma_correction = 2.0;

283 
tmp°r
 = 
	`gë_°rög
 ("config", "frameskip", "fs", "auto");

284 i‡(!
	`°rˇ£cmp
(
tmp°r
,"auto"))

286 
‰ameskù
 = 0;

287 
auto‰ameskù
 = 1;

291 
‰ameskù
 = 
	`©oi
(
tmp°r
);

292 
auto‰ameskù
 = 0;

294 
›ti⁄s
.
n‹Ÿ©e
 = 
	`gë_boﬁ
 ("c⁄fig", "n‹Ÿ©e", 
NULL
, 0);

295 
›ti⁄s
.
r‹
 = 
	`gë_boﬁ
 ("c⁄fig", "r‹", 
NULL
, 0);

296 
›ti⁄s
.
rﬁ
 = 
	`gë_boﬁ
 ("c⁄fig", "rﬁ", 
NULL
, 0);

297 
›ti⁄s
.
Êùx
 = 
	`gë_boﬁ
 ("c⁄fig", "Êùx", 
NULL
, 0);

298 
›ti⁄s
.
Êùy
 = 
	`gë_boﬁ
 ("c⁄fig", "Êùy", 
NULL
, 0);

301 
soundˇrd
 = 
	`gë_öt
 ("c⁄fig", "soundˇrd", 
NULL
, -1);

303 
›ti⁄s
.
u£_emuœãd_ym3812
 = !
	`gë_boﬁ
 ("c⁄fig", "ym3812›l", 
NULL
, 0);

304 
›ti⁄s
.
ßm∂î©e
 = 
	`gë_öt
 ("config", "samplerate", "sr", 22050);

305 i‡(
›ti⁄s
.
ßm∂î©e
 < 5000) options.samplerate = 5000;

306 i‡(
›ti⁄s
.
ßm∂î©e
 > 44100) options.samplerate = 44100;

307 
u£°îeo
 = 
	`gë_boﬁ
 ("c⁄fig", "°îeo", 
NULL
, 0);

308 
©ãnu©i⁄
 = 
	`gë_öt
 ("c⁄fig", "vﬁume", 
NULL
, 0);

309 i‡(
©ãnu©i⁄
 < -32)áttenuation = -32;

310 i‡(
©ãnu©i⁄
 > 0)áttenuation = 0;

313 
u£_mou£
 = 
	`gë_boﬁ
 ("c⁄fig", "mou£", 
NULL
, 1);

314 
joy«me
 = 
	`gë_°rög
 ("config", "joystick", "joy", "standard");

317 
›ti⁄s
.
chót
 = 
	`gë_boﬁ
 ("c⁄fig", "chót", 
NULL
, 0);

318 
›ti⁄s
.
mame_debug
 = 
	`gë_boﬁ
 ("c⁄fig", "debug", 
NULL
, 0);

320 
chótfûe
 = 
	`gë_°rög
 ("config", "cheatfile", "cf", "cheat.dat");

322 
hi°‹y_fûíame
 = 
	`gë_°rög
 ("c⁄fig", "hi°‹yfûe", 
NULL
, "history.dat");

324 
mameöfo_fûíame
 = 
	`gë_°rög
 ("c⁄fig", "mameöfofûe", 
NULL
, "mameinfo.dat");

327 
ªsﬁuti⁄
 = 
	`gë_°rög
 ("c⁄fig", "ªsﬁuti⁄", 
NULL
, "auto");

329 
	`•rötf
(
nvdú_buf
,"%¢vøm",
globÆ∑th
);

330 
	`•rötf
(
hidú_buf
,"%shi",
globÆ∑th
);

331 
	`•rötf
(
cfgdú_buf
,"%scfg",
globÆ∑th
);

332 
	`•rötf
(
s¸ìnshŸdú_buf
,"%s¢≠",
globÆ∑th
);

333 
	`•rötf
(
memˇrddú_buf
,"%smemˇrd",
globÆ∑th
);

334 
	`•rötf
(
°adú_buf
,"%s°a",
globÆ∑th
);

335 
	`•rötf
(
¨tw‹kdú_buf
,"%ßπw‹k",
globÆ∑th
);

336 
	`•rötf
(
chótdú_buf
,"%s",
globÆ∑th
);

339 
nvdú
 = 
	`gë_°rög
 ("dúe˘‹y", "nvøm", 
NULL
, 
nvdú_buf
);

340 
hidú
 = 
	`gë_°rög
 ("dúe˘‹y", "hi", 
NULL
, 
hidú_buf
);

341 
cfgdú
 = 
	`gë_°rög
 ("dúe˘‹y", "cfg", 
NULL
, 
cfgdú_buf
);

342 
s¸ìnshŸdú
 = 
	`gë_°rög
 ("dúe˘‹y", "¢≠", 
NULL
, 
s¸ìnshŸdú_buf
);

343 
memˇrddú
 = 
	`gë_°rög
 ("dúe˘‹y", "memˇrd", 
NULL
, 
memˇrddú_buf
);

344 
°adú
 = 
	`gë_°rög
 ("dúe˘‹y", "°a", 
NULL
, 
°adú_buf
);

345 
¨tw‹kdú
 = 
	`gë_°rög
 ("dúe˘‹y", "¨tw‹k", 
NULL
, 
¨tw‹kdú_buf
);

346 
chótdú
 = 
	`gë_°rög
 ("dúe˘‹y", "chót", 
NULL
, 
chótdú_buf
);

348 
	`logîr‹
("chótfûê%†- chótdú = %s\n",
chótfûe
,
chótdú
);

353 
tmp°r
 = 
	`gë_°rög
 ("c⁄fig", "œnguage", 
NULL
, "english");

354 
›ti⁄s
.
œnguage_fûe
 = 
	`osd_f›í
(0,
tmp°r
,
OSD_FILETYPE_LANGUAGE
,0);

357 
	`gë_rom_ßm∂e_∑th
 (
¨gc
, 
¨gv
, 
game_ödex
);

360 
›ti⁄s
.
bóm
 = ()(
f_bóm
 * 0x00010000);

361 i‡(
›ti⁄s
.
bóm
 < 0x00010000)

362 
›ti⁄s
.
bóm
 = 0x00010000;

363 i‡(
›ti⁄s
.
bóm
 > 0x00100000)

364 
›ti⁄s
.
bóm
 = 0x00100000;

366 
›ti⁄s
.
Êickî
 = ()(
f_Êickî
 * 2.55);

367 i‡(
›ti⁄s
.
Êickî
 < 0)

368 
›ti⁄s
.
Êickî
 = 0;

369 i‡(
›ti⁄s
.
Êickî
 > 255)

370 
›ti⁄s
.
Êickî
 = 255;

374 
i
 = 1; i < 
¨gc
; i++)

376 i‡(
¨gv
[
i
][0] ='-' && 
	`isdigô
(argv[i][1]) &&

377 (
	`°r°r
(
¨gv
[
i
],"x") || strstr(argv[i],"X")))

378 
ªsﬁuti⁄
 = &
¨gv
[
i
][1];

382 
gfx_height
 = 
gfx_width
 = 0;

383 i‡(
	`°rˇ£cmp
 (
ªsﬁuti⁄
, "auto") != 0)

385 *
tmp
;

386 
	`°∫˝y
 (
tm¥es
, 
ªsﬁuti⁄
, 10);

387 
tmp
 = 
	`°πok
 (
tm¥es
, "xX");

388 
gfx_width
 = 
	`©oi
 (
tmp
);

389 
tmp
 = 
	`°πok
 (0, "xX");

390 i‡(
tmp
)

391 
gfx_height
 = 
	`©oi
 (
tmp
);

393 
›ti⁄s
.
ve˘‹_width
 = 
gfx_width
;

394 
›ti⁄s
.
ve˘‹_height
 = 
gfx_height
;

398 
joy°ick
 = -2;

400 
i
 = 0; 
joy_èbÀ
[i].
«me
 !
NULL
; i++)

402 i‡(
	`°rˇ£cmp
 (
joy_èbÀ
[
i
].
«me
, 
joy«me
) == 0)

404 
joy°ick
 = 
joy_èbÀ
[
i
].
id
;

405 
	`logîr‹
("using joystick %s = %08x\n",

406 
joy«me
,
joy_èbÀ
[
i
].
id
);

411 i‡(
joy°ick
 == -2)

413 
	`logîr‹
("%s isÇotá validÉntry forá joystick\n",

414 
joy«me
);

415 
joy°ick
 = 
JOY_TYPE_NONE
;

419 
undî˛ock_sound
 = 
	`gë_öt
 ("c⁄fig", "u˛ocks", 
NULL
, 0);

420 
undî˛ock_˝u
 = 
	`gë_öt
 ("c⁄fig", "u˛ock", 
NULL
, 0);

423 
Á°_sound
 = 
	`gë_boﬁ
("c⁄fig", "Á°sound", 
NULL
, 0);

426 
rŸ©e_c⁄åﬁs
 = 
	`gë_boﬁ
("c⁄fig", "rŸ©ec⁄åﬁs", 
NULL
, 0);

427 
	}
}

	@dirty.h

1 
	#MAX_GFX_WIDTH
 1600

	)

2 
	#MAX_GFX_HEIGHT
 1600

	)

3 
	#DIRTY_H
 256

	)

4 
	#DIRTY_V
 (
MAX_GFX_HEIGHT
/16)

	)

7 
	tdútygrid
[
DIRTY_V
 * 
DIRTY_H
];

8 
	#ISDIRTY
(
x
,
y
Ë(
dúty_√w
[(y)/16 * 
DIRTY_H
 + (x)/16] || 
dúty_ﬁd
[(y)/16 * DIRTY_H + (x)/16])

	)

9 
	#MARKDIRTY
(
x
,
y
Ë
dúty_√w
[(y)/16 * 
DIRTY_H
 + (x)/16] = 1

	)

	@fileio.cpp

1 
	~"drivî.h
"

2 
	~"unzù.h
"

3 
	~"zlib.h
"

4 
	~<sys/°©.h
>

5 
	~<uni°d.h
>

6 
	~<sig«l.h
>

9 
	#VERBOSE
 0

	)

12 
	#FILE_CACHE
 1

	)

14 #i‡
VERBOSE


15 
	#LOG
(
x
Ë
logîr‹
 
	)
x

17 
	#LOG
(
x
Ë

	)

20 
globÆ∑th
[247];

22 *
	groms
 = 
NULL
;

23 **
	grom∑thv
 = 
NULL
;

24 
	grom∑thc
 = 0;

26 *
	gßm∂es
 = 
NULL
;

27 **
	gßm∂ï©hv
 = 
NULL
;

28 
	gßm∂ï©hc
 = 0;

30 *
	gcfgdú
, *
	gnvdú
, *
	ghidú
, *
	göpdú
, *
	g°adú
;

31 *
	gmemˇrddú
, *
	g¨tw‹kdú
, *
	gs¸ìnshŸdú
;

32 *
	gchótdú
;

34 *
	gÆã∫©e_«me
;

38 
	mkPœöFûe
,

39 
	mkRAMFûe
,

40 
	mkZù≥dFûe


41 } 
	teFûeTy≥
;

45 
FILE
 *
	mfûe
;

46 *
	md©a
;

47 
	moff£t
;

48 
	mÀngth
;

49 
eFûeTy≥
 
	mty≥
;

50 
	m¸c
;

51 } 
	tFakeFûeH™dÀ
;

54 
checksum_fûe
 (c⁄° *
fûe
, **
p
, *
size
, *
¸c
);

60 #i‡
FILE_CACHE


61 
	sfûe_ˇche_íåy


63 
°©
 
	m°©_buf„r
;

64 
	mªsu…
;

65 *
	mfûe
;

69 
fûe_ˇche_íåy
 **
	gfûe_ˇche_m≠
 = 0;

72 
	gfûe_ˇche_max
 = 0;

75 
	$ˇche_°©
 (c⁄° *
∑th
, 
°©
 *
°©buf
)

77 if–
fûe_ˇche_max
 )

79 
i
;

80 
fûe_ˇche_íåy
 *
íåy
;

83  
i
 = 0; i < 
fûe_ˇche_max
; ++i )

85 if–
fûe_ˇche_m≠
[
i
]->
fûe
 && 
	`°rcmp
 (fûe_ˇche_m≠[i]->fûe, 
∑th
) == 0 )

87 
j
;

91 
íåy
 = 
fûe_ˇche_m≠
[
i
];

94  
j
 = 
i
; j > 0; --j )

95 
fûe_ˇche_m≠
[
j
] = file_cache_map[j - 1];

98 
fûe_ˇche_m≠
[0] = 
íåy
;

100 if–
íåy
->
ªsu…
 == 0 )

101 
	`mem˝y
 (
°©buf
, &
íåy
->
°©_buf„r
,  (
°©
));

103  
íåy
->
ªsu…
;

109 
íåy
 = 
fûe_ˇche_m≠
[
fûe_ˇche_max
 - 1];

110 
	`‰ì
(
íåy
->
fûe
);

113  
i
 = 
fûe_ˇche_max
 - 1; i > 0; --i )

114 
fûe_ˇche_m≠
[
i
] = file_cache_map[i - 1];

117 
fûe_ˇche_m≠
[0] = 
íåy
;

120 
íåy
->
fûe
 = (*Ë
	`mÆloc
(
	`°æí
 (
∑th
) + 1);

121 
	`°r˝y
 (
íåy
->
fûe
, 
∑th
);

124 
íåy
->
ªsu…
 = 
	`°©
 (
∑th
, &íåy->
°©_buf„r
);

126 if–
íåy
->
ªsu…
 == 0 )

127 
	`mem˝y
 (
°©buf
, &
íåy
->
°©_buf„r
,  (
°©
));

129  
íåy
->
ªsu…
;

133  
	`°©
 (
∑th
, 
°©buf
);

135 
	}
}

138 
	$ˇche_Æloˇã
 (
íåõs
)

140 if–
íåõs
 )

142 
i
;

144 
fûe_ˇche_max
 = 
íåõs
;

145 
fûe_ˇche_m≠
 = (
fûe_ˇche_íåy
 **Ë
	`mÆloc
(
fûe_ˇche_max
 *  (file_cache_entry *));

147  
i
 = 0; i < 
fûe_ˇche_max
; ++i )

149 
fûe_ˇche_m≠
[
i
] = (
fûe_ˇche_íåy
 *Ë
	`mÆloc
( (file_cache_entry));

150 
	`mem£t
 (
fûe_ˇche_m≠
[
i
], 0,  (
fûe_ˇche_íåy
));

152 
	`LOG
(("FûêˇchêÆloˇãd f‹ %dÉ¡rõs\n", 
fûe_ˇche_max
));

154 
	}
}

157 
	#ˇche_°©
(
a
,
b
Ë
	`°©
◊,b)

	)

163 
	$decompo£_rom_ßm∂e_∑th
 (*
rom∑th
, *
ßm∂ï©h
)

165 *
tokí
;

168 
rom∑thc
 = 
ßm∂ï©hc
 = 0;

170 i‡(!
roms
)

171 
roms
 = (*)
	`mÆloc
–
	`°æí
(
rom∑th
) + 1);

173 
roms
 = (*)
	`ªÆloc
–roms, 
	`°æí
(
rom∑th
) + 1);

175 i‡(!
ßm∂es
)

176 
ßm∂es
 = (*)
	`mÆloc
–
	`°æí
(
ßm∂ï©h
) + 1);

178 
ßm∂es
 = (*)
	`ªÆloc
–ßm∂es, 
	`°æí
(
ßm∂ï©h
) + 1);

180 if–!
roms
 || !
ßm∂es
 )

182 
	`logîr‹
("decompose_rom_sample_path: failedÅo malloc!\n");

183 
	`øi£
(
SIGABRT
);

186 
	`°r˝y
 (
roms
, 
rom∑th
);

187 
tokí
 = 
	`°πok
 (
roms
, ";");

188  
tokí
 )

190 if–
rom∑thc
 )

191 
rom∑thv
 = (**)
	`ªÆloc
‘om∑thv, (
rom∑thc
 + 1) * (*));

193 
rom∑thv
 = (**)
	`mÆloc
((*));

194 if–!
rom∑thv
 )

196 
rom∑thv
[
rom∑thc
++] = 
tokí
;

197 
tokí
 = 
	`°πok
 (
NULL
, ";");

200 
	`°r˝y
 (
ßm∂es
, 
ßm∂ï©h
);

201 
tokí
 = 
	`°πok
 (
ßm∂es
, ";");

202  
tokí
 )

204 if–
ßm∂ï©hc
 )

205 
ßm∂ï©hv
 = (**)
	`ªÆloc
(ßm∂ï©hv, (
ßm∂ï©hc
 + 1) * (*));

207 
ßm∂ï©hv
 = (**)
	`mÆloc
((*));

208 if–!
ßm∂ï©hv
 )

210 
ßm∂ï©hv
[
ßm∂ï©hc
++] = 
tokí
;

211 
tokí
 = 
	`°πok
 (
NULL
, ";");

214 #i‡
FILE_CACHE


216 if–
fûe_ˇche_max
 == 0 )

221 
	`ˇche_Æloˇã
 ((
rom∑thc
 + 1) * 3 * 2);

225 
	}
}

239 
	$osd_Ác˚ss
 (c⁄° *
√wfûíame
, 
fûëy≥
)

241 
ödx
;

242 c⁄° *
fûíame
;

243 
«me
[256];

244 **
∑thv
;

245 
∑thc
;

246 *
dú_«me
;

249 if–
√wfûíame
 !
NULL
 )

251 
ödx
 = 0;

252 
fûíame
 = 
√wfûíame
;

255 
ödx
++;

257 #ifde‡
MESS


258 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 ||

259 
fûëy≥
 =
OSD_FILETYPE_IMAGE_R
 ||

260 
fûëy≥
 =
OSD_FILETYPE_IMAGE_RW
 )

262 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 )

265 
∑thv
 = 
rom∑thv
;

266 
∑thc
 = 
rom∑thc
;

269 if–
fûëy≥
 =
OSD_FILETYPE_SAMPLE
 )

271 
∑thv
 = 
ßm∂ï©hv
;

272 
∑thc
 = 
ßm∂ï©hc
;

275 if–
fûëy≥
 =
OSD_FILETYPE_SCREENSHOT
 )

277 *
f
;

279 
	`•rötf
 (
«me
, "%s/%s.≤g", 
s¸ìnshŸdú
, 
√wfûíame
);

280 
f
 = 
	`f›í
 (
«me
, "rb");

281 if–
f
 )

283 
	`f˛o£
 ((
FILE
*)
f
);

292  ; 
ödx
 < 
∑thc
; indx++ )

294 
°©
 
°©_buf„r
;

296 
dú_«me
 = 
∑thv
[
ödx
];

299 
	`•rötf
 (
«me
, "%s/%s", 
dú_«me
, 
fûíame
);

300 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

301  
ödx
 + 1;

304 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
fûíame
);

305 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

306  
ödx
 + 1;

309 
	`•rötf
 (
«me
, "%s/%s.zif", 
dú_«me
, 
fûíame
);

310 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

311  
ödx
 + 1;

316 
	}
}

320 *
	$osd_f›í
 (c⁄° *
game
, c⁄° *
fûíame
, 
fûëy≥
, 
_wrôe
)

322 
«me
[256];

323 *
gamíame
;

324 
found
 = 0;

325 
ödx
;

326 
°©
 
°©_buf„r
;

327 
FakeFûeH™dÀ
 *
f
;

328 
∑thc
;

329 **
∑thv
;

332 
f
 = (
FakeFûeH™dÀ
 *Ë
	`mÆloc
( (FakeFileHandle));

333 if–!
f
 )

335 
	`logîr‹
("osd_fopen: failedÅo mallocFakeFileHandle!\n");

338 
	`mem£t
 (
f
, 0,  (
FakeFûeH™dÀ
));

340 
gamíame
 = (*Ë
game
;

343 if–
Æã∫©e_«me
 )

345 
	`LOG
(("osd_f›í: -romdú ovîride†'%s' by '%s'\n", 
gamíame
, 
Æã∫©e_«me
));

346 
gamíame
 = 
Æã∫©e_«me
;

349  
fûëy≥
 )

351 
OSD_FILETYPE_ROM
:

352 
OSD_FILETYPE_SAMPLE
:

355 if–
_wrôe
 )

357 
	`logîr‹
("osd_f›í:Åy≥ %02x wrôênŸ suµ‹ãd\n",
fûëy≥
);

361 if–
fûëy≥
 =
OSD_FILETYPE_SAMPLE
 )

363 
	`LOG
(("osd_fopen: using samplepath\n"));

364 
∑thc
 = 
ßm∂ï©hc
;

365 
∑thv
 = 
ßm∂ï©hv
;

369 
	`LOG
(("osd_fopen: usingÑompath\n"));

370 
∑thc
 = 
rom∑thc
;

371 
∑thv
 = 
rom∑thv
;

374  
ödx
 = 0; indx < 
∑thc
 && !
found
; ++indx )

376 c⁄° *
dú_«me
 = 
∑thv
[
ödx
];

378 if–!
found
 )

380 
	`•rötf
 (
«me
, "%s/%s", 
dú_«me
, 
gamíame
);

381 
	`LOG
(("Tryög %s\n", 
«me
));

382 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

384 
	`•rötf
 (
«me
, "%s/%s/%s", 
dú_«me
, 
gamíame
, 
fûíame
);

385 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 )

387 if–
	`checksum_fûe
 (
«me
, &
f
->
d©a
, &f->
Àngth
, &f->
¸c
) == 0 )

389 
f
->
ty≥
 = 
kRAMFûe
;

390 
f
->
off£t
 = 0;

391 
found
 = 1;

396 
f
->
ty≥
 = 
kPœöFûe
;

397 
f
->
fûe
 = 
	`f›í
 (
«me
, "rb");

398 
found
 = 
f
->
fûe
 != 0;

403 if–!
found
 )

406 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

407 
	`LOG
(("Tryög %†fûe\n", 
«me
));

408 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

410 if–
	`lﬂd_zù≥d_fûe
 (
«me
, 
fûíame
, &
f
->
d©a
, &f->
Àngth
) == 0 )

412 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

413 
f
->
ty≥
 = 
kZù≥dFûe
;

414 
f
->
off£t
 = 0;

415 
f
->
¸c
 = 
	`¸c32
 (0L, f->
d©a
, f->
Àngth
);

416 
found
 = 1;

421 if–!
found
 )

424 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

425 
	`LOG
(("Tryög %†dúe˘‹y\n", 
«me
));

426 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

428 
	`•rötf
 (
«me
, "%s/%s.zù/%s", 
dú_«me
, 
gamíame
, 
fûíame
);

429 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 )

431 if–
	`checksum_fûe
 (
«me
, &
f
->
d©a
, &f->
Àngth
, &f->
¸c
) == 0 )

433 
f
->
ty≥
 = 
kRAMFûe
;

434 
f
->
off£t
 = 0;

435 
found
 = 1;

440 
f
->
ty≥
 = 
kPœöFûe
;

441 
f
->
fûe
 = 
	`f›í
 (
«me
, "rb");

442 
found
 = 
f
->
fûe
 != 0;

450 #ifde‡
MESS


451 
OSD_FILETYPE_IMAGE_R
:

454 if–
_wrôe
 )

456 
	`logîr‹
("osd_f›í:Åy≥ %02x wrôênŸ suµ‹ãd\n",
fûëy≥
);

461 
	`LOG
(("osd_fopen: usingÑompath\n"));

462 
∑thc
 = 
rom∑thc
;

463 
∑thv
 = 
rom∑thv
;

466 
	`LOG
(("O≥¿IMAGE_R '%s' f‹ %s\n", 
fûíame
, 
game
));

467  
ödx
 = 0; indx < 
∑thc
 && !
found
; ++indx )

469 c⁄° *
dú_«me
 = 
∑thv
[
ödx
];

472 if–!
found
 )

474 
	`•rötf
(
«me
,"%s",
dú_«me
);

475 if–
	`ˇche_°©
(
«me
,&
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

477 
	`•rötf
(
«me
,"%s/%s",
dú_«me
,
fûíame
);

478 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 )

480 if–
	`checksum_fûe
 (
«me
, &
f
->
d©a
, &f->
Àngth
, &f->
¸c
) == 0 )

482 
f
->
ty≥
 = 
kRAMFûe
;

483 
f
->
off£t
 = 0;

484 
found
 = 1;

489 
f
->
ty≥
 = 
kPœöFûe
;

490 
f
->
fûe
 = 
	`f›í
(
«me
,"rb");

491 
found
 = 
f
->
fûe
!=0;

496 if–!
found
 )

498 
	`•rötf
 (
«me
, "%s/%s", 
dú_«me
, 
gamíame
);

499 
	`LOG
(("Tryög %†dúe˘‹y\n", 
«me
));

500 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

502 
	`•rötf
 (
«me
, "%s/%s/%s", 
dú_«me
, 
gamíame
, 
fûíame
);

503 
	`LOG
(("Tryög %†fûe\n", 
«me
));

504 if–
fûëy≥
 =
OSD_FILETYPE_ROM
 )

506 if–
	`checksum_fûe
(
«me
, &
f
->
d©a
, &f->
Àngth
, &f->
¸c
) == 0 )

508 
f
->
ty≥
 = 
kRAMFûe
;

509 
f
->
off£t
 = 0;

510 
found
 = 1;

515 
f
->
ty≥
 = 
kPœöFûe
;

516 
f
->
fûe
 = 
	`f›í
 (
«me
, "rb");

517 
found
 = 
f
->
fûe
 != 0;

523 if–!
found
 && 
fûëy≥
 =
OSD_FILETYPE_IMAGE_R
 )

525 *
exãnsi⁄
 = 
	`°ºchr
 (
«me
, '.');

526 if–
exãnsi⁄
 )

527 
	`°r˝y
 (
exãnsi⁄
, ".zip");

529 
	`°rˇt
 (
«me
, ".zip");

530 
	`LOG
(("Tryög %†fûe\n", 
«me
));

531 if–
	`ˇche_°©
(
«me
, &
°©_buf„r
) == 0 )

533 if–
	`lﬂd_zù≥d_fûe
(
«me
, 
fûíame
, &
f
->
d©a
, &f->
Àngth
) == 0 )

535 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

536 
f
->
ty≥
 = 
kZù≥dFûe
;

537 
f
->
off£t
 = 0;

538 
f
->
¸c
 = 
	`¸c32
 (0L, f->
d©a
, f->
Àngth
);

539 
found
 = 1;

544 if–!
found
 )

547 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

548 
	`LOG
(("Tryög %†fûe\n", 
«me
));

549 if–
	`ˇche_°©
(
«me
, &
°©_buf„r
) == 0 )

551 if–
	`lﬂd_zù≥d_fûe
(
«me
, 
fûíame
, &
f
->
d©a
, &f->
Àngth
) == 0 )

553 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

554 
f
->
ty≥
 = 
kZù≥dFûe
;

555 
f
->
off£t
 = 0;

556 
f
->
¸c
 = 
	`¸c32
 (0L, f->
d©a
, f->
Àngth
);

557 
found
 = 1;

564 
OSD_FILETYPE_IMAGE_RW
:

566 *
wrôe_modes
[] = {"rb","wb","r+b","r+b","w+b"};

567 
fûe
[256];

568 *
exãnsi⁄
;

570 
	`LOG
(("O≥¿IMAGE_RW '%s' f‹ %†modê'%s'\n", 
fûíame
, 
game
, 
wrôe_modes
[
_wrôe
]));

571 
	`°r˝y
 (
fûe
, 
fûíame
);

576 
ödx
=
rom∑thc
-1; indx>=0; --indx)

578 c⁄° *
dú_«me
 = 
rom∑thv
[
ödx
];

585 if–!
found
 )

587 
	`•rötf
 (
«me
, "%s/%s", 
dú_«me
, 
gamíame
);

588 
	`LOG
(("Tryög %†dúe˘‹y\n", 
«me
));

589 if–
	`ˇche_°©
(
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

591 
	`•rötf
 (
«me
, "%s/%s/%s", 
dú_«me
, 
gamíame
, 
fûe
);

592 
	`LOG
(("Tryög %†fûe\n", 
«me
));

593 
f
->
fûe
 = 
	`f›í
 (
«me
, 
wrôe_modes
[
_wrôe
]);

594 
found
 = 
f
->
fûe
 != 0;

595 if–!
found
 && 
_wrôe
 == 3 )

597 
f
->
fûe
 = 
	`f›í
(
«me
, 
wrôe_modes
[4]);

598 
found
 = 
f
->
fûe
 != 0;

604 if–!
found
 && !
_wrôe
 )

606 
exãnsi⁄
 = 
	`°ºchr
 (
«me
, '.');

608 if–
exãnsi⁄
 )

609 
	`°r˝y
(
exãnsi⁄
, ".zip");

611 
	`°rˇt
(
exãnsi⁄
, ".zip");

612 
	`LOG
(("Tryög %†fûe\n", 
«me
));

613 if–
	`ˇche_°©
(
«me
, &
°©_buf„r
) == 0 )

615 if–
	`lﬂd_zù≥d_fûe
(
«me
, 
fûíame
, &
f
->
d©a
, &f->
Àngth
) == 0 )

617 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

618 
f
->
ty≥
 = 
kZù≥dFûe
;

619 
f
->
off£t
 = 0;

620 
f
->
¸c
 = 
	`¸c32
(0L, f->
d©a
, f->
Àngth
);

621 
found
 = 1;

626 i‡(!
found
)

628 
	`•rötf
(
«me
, "%s", 
dú_«me
);

629 
	`LOG
(("Tryög %†dúe˘‹y\n", 
«me
));

630 if–
	`ˇche_°©
(
«me
,&
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

632 
	`•rötf
(
«me
,"%s/%s", 
dú_«me
, 
fûe
);

633 
	`LOG
(("Tryög %†fûe\n", 
«me
));

634 
f
->
fûe
 = 
	`f›í
(
«me
, 
wrôe_modes
[
_wrôe
]);

635 
found
 = 
f
->
fûe
 != 0;

636 if–!
found
 && 
_wrôe
 == 3 )

638 
f
->
fûe
 = 
	`f›í
(
«me
, 
wrôe_modes
[4]);

639 
found
 = 
f
->
fûe
 != 0;

644 if–!
found
 && !
_wrôe
 )

646 
exãnsi⁄
 = 
	`°ºchr
 (
«me
, '.');

648 if–
exãnsi⁄
 )

649 
	`°r˝y
(
exãnsi⁄
, ".zip");

651 
	`°rˇt
(
exãnsi⁄
, ".zip");

652 
	`LOG
(("Tryög %†fûe\n", 
«me
));

653 if–
	`ˇche_°©
(
«me
, &
°©_buf„r
) == 0 )

655 if–
	`lﬂd_zù≥d_fûe
(
«me
, 
fûíame
, &
f
->
d©a
, &f->
Àngth
) == 0 )

657 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

658 
f
->
ty≥
 = 
kZù≥dFûe
;

659 
f
->
off£t
 = 0;

660 
f
->
¸c
 = 
	`¸c32
(0L, f->
d©a
, f->
Àngth
);

661 
found
 = 1;

666 if–!
found
 && !
_wrôe
 )

669 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

670 
	`LOG
(("Tryög %†fûe\n", 
«me
));

671 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

673 if–
	`lﬂd_zù≥d_fûe
 (
«me
, 
fûe
, &
f
->
d©a
, &f->
Àngth
) == 0 )

675 
	`LOG
(("Usög (osd_f›íËzù fûêf‹ %s\n", 
fûíame
));

676 
f
->
ty≥
 = 
kZù≥dFûe
;

677 
f
->
off£t
 = 0;

678 
f
->
¸c
 = 
	`¸c32
 (0L, f->
d©a
, f->
Àngth
);

679 
found
 = 1;

684 if–!
found
 )

687 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

688 
	`LOG
(("Tryög %†ZùMagi¯dúe˘‹y\n", 
«me
));

689 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

691 
	`•rötf
 (
«me
, "%s/%s.zù/%s", 
dú_«me
, 
gamíame
, 
fûe
);

692 
	`LOG
(("Tryög %s\n", 
«me
));

693 
f
->
fûe
 = 
	`f›í
 (
«me
, 
wrôe_modes
[
_wrôe
]);

694 
found
 = 
f
->
fûe
 != 0;

695 if–!
found
 && 
_wrôe
 == 3 )

697 
f
->
fûe
 = 
	`f›í
(
«me
, 
wrôe_modes
[4]);

698 
found
 = 
f
->
fûe
 != 0;

702 if–
found
 )

703 
	`LOG
(("IMAGE_RW %†FOUND i¿%s!\n", 
fûe
, 
«me
));

706 
exãnsi⁄
 = 
	`°ºchr
 (
fûe
, '.');

707 if–
exãnsi⁄
 )

708 *
exãnsi⁄
 = '\0';

709 }  !
found
 && 
exãnsi⁄
 );

715 
OSD_FILETYPE_NVRAM
:

716 if–!
found
 )

718 
	`•rötf
 (
«me
, "%s/%s.nv", 
nvdú
, 
gamíame
);

719 
f
->
ty≥
 = 
kPœöFûe
;

720 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

721 
found
 = 
f
->
fûe
 != 0;

724 if–!
found
 )

727 
	`•rötf
 (
«me
, "%s.zù/%s.nv", 
nvdú
, 
gamíame
);

728 
f
->
ty≥
 = 
kPœöFûe
;

729 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

730 
found
 = 
f
->
fûe
 != 0;

733 if–!
found
 )

736 
	`•rötf
 (
«me
, "%s.zif/%s.nv", 
nvdú
, 
gamíame
);

737 
f
->
ty≥
 = 
kPœöFûe
;

738 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

739 
found
 = 
f
->
fûe
 != 0;

743 
OSD_FILETYPE_HIGHSCORE
:

744 if–
	`mame_highsc‹e_íabÀd
 () )

746 if–!
found
 )

748 
	`•rötf
 (
«me
, "%s/%s.hi", 
hidú
, 
gamíame
);

749 
f
->
ty≥
 = 
kPœöFûe
;

750 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

751 
found
 = 
f
->
fûe
 != 0;

754 if–!
found
 )

757 
	`•rötf
 (
«me
, "%s.zù/%s.hi", 
hidú
, 
gamíame
);

758 
f
->
ty≥
 = 
kPœöFûe
;

759 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

760 
found
 = 
f
->
fûe
 != 0;

763 if–!
found
 )

766 
	`•rötf
 (
«me
, "%s.zif/%s.hi", 
hidú
, 
gamíame
);

767 
f
->
ty≥
 = 
kPœöFûe
;

768 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

769 
found
 = 
f
->
fûe
 != 0;

774 
OSD_FILETYPE_CONFIG
:

775 
	`•rötf
 (
«me
, "%s/%s.cfg", 
cfgdú
, 
gamíame
);

776 
f
->
ty≥
 = 
kPœöFûe
;

777 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

778 
found
 = 
f
->
fûe
 != 0;

780 if–!
found
 )

783 
	`•rötf
 (
«me
, "%s.zù/%s.cfg", 
cfgdú
, 
gamíame
);

784 
f
->
ty≥
 = 
kPœöFûe
;

785 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

786 
found
 = 
f
->
fûe
 != 0;

789 if–!
found
 )

792 
	`•rötf
 (
«me
, "%s.zif/%s.cfg", 
cfgdú
, 
gamíame
);

793 
f
->
ty≥
 = 
kPœöFûe
;

794 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

795 
found
 = 
f
->
fûe
 != 0;

799 
OSD_FILETYPE_INPUTLOG
:

800 
	`•rötf
 (
«me
, "%s/%s.öp", 
öpdú
, 
gamíame
);

801 
f
->
ty≥
 = 
kPœöFûe
;

802 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

803 
found
 = 
f
->
fûe
 != 0;

805 if–!
found
 )

808 
	`•rötf
 (
«me
, "%s.zù/%s.cfg", 
öpdú
, 
gamíame
);

809 
f
->
ty≥
 = 
kPœöFûe
;

810 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

811 
found
 = 
f
->
fûe
 != 0;

814 if–!
found
 )

817 
	`•rötf
 (
«me
, "%s.zif/%s.cfg", 
öpdú
, 
gamíame
);

818 
f
->
ty≥
 = 
kPœöFûe
;

819 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

820 
found
 = 
f
->
fûe
 != 0;

823 if–!
_wrôe
 )

825 
fûe
[256];

826 
	`•rötf
 (
fûe
, "%s.öp", 
gamíame
);

827 
	`•rötf
 (
«me
, "%s/%s.zù", 
öpdú
, 
gamíame
);

828 
	`LOG
(("Tryög %†ö %s\n", 
fûe
, 
«me
));

829 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

831 if–
	`lﬂd_zù≥d_fûe
 (
«me
, 
fûe
, &
f
->
d©a
, &f->
Àngth
) == 0 )

833 
	`LOG
(("Usög (osd_f›íËzù fûê%†f‹ %s\n", 
«me
, 
fûe
));

834 
f
->
ty≥
 = 
kZù≥dFûe
;

835 
f
->
off£t
 = 0;

836 
found
 = 1;

843 
OSD_FILETYPE_STATE
:

844 
	`•rötf
 (
«me
, "%s/%s.°a", 
°adú
, 
gamíame
);

845 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

846 
found
 = !(
f
->
fûe
 == 0);

847 if–!
found
 )

850 
	`•rötf
 (
«me
, "%s.zù/%s.°a", 
°adú
, 
gamíame
);

851 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

852 
found
 = !(
f
->
fûe
 == 0);

854 if–!
found
 )

857 
	`•rötf
 (
«me
, "%s.zif/%s.°a", 
°adú
, 
gamíame
);

858 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

859 
found
 = !(
f
->
fûe
 == 0);

863 
OSD_FILETYPE_ARTWORK
:

865 if–
_wrôe
 )

867 
	`logîr‹
("osd_f›í:Åy≥ %02x wrôênŸ suµ‹ãd\n",
fûëy≥
);

870 
	`•rötf
 (
«me
, "%s/%s", 
¨tw‹kdú
, 
fûíame
);

871 
f
->
ty≥
 = 
kPœöFûe
;

872 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

873 
found
 = 
f
->
fûe
 != 0;

874 if–!
found
 )

877 
	`•rötf
 (
«me
, "%s.zù/%s.≤g", 
¨tw‹kdú
, 
fûíame
);

878 
f
->
ty≥
 = 
kPœöFûe
;

879 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

880 
found
 = 
f
->
fûe
 != 0;

883 if–!
found
 )

886 
	`•rötf
 (
«me
, "%s.zif/%s.≤g", 
¨tw‹kdú
, 
fûíame
);

887 
f
->
ty≥
 = 
kPœöFûe
;

888 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

889 
found
 = 
f
->
fûe
 != 0;

892 if–!
found
 )

894 
fûe
[256], *
exãnsi⁄
;

895 
	`•rötf
(
fûe
, "%s", 
fûíame
);

896 
	`•rötf
(
«me
, "%s/%s", 
¨tw‹kdú
, 
fûíame
);

897 
exãnsi⁄
 = 
	`°ºchr
(
«me
, '.');

898 if–
exãnsi⁄
 )

899 
	`°r˝y
 (
exãnsi⁄
, ".zip");

901 
	`°rˇt
 (
«me
, ".zip");

902 
	`LOG
(("Tryög %†ö %s\n", 
fûe
, 
«me
));

903 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

905 if–
	`lﬂd_zù≥d_fûe
 (
«me
, 
fûe
, &
f
->
d©a
, &f->
Àngth
) == 0 )

907 
	`LOG
(("Usög (osd_f›íËzù fûê%s\n", 
«me
));

908 
f
->
ty≥
 = 
kZù≥dFûe
;

909 
f
->
off£t
 = 0;

910 
found
 = 1;

913 if–!
found
 )

915 
	`•rötf
(
«me
, "%s/%s.zù", 
¨tw‹kdú
, 
game
);

916 
	`LOG
(("Tryög %†ö %s\n", 
fûe
, 
«me
));

917 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

919 if–
	`lﬂd_zù≥d_fûe
 (
«me
, 
fûe
, &
f
->
d©a
, &f->
Àngth
) == 0 )

921 
	`LOG
(("Usög (osd_f›íËzù fûê%s\n", 
«me
));

922 
f
->
ty≥
 = 
kZù≥dFûe
;

923 
f
->
off£t
 = 0;

924 
found
 = 1;

931 
OSD_FILETYPE_MEMCARD
:

932 
	`•rötf
 (
«me
, "%s/%s", 
memˇrddú
, 
fûíame
);

933 
f
->
ty≥
 = 
kPœöFûe
;

934 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

935 
found
 = 
f
->
fûe
 != 0;

938 
OSD_FILETYPE_SCREENSHOT
:

940 if–!
_wrôe
 )

942 
	`logîr‹
("osd_f›í:Åy≥ %02xÑódÇŸ suµ‹ãd\n",
fûëy≥
);

946 
	`•rötf
 (
«me
, "%s/%s.≤g", 
s¸ìnshŸdú
, 
fûíame
);

947 
f
->
ty≥
 = 
kPœöFûe
;

948 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "wb" : "rb");

949 
found
 = 
f
->
fûe
 != 0;

952 
OSD_FILETYPE_HIGHSCORE_DB
:

953 
OSD_FILETYPE_HISTORY
:

955 
	`•rötf
 (
«me
, "%s%s",
globÆ∑th
, 
fûíame
);

956 if–
_wrôe
 )

958 
	`logîr‹
("osd_f›í:Åy≥ %02x wrôênŸ suµ‹ãd\n",
fûëy≥
);

961 
f
->
ty≥
 = 
kPœöFûe
;

963 
f
->
fûe
 = 
	`f›í
 (
«me
 , 
_wrôe
 ? "w" : "r");

964 
found
 = 
f
->
fûe
 != 0;

968 
OSD_FILETYPE_CHEAT
:

969 
	`•rötf
 (
«me
, "%s/%s", 
chótdú
, 
fûíame
);

970 
f
->
ty≥
 = 
kPœöFûe
;

972 
f
->
fûe
 = 
	`f›í
 ( 
«me
, 
_wrôe
 ? "a" : "r");

973 
found
 = 
f
->
fûe
 != 0;

976 
OSD_FILETYPE_LANGUAGE
:

978 if–
_wrôe
 )

980 
	`logîr‹
("osd_f›í:Åy≥ %02x wrôênŸ suµ‹ãd\n",
fûëy≥
);

983 
	`•rötf
 (
«me
, "%s. g", 
fûíame
);

984 
f
->
ty≥
 = 
kPœöFûe
;

986 
f
->
fûe
 = 
	`f›í
 (
«me
, 
_wrôe
 ? "w" : "r");

987 
found
 = 
f
->
fûe
 != 0;

988 
	`logîr‹
("f›í %†%08x\n",
«me
,()
f
->
fûe
);

992 
	`logîr‹
("osd_f›í(): unknow¿fûëy≥ %02x\n",
fûëy≥
);

995 if–!
found
 )

997 
	`‰ì
(
f
);

1001  
f
;

1002 
	}
}

1005 
	$osd_‰ód
 (*
fûe
, *
buf„r
, 
Àngth
)

1007 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1009  
f
->
ty≥
 )

1011 
kPœöFûe
:

1012  
	`‰ód
 (
buf„r
, 1, 
Àngth
, 
f
->
fûe
);

1014 
kZù≥dFûe
:

1015 
kRAMFûe
:

1017 if–
f
->
d©a
 )

1019 if–
Àngth
 + 
f
->
off£t
 > f->length )

1020 
Àngth
 = 
f
->Àngth - f->
off£t
;

1021 
	`mem˝y
 (
buf„r
, 
f
->
off£t
 + f->
d©a
, 
Àngth
);

1022 
f
->
off£t
 +
Àngth
;

1023  
Àngth
;

1029 
	}
}

1031 
	$osd_‰ód_sw≠
 (*
fûe
, *
buf„r
, 
Àngth
)

1033 
i
;

1034 *
buf
;

1035 
ãmp
;

1036 
ªs
;

1039 
ªs
 = 
	`osd_‰ód
 (
fûe
, 
buf„r
, 
Àngth
);

1041 
buf
 = (*)
buf„r
;

1042  
i
 = 0; i < 
Àngth
; i += 2 )

1044 
ãmp
 = 
buf
[
i
];

1045 
buf
[
i
] = buf[i + 1];

1046 
buf
[
i
 + 1] = 
ãmp
;

1049  
ªs
;

1050 
	}
}

1054 
	$osd_fwrôe
 (*
fûe
, c⁄° *
buf„r
, 
Àngth
)

1056 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1058  
f
->
ty≥
 )

1060 
kPœöFûe
:

1061  
	`fwrôe
 (
buf„r
, 1, 
Àngth
, ((
FakeFûeH™dÀ
 *Ë
fûe
)->file);

1065 
	}
}

1067 
	$osd_fwrôe_sw≠
 (*
fûe
, c⁄° *
buf„r
, 
Àngth
)

1069 
i
;

1070 *
buf
;

1071 
ãmp
;

1072 
ªs
;

1075 
buf
 = (*Ë
buf„r
;

1076  
i
 = 0; i < 
Àngth
; i += 2 )

1078 
ãmp
 = 
buf
[
i
];

1079 
buf
[
i
] = buf[i + 1];

1080 
buf
[
i
 + 1] = 
ãmp
;

1083 
ªs
 = 
	`osd_fwrôe
 (
fûe
, 
buf„r
, 
Àngth
);

1085  
i
 = 0; i < 
Àngth
; i += 2 )

1087 
ãmp
 = 
buf
[
i
];

1088 
buf
[
i
] = buf[i + 1];

1089 
buf
[
i
 + 1] = 
ãmp
;

1092  
ªs
;

1093 
	}
}

1095 
	$osd_‰ód_sˇâî
 (*
fûe
, *
buf„r
, 
Àngth
, 
ö¸emít
)

1097 *
buf
 = (*)
buf„r
;

1098 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1099 
ãmpbuf
[4096];

1100 
tŸªad
, 
r
, 
i
;

1102  
f
->
ty≥
 )

1104 
kPœöFûe
:

1105 
tŸªad
 = 0;

1106 
Àngth
)

1108 
r
 = 
Àngth
;

1109 if–
r
 > 4096 )

1110 
r
 = 4096;

1111 
r
 = 
	`‰ód
 (
ãmpbuf
, 1,Ñ, 
f
->
fûe
);

1112 if–
r
 == 0 )

1113  
tŸªad
;

1114  
i
 = 0; i < 
r
; i++ )

1116 *
buf
 = 
ãmpbuf
[
i
];

1117 
buf
 +
ö¸emít
;

1119 
tŸªad
 +
r
;

1120 
Àngth
 -
r
;

1122  
tŸªad
;

1124 
kZù≥dFûe
:

1125 
kRAMFûe
:

1127 if–
f
->
d©a
 )

1129 if–
Àngth
 + 
f
->
off£t
 > f->length )

1130 
Àngth
 = 
f
->Àngth - f->
off£t
;

1131  
i
 = 0; i < 
Àngth
; i++ )

1133 *
buf
 = 
f
->
d©a
[f->
off£t
 + 
i
];

1134 
buf
 +
ö¸emít
;

1136 
f
->
off£t
 +
Àngth
;

1137  
Àngth
;

1143 
	}
}

1147 
	$osd_f£ek
 (*
fûe
, 
off£t
, 
whí˚
)

1149 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1150 
îr
 = 0;

1152  
f
->
ty≥
 )

1154 
kPœöFûe
:

1155  
	`f£ek
 (
f
->
fûe
, 
off£t
, 
whí˚
);

1157 
kZù≥dFûe
:

1158 
kRAMFûe
:

1160  
whí˚
 )

1162 
SEEK_SET
:

1163 
f
->
off£t
 = offset;

1165 
SEEK_CUR
:

1166 
f
->
off£t
 += offset;

1168 
SEEK_END
:

1169 
f
->
off£t
 = f->
Àngth
 + offset;

1175  
îr
;

1176 
	}
}

1179 
	$osd_f˛o£
 (*
fûe
)

1181 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1183  
f
->
ty≥
 )

1185 
kPœöFûe
:

1186 
	`f˛o£
 (
f
->
fûe
);

1187 #ifde‡
GP2X


1188 
	`sync
();

1191 
kZù≥dFûe
:

1192 
kRAMFûe
:

1193 if–
f
->
d©a
 )

1194 
	`‰ì
(
f
->
d©a
);

1197 
	`‰ì
(
f
);

1198 
	}
}

1202 
	$checksum_fûe
 (c⁄° *
fûe
, **
p
, *
size
, *
¸c
)

1204 
Àngth
;

1205 *
d©a
;

1206 
FILE
 *
f
;

1208 
f
 = 
	`f›í
 (
fûe
, "rb");

1209 if–!
f
 )

1213 if–
	`f£ek
 (
f
, 0L, 
SEEK_END
) != 0 )

1215 
	`f˛o£
 (
f
);

1219 
Àngth
 = 
	`·ñl
 (
f
);

1220 if–
Àngth
 == -1L )

1222 
	`f˛o£
 (
f
);

1227 
d©a
 = (*Ë
	`mÆloc
(
Àngth
);

1228 if–!
d©a
 )

1230 
	`f˛o£
 (
f
);

1235 if–
	`f£ek
 (
f
, 0L, 
SEEK_SET
) != 0 )

1237 
	`‰ì
(
d©a
);

1238 
	`f˛o£
 (
f
);

1242 if–
	`‰ód
 (
d©a
,  (), 
Àngth
, 
f
) !=Üength )

1244 
	`‰ì
(
d©a
);

1245 
	`f˛o£
 (
f
);

1249 *
size
 = 
Àngth
;

1250 *
¸c
 = 
	`¸c32
 (0L, 
d©a
, 
Àngth
);

1251 if–
p
 )

1252 *
p
 = 
d©a
;

1254 
	`‰ì
(
d©a
);

1256 
	`f˛o£
 (
f
);

1259 
	}
}

1263 
	$osd_fchecksum
 (c⁄° *
game
, c⁄° *
fûíame
, *
Àngth
, *
sum
)

1265 
«me
[256];

1266 
ödx
;

1267 
°©
 
°©_buf„r
;

1268 
found
 = 0;

1269 c⁄° *
gamíame
 = 
game
;

1272 if–
Æã∫©e_«me
 )

1273 
gamíame
 = 
Æã∫©e_«me
;

1275  
ödx
 = 0; indx < 
rom∑thc
 && !
found
; ++indx )

1277 c⁄° *
dú_«me
 = 
rom∑thv
[
ödx
];

1279 if–!
found
 )

1281 
	`•rötf
 (
«me
, "%s/%s", 
dú_«me
, 
gamíame
);

1282 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
Ë=0 && (°©_buf„r.
°_mode
 & 
S_IFDIR
) )

1284 
	`•rötf
 (
«me
, "%s/%s/%s", 
dú_«me
, 
gamíame
, 
fûíame
);

1285 if–
	`checksum_fûe
 (
«me
, 0, 
Àngth
, 
sum
) == 0 )

1287 
found
 = 1;

1292 if–!
found
 )

1295 
	`•rötf
 (
«me
, "%s/%s.zù", 
dú_«me
, 
gamíame
);

1296 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

1298 if–
	`checksum_zù≥d_fûe
 (
«me
, 
fûíame
, 
Àngth
, 
sum
) == 0 )

1300 
	`LOG
(("Usög (osd_fchecksumËzù fûêf‹ %s\n", 
fûíame
));

1301 
found
 = 1;

1306 if–!
found
 )

1309 
	`•rötf
 (
«me
, "%s/%s.zif", 
dú_«me
, 
gamíame
);

1310 if–
	`ˇche_°©
 (
«me
, &
°©_buf„r
) == 0 )

1312 
	`•rötf
 (
«me
, "%s/%s.zif/%s", 
dú_«me
, 
gamíame
, 
fûíame
);

1313 if–
	`checksum_fûe
 (
«me
, 0, 
Àngth
, 
sum
) == 0 )

1315 
found
 = 1;

1321 if–!
found
 )

1325 
	}
}

1328 
	$osd_fsize
 (*
fûe
)

1330 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1332 if–
f
->
ty≥
 =
kRAMFûe
 || f->ty≥ =
kZù≥dFûe
 )

1333  
f
->
Àngth
;

1335 if–
f
->
fûe
 )

1337 
size
, 
offs
;

1338 
offs
 = 
	`·ñl
–
f
->
fûe
 );

1339 
	`f£ek
–
f
->
fûe
, 0, 
SEEK_END
 );

1340 
size
 = 
	`·ñl
–
f
->
fûe
 );

1341 
	`f£ek
–
f
->
fûe
, 
offs
, 
SEEK_SET
 );

1342  
size
;

1346 
	}
}

1349 
	$osd_f¸c
 (*
fûe
)

1351 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1353  
f
->
¸c
;

1354 
	}
}

1356 
	$osd_fgëc
(*
fûe
)

1358 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1360 i‡(
f
->
ty≥
 =
kPœöFûe
 && f->
fûe
)

1361  
	`fgëc
(
f
->
fûe
);

1363  
EOF
;

1364 
	}
}

1366 
	$osd_ungëc
(
c
, *
fûe
)

1368 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1370 i‡(
f
->
ty≥
 =
kPœöFûe
 && f->
fûe
)

1371  
	`ungëc
(
c
,
f
->
fûe
);

1373  
EOF
;

1374 
	}
}

1376 *
	$osd_fgës
(*
s
, 
n
, *
fûe
)

1378 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1380 i‡(
f
->
ty≥
 =
kPœöFûe
 && f->
fûe
)

1381  
	`fgës
(
s
,
n
,
f
->
fûe
);

1383  
NULL
;

1384 
	}
}

1386 
	$osd_„of
(*
fûe
)

1388 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1390 i‡(
f
->
ty≥
 =
kPœöFûe
 && f->
fûe
)

1391  
	`„of
(
f
->
fûe
);

1394 
	}
}

1396 
	$osd_·ñl
(*
fûe
)

1398 
FakeFûeH™dÀ
 *
f
 = (FakeFûeH™dÀ *Ë
fûe
;

1400 i‡(
f
->
ty≥
 =
kPœöFûe
 && f->
fûe
)

1401  
	`·ñl
(
f
->
fûe
);

1404 
	}
}

1410 
	$osd_di•œy_lﬂdög_rom_mesßge
 (c⁄° *
«me
, 
cuºít
, 
tŸÆ
)

1412 if–
«me
 )

1413 
	`¥ötf
 ("lﬂdög %-12s\n", 
«me
);

1415 
	`¥ötf
 (" \n");

1416 
	`fÊush
 (
°dout
);

1418 if–
	`keybﬂrd_¥es£d
 (
KEYCODE_LCONTROL
Ë&& keybﬂrd_¥es£d (
KEYCODE_C
) )

1422 
	}
}

	@fronthlp.cpp

1 
	~"drivî.h
"

2 
	~"öfo.h
"

3 
	~"audô.h
"

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<sys/°©.h
>

8 
	~<sys/î∫o.h
>

9 
	~<dúít.h
>

10 
	~<unzù.h
>

11 
	~"zlib.h
"

13 #ifde‡
MESS


14 
	~"mess/msdos.h
"

17 #ifde‡
¥ötf


18 #unde‡
¥ötf


21 
	gsûítidít
,
	gknown°©us
;

23 
	#KNOWN_START
 0

	)

24 
	#KNOWN_ALL
 1

	)

25 
	#KNOWN_NONE
 2

	)

26 
	#KNOWN_SOME
 3

	)

31 
gë_rom_ßm∂e_∑th
 (
¨gc
, **
¨gv
, 
game_ödex
);

33 c⁄° 
GameDrivî
 *
	ggamedrv
;

39 
	$°rwûdcmp
(c⁄° *
•1
, c⁄° *
•2
)

41 
s1
[9], 
s2
[9];

42 
i
, 
l1
, 
l2
;

43 *
p
;

45 
	`°∫˝y
(
s1
, 
•1
, 8); s1[8] = 0; i‡(s1[0] =0Ë
	`°r˝y
(s1, "*");

47 
	`°∫˝y
(
s2
, 
•2
, 8); s2[8] = 0; i‡(s2[0] =0Ë
	`°r˝y
(s2, "*");

49 
p
 = 
	`°rchr
(
s1
, '*');

50 i‡(
p
)

52 
i
 = 
p
 - 
s1
; i < 8; i++) s1[i] = '?';

53 
s1
[8] = 0;

56 
p
 = 
	`°rchr
(
s2
, '*');

57 i‡(
p
)

59 
i
 = 
p
 - 
s2
; i < 8; i++) s2[i] = '?';

60 
s2
[8] = 0;

63 
l1
 = 
	`°æí
(
s1
);

64 i‡(
l1
 < 8)

66 
i
 = 
l1
 + 1; i < 8; i++Ë
s1
[i] = ' ';

67 
s1
[8] = 0;

70 
l2
 = 
	`°æí
(
s2
);

71 i‡(
l2
 < 8)

73 
i
 = 
l2
 + 1; i < 8; i++Ë
s2
[i] = ' ';

74 
s2
[8] = 0;

77 
i
 = 0; i < 8; i++)

79 i‡(
s1
[
i
] ='?' && 
s2
[i] != '?') s1[i] = s2[i];

80 i‡(
s2
[
i
] ='?' && 
s1
[i] != '?') s2[i] = s1[i];

83  
	`°rˇ£cmp
(
s1
, 
s2
);

84 
	}
}

88 
	$idítify_rom
(c⁄° * 
«me
, 
checksum
, 
Àngth
)

92 
found
 = 0;

95 
i
;

96 
i
 = 
	`°æí
(
«me
)-1;i >= 0;i--)

98 i‡(
«me
[
i
] == '/' ||Çame[i] == '\\')

100 
i
++;

104 i‡(!
sûítidít
)

105 
	`¥ötf
("%-12†",&
«me
[
i
]);

107 
i
 = 0; 
drivîs
[i]; i++)

109 c⁄° 
RomModuÀ
 *
romp
;

111 
romp
 = 
drivîs
[
i
]->
rom
;

113 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

115 i‡(
romp
->
«me
 &&Ñomp->«mê!(*)-1 && 
checksum
 =romp->
¸c
)

117 i‡(!
sûítidít
)

119 i‡(
found
 != 0)

120 
	`¥ötf
(" ");

121 
	`¥ötf
("%-12† %s\n",
romp
->
«me
,
drivîs
[
i
]->
des¸ùti⁄
);

123 
found
++;

125 
romp
++;

128 i‡(
found
 == 0)

130 
size
 = 
Àngth
;

131 
size
 && (size & 1) == 0) size >>= 1;

132 i‡(
size
 & ~1)

134 i‡(!
sûítidít
)

135 
	`¥ötf
("NOT A ROM\n");

139 i‡(!
sûítidít
)

140 
	`¥ötf
("NO MATCH\n");

141 i‡(
known°©us
 =
KNOWN_START
)

142 
known°©us
 = 
KNOWN_NONE
;

143 i‡(
known°©us
 =
KNOWN_ALL
)

144 
known°©us
 = 
KNOWN_SOME
;

149 i‡(
known°©us
 =
KNOWN_START
)

150 
known°©us
 = 
KNOWN_ALL
;

151 i‡(
known°©us
 =
KNOWN_NONE
)

152 
known°©us
 = 
KNOWN_SOME
;

156 
i
;

157 
	`¥ötf
("%s\n",
«me
);

159 
i
 = 0; 
drivîs
[i]; i++) {

160 c⁄° 
RomModuÀ
 *
romp
;

162 
romp
 = 
drivîs
[
i
]->
rom
;

164 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

166 i‡(
romp
->
«me
 &&Ñomp->«mê!(*)-1 && 
checksum
 =romp->
¸c
)

168 
	`¥ötf
("\t%s/%†%s, %s, %s\n",
drivîs
[
i
]->
«me
,
romp
->name,

169 
drivîs
[
i
]->
des¸ùti⁄
,

170 
drivîs
[
i
]->
m™uÁ˘uªr
,

171 
drivîs
[
i
]->
yór
);

173 
romp
++;

177 
	}
}

180 
	$idítify_fûe
(c⁄° * 
«me
)

182 
FILE
 *
f
;

183 
Àngth
;

184 * 
d©a
;

186 
f
 = 
	`f›í
(
«me
,"rb");

187 i‡(!
f
) {

192 i‡(
	`f£ek
 (
f
, 0L, 
SEEK_END
)!=0) {

193 
	`f˛o£
(
f
);

197 
Àngth
 = 
	`·ñl
(
f
);

198 i‡(
Àngth
 == -1L) {

199 
	`f˛o£
(
f
);

204 i‡(!
Àngth
) {

205 
	`f˛o£
(
f
);

210 
d©a
 = (*)
	`mÆloc
(
Àngth
);

211 i‡(!
d©a
) {

212 
	`f˛o£
(
f
);

216 i‡(
	`f£ek
 (
f
, 0L, 
SEEK_SET
)!=0) {

217 
	`‰ì
(
d©a
);

218 
	`f˛o£
(
f
);

222 i‡(
	`‰ód
(
d©a
, 1, 
Àngth
, 
f
) !=Üength) {

223 
	`‰ì
(
d©a
);

224 
	`f˛o£
(
f
);

228 
	`f˛o£
(
f
);

230 
	`idítify_rom
(
«me
, 
	`¸c32
(0L,(c⁄° *)
d©a
,
Àngth
),length);

232 
	`‰ì
(
d©a
);

233 
	}
}

235 
	$idítify_zù
(c⁄° * 
zù«me
)

237 
zùít
* 
ít
;

239 
ZIP
* 
zù
 = 
	`›ízù
–
zù«me
 );

240 i‡(!
zù
)

243 (
ít
 = 
	`ªadzù
(
zù
))) {

245 i‡(
ít
->
uncom¥es£d_size
!=0) {

246 * 
buf
 = (*)
	`mÆloc
(
	`°æí
(
zù«me
)+1+°æí(
ít
->
«me
)+1);

247 
	`•rötf
(
buf
,"%s/%s",
zù«me
,
ít
->
«me
);

248 
	`idítify_rom
(
buf
,
ít
->
¸c32
,ít->
uncom¥es£d_size
);

249 
	`‰ì
(
buf
);

253 
	`˛o£zù
(
zù
);

254 
	}
}

256 
romidít
(c⁄° * 
«me
, 
íãr_dús
);

258 
	$idítify_dú
(c⁄° * 
dú«me
)

260 
DIR
 *
dú
;

261 
dúít
 *
ít
;

263 
dú
 = 
	`›ídú
(
dú«me
);

264 i‡(!
dú
) {

268 
ít
 = 
	`ªaddú
(
dú
);

269 
ít
) {

271 i‡(
ít
->
d_«me
[0]!='.') {

272 * 
buf
 = (*)
	`mÆloc
(
	`°æí
(
dú«me
)+1+°æí(
ít
->
d_«me
)+1);

273 
	`•rötf
(
buf
,"%s/%s",
dú«me
,
ít
->
d_«me
);

274 
	`romidít
(
buf
,0);

275 
	`‰ì
(
buf
);

278 
ít
 = 
	`ªaddú
(
dú
);

280 
	`˛o£dú
(
dú
);

281 
	}
}

283 
	$romidít
(c⁄° * 
«me
,
íãr_dús
) {

284 
°©
 
s
;

286 i‡(
	`°©
(
«me
,&
s
) != 0) {

287 
	`¥ötf
("%s: %s\n",
«me
,
	`°ªº‹
(
î∫o
));

291 i‡(
	`S_ISDIR
(
s
.
°_mode
)) {

292 i‡(
íãr_dús
)

293 
	`idítify_dú
(
«me
);

295 
l
 = 
	`°æí
(
«me
);

296 i‡(
l
>=4 && 
	`°rˇ£cmp
(
«me
+l-4,".zip")==0)

297 
	`idítify_zù
(
«me
);

299 
	`idítify_fûe
(
«me
);

302 
	}
}

305 #i‚de‡
MESS


306 íum { 
	mLIST_LIST
 = 1, 
	mLIST_LISTINFO
, 
	mLIST_LISTFULL
, 
	mLIST_LISTSAMDIR
, 
	mLIST_LISTROMS
, 
	mLIST_LISTSAMPLES
,

307 
	mLIST_LMR
, 
	mLIST_LISTDETAILS
, 
	mLIST_GAMELISTHEADER
, 
	mLIST_GAMELISTFOOTER
, 
	mLIST_GAMELIST
,

308 
	mLIST_LISTGAMES
, 
	mLIST_LISTCLONES
,

309 
	mLIST_WRONGORIENTATION
, 
	mLIST_WRONGFPS
, 
	mLIST_LISTCRC
, 
	mLIST_LISTDUPCRC
, 
	mLIST_WRONGMERGE
,

310 
	mLIST_LISTROMSIZE
, 
	mLIST_LISTCPU
, 
	mLIST_SOURCEFILE
 };

312 íum { 
	mLIST_LIST
 = 1, 
	mLIST_LISTINFO
, 
	mLIST_LISTFULL
, 
	mLIST_LISTSAMDIR
, 
	mLIST_LISTROMS
, 
	mLIST_LISTSAMPLES
,

313 
	mLIST_LMR
, 
	mLIST_LISTDETAILS
, 
	mLIST_GAMELISTHEADER
, 
	mLIST_GAMELISTFOOTER
, 
	mLIST_GAMELIST
,

314 
	mLIST_LISTGAMES
, 
	mLIST_LISTCLONES
,

315 
	mLIST_WRONGORIENTATION
, 
	mLIST_WRONGFPS
, 
	mLIST_LISTCRC
, 
	mLIST_LISTDUPCRC
, 
	mLIST_WRONGMERGE
,

316 
	mLIST_LISTROMSIZE
, 
	mLIST_LISTCPU
, 
	mLIST_SOURCEFILE
, 
	mLIST_MESSINFO
 };

320 
	#VERIFY_ROMS
 0x00000001

	)

321 
	#VERIFY_SAMPLES
 0x00000002

	)

322 
	#VERIFY_VERBOSE
 0x00000004

	)

323 
	#VERIFY_TERSE
 0x00000008

	)

325 
CLIB_DECL
 
	$ãr£_¥ötf
(*
fmt
,...)

328 
	}
}

331 
	$‰⁄ãnd_hñp
 (
¨gc
, **
¨gv
)

333 
i
, 
j
;

334 
li°
 = 0;

335 
li°˛⁄es
 = 1;

336 
vîify
 = 0;

337 
idít
 = 0;

338 
hñp
 = 1;

339 
gamíame
[9];

342 
i
 = 1;ò< 
¨gc
;i++Ëi‡(
¨gv
[i][0] == '/')árgv[i][0] = '-';

347 
	`°r˝y
(
gamíame
, "");

349 
i
 = 1;ò< 
¨gc
;i++)

352 i‡((
	`°æí
(
gamíame
Ë=0Ë&& (
¨gv
[
i
][0] != '-'))

356 
j
 = 0;j < 8 && 
¨gv
[
i
][j] &&árgv[i][j] != '.';j++)

357 
gamíame
[
j
] = 
¨gv
[
i
][j];

358 
gamíame
[
j
] = 0;

362 
i
 = 1; i < 
¨gc
; i++)

365 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°")Ë
li°
 = 
LIST_LIST
;

366 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°öfo")Ë
li°
 = 
LIST_LISTINFO
;

367 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°fuŒ")Ë
li°
 = 
LIST_LISTFULL
;

368 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°dëaûs")Ë
li°
 = 
LIST_LISTDETAILS
;

369 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-gamñi°hódî")Ë
li°
 = 
LIST_GAMELISTHEADER
;

370 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-gamñi°foŸî")Ë
li°
 = 
LIST_GAMELISTFOOTER
;

371 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-gamñi°")Ë
li°
 = 
LIST_GAMELIST
;

372 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°games")Ë
li°
 = 
LIST_LISTGAMES
;

373 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°˛⁄es")Ë
li°
 = 
LIST_LISTCLONES
;

374 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°ßmdú")Ë
li°
 = 
LIST_LISTSAMDIR
;

375 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°¸c")Ë
li°
 = 
LIST_LISTCRC
;

376 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°dup¸c")Ë
li°
 = 
LIST_LISTDUPCRC
;

377 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°wr⁄gmîge")Ë
li°
 = 
LIST_WRONGMERGE
;

378 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°romsize")Ë
li°
 = 
LIST_LISTROMSIZE
;

379 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°˝u")Ë
li°
 = 
LIST_LISTCPU
;

380 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-wr⁄g‹õ¡©i⁄")Ë
li°
 = 
LIST_WRONGORIENTATION
;

381 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-wr⁄gÂs")Ë
li°
 = 
LIST_WRONGFPS
;

382 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-no˛⁄es")Ë
li°˛⁄es
 = 0;

383 #ifde‡
MESS


384 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°devi˚s")Ë
li°
 = 
LIST_MESSINFO
;

385 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°ãxt")Ë
li°
 = 
LIST_MESSINFO
;

386 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-¸óãdú")Ë
li°
 = 
LIST_MESSINFO
;

391 i‡(
	`°æí
(
gamíame
) > 0)

393 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°roms")Ë
li°
 = 
LIST_LISTROMS
;

394 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-li°ßm∂es")Ë
li°
 = 
LIST_LISTSAMPLES
;

395 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-vîifyroms")Ë
vîify
 = 
VERIFY_ROMS
;

396 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-vîify£ts")Ë
vîify
 = 
VERIFY_ROMS
|
VERIFY_VERBOSE
|
VERIFY_TERSE
;

397 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-v£t")Ë
vîify
 = 
VERIFY_ROMS
|
VERIFY_VERBOSE
;

398 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-vîifyßm∂es")Ë
vîify
 = 
VERIFY_SAMPLES
|
VERIFY_VERBOSE
;

399 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-vßm")Ë
vîify
 = 
VERIFY_SAMPLES
|
VERIFY_VERBOSE
;

400 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-romidít")Ë
idít
 = 1;

401 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-isknown")Ë
idít
 = 2;

402 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-sour˚fûe")Ë
li°
 = 
LIST_SOURCEFILE
;

406 i‡((
	`°æí
(
gamíame
)> 0Ë|| 
li°
 || 
vîify
Ë
hñp
 = 0;

408 
i
 = 1;ò< 
¨gc
;i++)

411 i‡(!
	`°rˇ£cmp
(
¨gv
[
i
],"-?") || !strcasecmp(argv[i],"-h") || !strcasecmp(argv[i],"-help"))

412 
hñp
 = 1;

415 i‡(
hñp
)

417 #i‚de‡
MESS


418 
	`¥ötf
("M.A.M.E. v%s - Multiple Arcade Machine Emulator\n"

419 "C›yrighà(CË1997-2000 by Nicﬁ®SÆm‹üándÅhêMAME Tóm\n\n",
buûd_vîsi⁄
);

420 
	`showdis˛aimî
();

421 
	`¥ötf
("Usage: MAME gamename [options]\n\n"

426 
	`showmessöfo
();

431 
li°
)

434 #ifde‡
MESS


435 
LIST_MESSINFO
:

437 
i
=1;i<
¨gc
;i++)

441 !
	`°rˇ£cmp
(
¨gv
[
i
],"-listdevices") |

442 !
	`°rˇ£cmp
(
¨gv
[
i
],"-listtext") |

443 !
	`°rˇ£cmp
(
¨gv
[
i
],"-createdir")

447 
	`li°_mess_öfo
(
gamíame
, 
¨gv
[
i
], 
li°˛⁄es
);

455 
LIST_LIST
:

456 #i‚de‡
MESS


457 
	`¥ötf
("\nMAME currently supportsÅhe following games:\n\n");

459 
	`¥ötf
("\nMESS currently supportsÅhe following systems:\n\n");

461 
i
 = 0; 
j
 = 0;

462 
drivîs
[
i
])

464 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

465 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

466 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

468 
	`¥ötf
("%-8s",
drivîs
[
i
]->
«me
);

469 
j
++;

470 i‡(!(
j
 % 8)Ë
	`¥ötf
("\n");

471 
	`¥ötf
(" ");

473 
i
++;

475 i‡(
j
 % 8Ë
	`¥ötf
("\n");

476 
	`¥ötf
("\n");

477 i‡(
j
 !
i
Ë
	`¥ötf
("Total ROM sets displayed: %4d - ", j);

478 #i‚de‡
MESS


479 
	`¥ötf
("TŸÆ ROM së†suµ‹ãd: %4d\n", 
i
);

481 
	`¥ötf
("TŸÆ Sy°em†suµ‹ãd: %4d\n", 
i
);

486 
LIST_LISTFULL
:

487 
	`¥ötf
("Name: Description:\n");

488 
i
 = 0;

489 
drivîs
[
i
])

491 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

492 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

493 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

495 
«me
[200];

497 
	`¥ötf
("%-10s",
drivîs
[
i
]->
«me
);

499 
	`°r˝y
(
«me
,
drivîs
[
i
]->
des¸ùti⁄
);

502 i‡(
	`°r°r
(
«me
," (")) *strstr(name," (") = 0;

503 i‡(
	`°∫cmp
(
«me
,"The ",4) == 0)

505 
	`¥ötf
("\"%s",
«me
+4);

506 
	`¥ötf
(", The");

509 
	`¥ötf
("\"%s",
«me
);

512 i‡(
li°˛⁄es
)

514 i‡(
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('))

515 
	`¥ötf
(" %s",
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('));

517 
	`¥ötf
("\"\n");

519 
i
++;

524 
LIST_LISTSAMDIR
:

525 
	`¥ötf
("Name: Samples dir:\n");

526 
i
 = 0;

527 
drivîs
[
i
])

529 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

530 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

531 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

533 #i‡(
HAS_SAMPLES
)

534  
j
 = 0; 
drivîs
[
i
]->
drv
->
sound
[j].
sound_ty≥
 && j < 
MAX_SOUND
; j++ )

536 c⁄° **
ßm∂íames
;

537 if–
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_ty≥
 !
SOUND_SAMPLES
 )

539 
ßm∂íames
 = ((
Sam∂esöãrÁ˚
 *)
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_öãrÁ˚
)->samplenames;

540 i‡(
ßm∂íames
 != 0 && samplenames[0] != 0)

542 
	`¥ötf
("%-10s",
drivîs
[
i
]->
«me
);

543 i‡(
ßm∂íames
[0][0] == '*')

544 
	`¥ötf
("%s\n",
ßm∂íames
[0]+1);

546 
	`¥ötf
("%s\n",
drivîs
[
i
]->
«me
);

551 
i
++;

556 
LIST_LISTROMS
:

557 
LIST_LISTSAMPLES
:

558 
j
 = 0;

559 
drivîs
[
j
] && (
	`°rˇ£cmp
(
gamíame
,drivîs[j]->
«me
) != 0))

560 
j
++;

561 i‡(
drivîs
[
j
] == 0)

563 
	`¥ötf
("Gamê\"%s\"ÇŸ suµ‹ãd!\n",
gamíame
);

566 
gamedrv
 = 
drivîs
[
j
];

567 i‡(
li°
 =
LIST_LISTROMS
)

568 
	`¥öåomli°
(
gamedrv
->
rom
,
gamíame
);

571 #i‡(
HAS_SAMPLES
)

572 
k
;

573  
k
 = 0; 
gamedrv
->
drv
->
sound
[k].
sound_ty≥
 && k < 
MAX_SOUND
; k++ )

575 c⁄° **
ßm∂íames
;

576 if–
gamedrv
->
drv
->
sound
[
k
].
sound_ty≥
 !
SOUND_SAMPLES
 )

578 
ßm∂íames
 = ((
Sam∂esöãrÁ˚
 *)
gamedrv
->
drv
->
sound
[
k
].
sound_öãrÁ˚
)->samplenames;

579 i‡(
ßm∂íames
 != 0 && samplenames[0] != 0)

581 
i
 = 0;

582 
ßm∂íames
[
i
] != 0)

584 
	`¥ötf
("%s\n",
ßm∂íames
[
i
]);

585 
i
++;

594 
LIST_LMR
:

596 
tŸÆ
;

598 
tŸÆ
 = 0;

599 
i
 = 0; 
drivîs
[i]; i++)

600 
tŸÆ
++;

601 
i
 = 0; 
drivîs
[i]; i++)

603 
fú°_missög
 = 1;

604 
	`gë_rom_ßm∂e_∑th
 (
¨gc
, 
¨gv
, 
i
);

605 i‡(
	`Rom£tMissög
 (
i
))

607 i‡(
fú°_missög
)

609 
fú°_missög
 = 0;

610 
	`¥ötf
 ("game clone of description\n");

611 
	`¥ötf
 ("-------- -------- -----------\n");

613 
	`¥ötf
 ("%-10s%-10s%s\n",

614 
drivîs
[
i
]->
«me
,

615 (
drivîs
[
i
]->
˛⁄e_of
Ë? drivîs[i]->˛⁄e_of->
«me
 : "",

616 
drivîs
[
i
]->
des¸ùti⁄
);

618 
	`Ârötf
(
°dîr
,"%d%%\r",100 * (
i
+1Ë/ 
tŸÆ
);

624 
LIST_LISTDETAILS
:

628 
	`¥ötf
("Ñomname driver ");

629 
j
=0;j<
MAX_CPU
;j++Ë
	`¥ötf
("cpu %d ",j+1);

630 
j
=0;j<
MAX_SOUND
;j++Ë
	`¥ötf
("sound %d ",j+1);

631 
	`¥ötf
("name\n");

632 
	`¥ötf
("-------- ---------- ");

633 
j
=0;j<
MAX_CPU
;j++Ë
	`¥ötf
("-------- ");

634 
j
=0;j<
MAX_SOUND
;j++Ë
	`¥ötf
("----------- ");

635 
	`¥ötf
("--------------------------\n");

639 
i
 = 0;

641 
drivîs
[
i
])

643 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

644 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

645 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

649 c⁄° 
MachöeDrivî
 *
x_drivî
 = 
drivîs
[
i
]->
drv
;

650 c⁄° 
MachöeCPU
 *
x_˝u
 = 
x_drivî
->
˝u
;

651 c⁄° 
MachöeSound
 *
x_sound
 = 
x_drivî
->
sound
;

655 
	`¥ötf
("%-8†",
drivîs
[
i
]->
«me
);

657 #i‚de‡
MESS


659 
	`¥ötf
("%-10†",&
drivîs
[
i
]->
sour˚_fûe
[12]);

662 
	`¥ötf
("%-10†",&
drivîs
[
i
]->
sour˚_fûe
[17]);

667 
j
=0;j<
MAX_CPU
;j++)

669 i‡(
x_˝u
[
j
].
˝u_ty≥
 & 
CPU_AUDIO_CPU
)

670 
	`¥ötf
("[%-6s] ",
	`˝uty≥_«me
(
x_˝u
[
j
].
˝u_ty≥
));

672 
	`¥ötf
("%-8†",
	`˝uty≥_«me
(
x_˝u
[
j
].
˝u_ty≥
));

677 
j
=0;j<
MAX_SOUND
;j++)

679 i‡(
	`sound_num
(&
x_sound
[
j
]))

681 
	`¥ötf
("%dx",
	`sound_num
(&
x_sound
[
j
]));

682 
	`¥ötf
("%-9†",
	`sound_«me
(&
x_sound
[
j
]));

685 
	`¥ötf
("%-11†",
	`sound_«me
(&
x_sound
[
j
]));

690 
	`¥ötf
("%s\n",
drivîs
[
i
]->
des¸ùti⁄
);

692 
i
++;

697 
LIST_GAMELISTHEADER
:

698 
	`¥ötf
("Thi†i†thêcom∂ëêli° o‡game†suµ‹ãd by MAME %s\n",
buûd_vîsi⁄
);

699 i‡(!
li°˛⁄es
)

700 
	`¥ötf
("Variants ofÅhe same gameáreÇot included, you can useÅhe -listclones command\n"

702 
	`¥ötf
("\n"

733 
	`¥ötf
("+----------------------------------+-------+-------+-------+-------+----------+\n");

734 
	`¥ötf
("| | |Correct| |Screen | Internal |\n");

735 
	`¥ötf
("| Game Name |Working|Colors | Sound | Flip | Name |\n");

736 
	`¥ötf
("+----------------------------------+-------+-------+-------+-------+----------+\n");

740 
LIST_GAMELISTFOOTER
:

741 
	`¥ötf
("+----------------------------------+-------+-------+-------+-------+----------+\n\n");

742 
	`¥ötf
("(1) Thereáre variants ofÅhe game (usually bootlegs)Åhat work correctly\n");

743 #i‡(
HAS_SAMPLES
)

744 
	`¥ötf
("(2) Needs samplesÖrovided separately\n");

749 
LIST_GAMELIST
:

750 
i
 = 0;

752 
drivîs
[
i
])

754 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

755 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

756 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

758 
«me
[200],
«me_ªf
[200];

760 
	`°r˝y
(
«me
,
drivîs
[
i
]->
des¸ùti⁄
);

763 i‡(
	`°r°r
(
«me
," (")) *strstr(name," (") = 0;

764 i‡(
	`°∫cmp
(
«me
,"The ",4) == 0)

766 
	`•rötf
(
«me_ªf
,"%s, Thê",
«me
+4);

769 
	`•rötf
(
«me_ªf
,"%†",
«me
);

772 i‡(
li°˛⁄es
)

774 i‡(
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('))

775 
	`°rˇt
(
«me_ªf
,
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('));

778 
	`¥ötf
("| %-33.33s",
«me_ªf
);

780 i‡(
drivîs
[
i
]->
Êags
 & (
GAME_NOT_WORKING
 | 
GAME_UNEMULATED_PROTECTION
))

782 c⁄° 
GameDrivî
 *
maödrv
;

783 
foundw‹kög
;

785 i‡(
drivîs
[
i
]->
˛⁄e_of
 && !(drivîs[i]->˛⁄e_of->
Êags
 & 
NOT_A_DRIVER
))

786 
maödrv
 = 
drivîs
[
i
]->
˛⁄e_of
;

787 
maödrv
 = 
drivîs
[
i
];

789 
foundw‹kög
 = 0;

790 
j
 = 0;

791 
drivîs
[
j
])

793 i‡(
drivîs
[
j
] =
maödrv
 || drivîs[j]->
˛⁄e_of
 == maindrv)

795 i‡((
drivîs
[
j
]->
Êags
 & (
GAME_NOT_WORKING
 | 
GAME_UNEMULATED_PROTECTION
)) == 0)

797 
foundw‹kög
 = 1;

801 
j
++;

804 i‡(
foundw‹kög
)

805 
	`¥ötf
("| No(1) ");

807 
	`¥ötf
("| No ");

810 
	`¥ötf
("| Yes ");

812 i‡(
drivîs
[
i
]->
Êags
 & 
GAME_WRONG_COLORS
)

813 
	`¥ötf
("| No ");

814 i‡(
drivîs
[
i
]->
Êags
 & 
GAME_IMPERFECT_COLORS
)

815 
	`¥ötf
("| Close ");

817 
	`¥ötf
("| Yes ");

820 c⁄° **
ßm∂íames
 = 0;

821 #i‡(
HAS_SAMPLES
)

822 
j
 = 0;
drivîs
[
i
]->
drv
->
sound
[j].
sound_ty≥
 && j < 
MAX_SOUND
; j++)

824 i‡(
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_ty≥
 =
SOUND_SAMPLES
)

826 
ßm∂íames
 = ((
Sam∂esöãrÁ˚
 *)
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_öãrÁ˚
)->samplenames;

831 i‡(
drivîs
[
i
]->
Êags
 & 
GAME_NO_SOUND
)

832 
	`¥ötf
("| No ");

833 i‡(
drivîs
[
i
]->
Êags
 & 
GAME_IMPERFECT_SOUND
)

835 i‡(
ßm∂íames
)

836 
	`¥ötf
("|Part(2)");

838 
	`¥ötf
("|Partial");

842 i‡(
ßm∂íames
)

843 
	`¥ötf
("| Yes(2)");

845 
	`¥ötf
("| Yes ");

849 i‡(
drivîs
[
i
]->
Êags
 & 
GAME_NO_COCKTAIL
)

850 
	`¥ötf
("| No ");

852 
	`¥ötf
("| Yes ");

854 
	`¥ötf
("| %-8†|\n",
drivîs
[
i
]->
«me
);

856 
i
++;

861 
LIST_LISTGAMES
:

862 
i
 = 0;

863 
drivîs
[
i
])

865 i‡((
li°˛⁄es
 || 
drivîs
[
i
]->
˛⁄e_of
 == 0

866 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)

867 Ë&& !
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
des¸ùti⁄
))

869 
«me
[200];

871 
	`¥ötf
("%-5s%-36†",
drivîs
[
i
]->
yór
,drivîs[i]->
m™uÁ˘uªr
);

873 
	`°r˝y
(
«me
,
drivîs
[
i
]->
des¸ùti⁄
);

876 i‡(
	`°r°r
(
«me
," (")) *strstr(name," (") = 0;

877 i‡(
	`°∫cmp
(
«me
,"The ",4) == 0)

879 
	`¥ötf
("%s",
«me
+4);

880 
	`¥ötf
(", The");

883 
	`¥ötf
("%s",
«me
);

886 i‡(
li°˛⁄es
)

888 i‡(
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('))

889 
	`¥ötf
(" %s",
	`°rchr
(
drivîs
[
i
]->
des¸ùti⁄
,'('));

891 
	`¥ötf
("\n");

893 
i
++;

898 
LIST_LISTCLONES
:

899 
	`¥ötf
("Name: Clone of:\n");

900 
i
 = 0;

901 
drivîs
[
i
])

903 i‡(
drivîs
[
i
]->
˛⁄e_of
 && !(drivîs[i]->˛⁄e_of->
Êags
 & 
NOT_A_DRIVER
) &&

904 (!
	`°rwûdcmp
(
gamíame
,
drivîs
[
i
]->
«me
)

905 || !
	`°rwûdcmp
(
gamíame
,
drivîs
[
i
]->
˛⁄e_of
->
«me
)))

906 
	`¥ötf
("%-8†%-8s\n",
drivîs
[
i
]->
«me
,drivîs[i]->
˛⁄e_of
->name);

907 
i
++;

912 
LIST_WRONGORIENTATION
:

913 
drivîs
[
i
])

915 i‡((
drivîs
[
i
]->
drv
->
video_©åibuãs
 & 
VIDEO_TYPE_VECTOR
) == 0 &&

916 (
drivîs
[
i
]->
˛⁄e_of
 == 0

917 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)) &&

918 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_x
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_x
 + 1 <=

919 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_y
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_y
 + 1)

921 i‡(
	`°rcmp
(
drivîs
[
i
]->
«me
,"crater") &&

922 
	`°rcmp
(
drivîs
[
i
]->
«me
,"mpatrol") &&

923 
	`°rcmp
(
drivîs
[
i
]->
«me
,"troangel") &&

924 
	`°rcmp
(
drivîs
[
i
]->
«me
,"travrusa") &&

925 
	`°rcmp
(
drivîs
[
i
]->
«me
,"kungfum") &&

926 
	`°rcmp
(
drivîs
[
i
]->
«me
,"battroad") &&

927 
	`°rcmp
(
drivîs
[
i
]->
«me
,"vigilant") &&

928 
	`°rcmp
(
drivîs
[
i
]->
«me
,"sonson") &&

929 
	`°rcmp
(
drivîs
[
i
]->
«me
,"brkthru") &&

930 
	`°rcmp
(
drivîs
[
i
]->
«me
,"darwin") &&

931 
	`°rcmp
(
drivîs
[
i
]->
«me
,"exprraid") &&

932 
	`°rcmp
(
drivîs
[
i
]->
«me
,"sidetrac") &&

933 
	`°rcmp
(
drivîs
[
i
]->
«me
,"targ") &&

934 
	`°rcmp
(
drivîs
[
i
]->
«me
,"spectar") &&

935 
	`°rcmp
(
drivîs
[
i
]->
«me
,"venture") &&

936 
	`°rcmp
(
drivîs
[
i
]->
«me
,"mtrap") &&

937 
	`°rcmp
(
drivîs
[
i
]->
«me
,"pepper2") &&

938 
	`°rcmp
(
drivîs
[
i
]->
«me
,"hardhat") &&

939 
	`°rcmp
(
drivîs
[
i
]->
«me
,"fax") &&

940 
	`°rcmp
(
drivîs
[
i
]->
«me
,"circus") &&

941 
	`°rcmp
(
drivîs
[
i
]->
«me
,"robotbwl") &&

942 
	`°rcmp
(
drivîs
[
i
]->
«me
,"crash") &&

943 
	`°rcmp
(
drivîs
[
i
]->
«me
,"ripcord") &&

944 
	`°rcmp
(
drivîs
[
i
]->
«me
,"starfire") &&

945 
	`°rcmp
(
drivîs
[
i
]->
«me
,"fireone") &&

946 
	`°rcmp
(
drivîs
[
i
]->
«me
,"renegade") &&

947 
	`°rcmp
(
drivîs
[
i
]->
«me
,"battlane") &&

948 
	`°rcmp
(
drivîs
[
i
]->
«me
,"megatack") &&

949 
	`°rcmp
(
drivîs
[
i
]->
«me
,"killcom") &&

950 
	`°rcmp
(
drivîs
[
i
]->
«me
,"challeng") &&

951 
	`°rcmp
(
drivîs
[
i
]->
«me
,"kaos") &&

952 
	`°rcmp
(
drivîs
[
i
]->
«me
,"formatz") &&

953 
	`°rcmp
(
drivîs
[
i
]->
«me
,"bankp") &&

954 
	`°rcmp
(
drivîs
[
i
]->
«me
,"liberatr") &&

955 
	`°rcmp
(
drivîs
[
i
]->
«me
,"toki") &&

956 
	`°rcmp
(
drivîs
[
i
]->
«me
,"stactics") &&

957 
	`°rcmp
(
drivîs
[
i
]->
«me
,"sprint1") &&

958 
	`°rcmp
(
drivîs
[
i
]->
«me
,"sprint2") &&

959 
	`°rcmp
(
drivîs
[
i
]->
«me
,"nitedrvr") &&

960 
	`°rcmp
(
drivîs
[
i
]->
«me
,"punchout") &&

961 
	`°rcmp
(
drivîs
[
i
]->
«me
,"spnchout") &&

962 
	`°rcmp
(
drivîs
[
i
]->
«me
,"armwrest") &&

963 
	`°rcmp
(
drivîs
[
i
]->
«me
,"route16") &&

964 
	`°rcmp
(
drivîs
[
i
]->
«me
,"stratvox") &&

965 
	`°rcmp
(
drivîs
[
i
]->
«me
,"irobot") &&

966 
	`°rcmp
(
drivîs
[
i
]->
«me
,"leprechn") &&

967 
	`°rcmp
(
drivîs
[
i
]->
«me
,"starcrus") &&

968 
	`°rcmp
(
drivîs
[
i
]->
«me
,"astrof") &&

969 
	`°rcmp
(
drivîs
[
i
]->
«me
,"tomahawk") &&

971 
	`¥ötf
("%†%dx%d\n",
drivîs
[
i
]->
«me
,

972 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_x
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_x
 + 1,

973 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_y
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_y
 + 1);

975 
i
++;

980 
LIST_WRONGFPS
:

981 
drivîs
[
i
])

983 i‡((
drivîs
[
i
]->
drv
->
video_©åibuãs
 & 
VIDEO_TYPE_VECTOR
) == 0 &&

984 (
drivîs
[
i
]->
˛⁄e_of
 == 0

985 || (
drivîs
[
i
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
)) &&

986 
drivîs
[
i
]->
drv
->
‰ames_≥r_£c⁄d
 > 57 &&

987 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_y
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_y
 + 1 > 244 &&

988 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_y
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_y
 + 1 <= 256)

990 
	`¥ötf
("%†%dx%d %fHz\n",
drivîs
[
i
]->
«me
,

991 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_x
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_x
 + 1,

992 
drivîs
[
i
]->
drv
->
deÁu…_visibÀ_¨ó
.
max_y
 - drivîs[i]->drv->deÁu…_visibÀ_¨ó.
mö_y
 + 1,

993 
drivîs
[
i
]->
drv
->
‰ames_≥r_£c⁄d
);

995 
i
++;

1000 
LIST_SOURCEFILE
:

1001 
i
 = 0;

1002 
drivîs
[
i
])

1004 i‡(!
	`°rwûdcmp
(
gamíame
,
drivîs
[
i
]->
«me
))

1005 
	`¥ötf
("%-8†%s\n",
drivîs
[
i
]->
«me
,drivîs[i]->
sour˚_fûe
);

1006 
i
++;

1011 
LIST_LISTCRC
:

1012 
i
 = 0;

1013 
drivîs
[
i
])

1015 c⁄° 
RomModuÀ
 *
romp
;

1017 
romp
 = 
drivîs
[
i
]->
rom
;

1019 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

1021 i‡(
romp
->
«me
 &&Ñomp->name != (*)-1)

1022 
	`¥ötf
("%08x %-12†%s\n",
romp
->
¸c
,romp->
«me
,
drivîs
[
i
]->
des¸ùti⁄
);

1024 
romp
++;

1027 
i
++;

1032 
LIST_LISTDUPCRC
:

1033 
i
 = 0;

1034 
drivîs
[
i
])

1036 c⁄° 
RomModuÀ
 *
romp
;

1038 
romp
 = 
drivîs
[
i
]->
rom
;

1040 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

1042 i‡(
romp
->
«me
 &&Ñomp->«mê!(*)-1 &&Ñomp->
¸c
)

1044 
j
 = 
i
+1;

1045 
drivîs
[
j
])

1047 c⁄° 
RomModuÀ
 *
romp1
;

1049 
romp1
 = 
drivîs
[
j
]->
rom
;

1051 
romp1
 && (romp1->
«me
 ||Ñomp1->
off£t
 ||Ñomp1->
Àngth
))

1053 i‡(
romp1
->
«me
 &&Ñomp1->name != (*)-1 &&

1054 
	`°rcmp
(
romp
->
«me
,
romp1
->name) &&

1055 
romp1
->
¸c
 =
romp
->crc)

1057 
	`¥ötf
("%08x %-12†%-8†<-> %-12†%-8s\n",
romp
->
¸c
,

1058 
romp
->
«me
,
drivîs
[
i
]->name,

1059 
romp1
->
«me
,
drivîs
[
j
]->name);

1062 
romp1
++;

1065 
j
++;

1069 
romp
++;

1072 
i
++;

1078 
LIST_WRONGMERGE
:

1079 
i
 = 0;

1080 
drivîs
[
i
])

1082 c⁄° 
RomModuÀ
 *
romp
;

1084 
romp
 = 
drivîs
[
i
]->
rom
;

1086 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

1088 i‡(
romp
->
«me
 &&Ñomp->«mê!(*)-1 &&Ñomp->
¸c
)

1090 
j
 = 0;

1091 
drivîs
[
j
])

1093 i‡(
j
 !
i
 &&

1094 
drivîs
[
j
]->
˛⁄e_of
 &&

1095 (
drivîs
[
j
]->
˛⁄e_of
->
Êags
 & 
NOT_A_DRIVER
) == 0 &&

1096 (
drivîs
[
j
]->
˛⁄e_of
 =drivîs[
i
] ||

1097 (
i
 < 
j
 && 
drivîs
[j]->
˛⁄e_of
 == drivers[i]->clone_of)))

1099 c⁄° 
RomModuÀ
 *
romp1
;

1100 
m©ch
;

1103 
romp1
 = 
drivîs
[
j
]->
rom
;

1104 
m©ch
 = 0;

1106 
romp1
 && (romp1->
«me
 ||Ñomp1->
off£t
 ||Ñomp1->
Àngth
))

1108 i‡(
romp1
->
«me
 &&Ñomp1->name != (*)-1 &&

1109 !
	`°rcmp
(
romp
->
«me
,
romp1
->name))

1111 
m©ch
 = 1;

1115 
romp1
++;

1118 i‡(
m©ch
 == 0)

1120 
romp1
 = 
drivîs
[
j
]->
rom
;

1122 
romp1
 && (romp1->
«me
 ||Ñomp1->
off£t
 ||Ñomp1->
Àngth
))

1124 i‡(
romp1
->
«me
 &&Ñomp1->name != (*)-1 &&

1125 
	`°rcmp
(
romp
->
«me
,
romp1
->name) &&

1126 
romp1
->
¸c
 =
romp
->crc)

1128 
	`¥ötf
("%08x %-12†%-8†<-> %-12†%-8s\n",
romp
->
¸c
,

1129 
romp
->
«me
,
drivîs
[
i
]->name,

1130 
romp1
->
«me
,
drivîs
[
j
]->name);

1133 
romp1
++;

1137 
j
++;

1141 
romp
++;

1144 
i
++;

1149 
LIST_LISTROMSIZE
:

1150 
i
 = 0;

1151 
drivîs
[
i
])

1153 i‡(
drivîs
[
i
]->
˛⁄e_of
 =0 || (drivîs[i]->˛⁄e_of->
Êags
 & 
NOT_A_DRIVER
))

1155 c⁄° 
RomModuÀ
 *
romp
;

1156 
j
 = 0;

1158 
romp
 = 
drivîs
[
i
]->
rom
;

1160 
romp
 && (romp->
«me
 ||Ñomp->
off£t
 ||Ñomp->
Àngth
))

1162 
j
 +
romp
->
Àngth
 & ~
ROMFLAG_MASK
;

1164 
romp
++;

1166 
	`¥ötf
("%-8s\t%-5s\t%u\n",
drivîs
[
i
]->
«me
,drivîs[i]->
yór
,
j
);

1169 
i
++;

1174 
LIST_LISTCPU
:

1176 
yór
;

1178 
j
 = 1;j < 
CPU_COUNT
;j++)

1179 
	`¥ötf
("\t%s",
	`˝uty≥_«me
(
j
));

1180 
	`¥ötf
("\n");

1182 
yór
 = 1980;year <= 1995;year++)

1184 
cou¡
[
CPU_COUNT
];

1186 
j
 = 0;j < 
CPU_COUNT
;j++)

1187 
cou¡
[
j
] = 0;

1189 
i
 = 0;

1190 
drivîs
[
i
])

1192 i‡(
drivîs
[
i
]->
˛⁄e_of
 =0 || (drivîs[i]->˛⁄e_of->
Êags
 & 
NOT_A_DRIVER
))

1194 c⁄° 
MachöeDrivî
 *
x_drivî
 = 
drivîs
[
i
]->
drv
;

1195 c⁄° 
MachöeCPU
 *
x_˝u
 = 
x_drivî
->
˝u
;

1197 i‡(
	`©oi
(
drivîs
[
i
]->
yór
) == year)

1200 
j
 = 0;

1201 
cou¡
[
x_˝u
[
j
].
˝u_ty≥
 & ~
CPU_FLAGS_MASK
]++;

1205 
i
++;

1208 
	`¥ötf
("%d",
yór
);

1209 
j
 = 1;j < 
CPU_COUNT
;j++)

1210 
	`¥ötf
("\t%d",
cou¡
[
j
]);

1211 
	`¥ötf
("\n");

1218 
LIST_LISTINFO
:

1219 
	`¥öt_mame_öfo
–
°dout
, 
drivîs
 );

1223 i‡(
vîify
)

1225 
îr
 = 0;

1226 
c‹ª˘
 = 0;

1227 
öc‹ª˘
 = 0;

1228 
ªs
 = 0;

1229 
tŸÆ
 = 0;

1230 
checked
 = 0;

1231 
nŸfound
 = 0;

1234 
i
 = 0; 
drivîs
[i]; i++)

1236 i‡(!
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

1237 
tŸÆ
++;

1240 
i
 = 0; 
drivîs
[i]; i++)

1242 i‡(
	`°rwûdcmp
(
gamíame
, 
drivîs
[
i
]->
«me
))

1246 
	`gë_rom_ßm∂e_∑th
 (
¨gc
, 
¨gv
, 
i
);

1248 i‡(
vîify
 & 
VERIFY_ROMS
)

1250 
ªs
 = 
	`VîifyRomSë
 (
i
,(
vîify
 & 
VERIFY_TERSE
Ë? 
ãr£_¥ötf
 : (
vîify_¥ötf_¥oc
)
¥ötf
);

1252 i‡(
ªs
 =
CLONE_NOTFOUND
 ||Ñe†=
NOTFOUND
)

1254 
nŸfound
++;

1255 
√xéo›
;

1258 i‡(
ªs
 =
INCORRECT
 ||Ñe†=
BEST_AVAILABLE
 || (
vîify
 & 
VERIFY_VERBOSE
))

1260 
	`¥ötf
 ("rom£à%†", 
drivîs
[
i
]->
«me
);

1261 i‡(
drivîs
[
i
]->
˛⁄e_of
 && !(drivîs[i]->˛⁄e_of->
Êags
 & 
NOT_A_DRIVER
))

1262 
	`¥ötf
 ("[%s] ", 
drivîs
[
i
]->
˛⁄e_of
->
«me
);

1265 i‡(
vîify
 & 
VERIFY_SAMPLES
)

1267 c⁄° **
ßm∂íames
 = 
NULL
;

1268 #i‡(
HAS_SAMPLES
)

1269  
j
 = 0; 
drivîs
[
i
]->
drv
->
sound
[j].
sound_ty≥
 && j < 
MAX_SOUND
; j++ )

1270 if–
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_ty≥
 =
SOUND_SAMPLES
 )

1271 
ßm∂íames
 = ((
Sam∂esöãrÁ˚
 *)
drivîs
[
i
]->
drv
->
sound
[
j
].
sound_öãrÁ˚
)->samplenames;

1274 i‡(
ßm∂íames
 == 0 || samplenames[0] == 0)

1275 
√xéo›
;

1277 
ªs
 = 
	`VîifySam∂eSë
 (
i
,(
vîify_¥ötf_¥oc
)
¥ötf
);

1278 i‡(
ªs
 =
NOTFOUND
)

1280 
nŸfound
++;

1281 
√xéo›
;

1283 
	`¥ötf
 ("ßm∂e£à%†", 
drivîs
[
i
]->
«me
);

1286 i‡(
ªs
 =
NOTFOUND
)

1288 
	`¥ötf
 ("oops, shouldÇever comeálong here\n");

1290 i‡(
ªs
 =
INCORRECT
)

1292 
	`¥ötf
 ("is bad\n");

1293 
öc‹ª˘
++;

1295 i‡(
ªs
 =
CORRECT
)

1297 i‡(
vîify
 & 
VERIFY_VERBOSE
)

1298 
	`¥ötf
 ("is good\n");

1299 
c‹ª˘
++;

1301 i‡(
ªs
 =
BEST_AVAILABLE
)

1303 
	`¥ötf
 ("is bestávailable\n");

1304 
c‹ª˘
++;

1306 i‡(
ªs
)

1307 
îr
 = 
ªs
;

1309 
√xéo›
:

1310 
checked
++;

1311 
	`Ârötf
(
°dîr
,"%d%%\r",100 * 
checked
 / 
tŸÆ
);

1314 i‡(
c‹ª˘
+
öc‹ª˘
 == 0)

1316 
	`¥ötf
 ("%†", (
vîify
 & 
VERIFY_ROMS
) ? "romset" : "sampleset" );

1317 i‡(
nŸfound
 > 0)

1318 
	`¥ötf
("\"%8s\"ÇŸ found!\n",
gamíame
);

1320 
	`¥ötf
("\"%8s\"ÇŸ suµ‹ãd!\n",
gamíame
);

1325 
	`¥ötf
("%d %†found, %d wîêOK.\n", 
c‹ª˘
+
öc‹ª˘
,

1326 (
vîify
 & 
VERIFY_ROMS
)? "rom£ts" : "ßm∂e£ts", 
c‹ª˘
);

1327 i‡(
öc‹ª˘
 > 0)

1333 i‡(
idít
)

1335 i‡(
idít
 =2Ë
sûítidít
 = 1;

1336 
sûítidít
 = 0;

1338 
i
 = 1;ò< 
¨gc
;i++)

1341 i‡(
¨gv
[
i
][0] != '-')

1343 
known°©us
 = 
KNOWN_START
;

1344 
	`romidít
(
¨gv
[
i
],1);

1345 i‡(
idít
 == 2)

1347 
known°©us
)

1349 
KNOWN_START
: 
	`¥ötf
("ERROR %s\n",
¨gv
[
i
]); ;

1350 
KNOWN_ALL
: 
	`¥ötf
("KNOWN %s\n",
¨gv
[
i
]); ;

1351 
KNOWN_NONE
: 
	`¥ötf
("UNKNOWN %s\n",
¨gv
[
i
]); ;

1352 
KNOWN_SOME
: 
	`¥ötf
("PARTKNOWN %s\n",
¨gv
[
i
]); ;

1364 
	}
}

	@input.cpp

1 
	~"ÆÀgro.h
"

2 
	~"drivî.h
"

4 
m4Æl_exôGame
;

7 
	gu£_mou£
;

8 
	gjoy°ick
;

10 
	gExKey1
=0;

11 
	gExKey2
=0;

12 
	gExKey3
=0;

13 
	gExKey4
=0;

14 
	gnum_joy°icks
=4;

16 
	gjoy_™Æog_x
[4];

17 
	gjoy_™Æog_y
[4];

19 
	g™Æog_ªad
[4];

23 
	~"möimÆ.h
"

25 
KeybﬂrdInfo
 
	gkeyli°
[] =

27 { "A", 
KEY_A
, 
KEYCODE_A
 },

28 { "B", 
KEY_B
, 
KEYCODE_B
 },

29 { "C", 
KEY_C
, 
KEYCODE_C
 },

30 { "D", 
KEY_D
, 
KEYCODE_D
 },

31 { "E", 
KEY_E
, 
KEYCODE_E
 },

32 { "F", 
KEY_F
, 
KEYCODE_F
 },

33 { "G", 
KEY_G
, 
KEYCODE_G
 },

34 { "H", 
KEY_H
, 
KEYCODE_H
 },

35 { "I", 
KEY_I
, 
KEYCODE_I
 },

36 { "J", 
KEY_J
, 
KEYCODE_J
 },

37 { "K", 
KEY_K
, 
KEYCODE_K
 },

38 { "L", 
KEY_L
, 
KEYCODE_L
 },

39 { "M", 
KEY_M
, 
KEYCODE_M
 },

40 { "N", 
KEY_N
, 
KEYCODE_N
 },

41 { "O", 
KEY_O
, 
KEYCODE_O
 },

42 { "P", 
KEY_P
, 
KEYCODE_P
 },

43 { "Q", 
KEY_Q
, 
KEYCODE_Q
 },

44 { "R", 
KEY_R
, 
KEYCODE_R
 },

45 { "S", 
KEY_S
, 
KEYCODE_S
 },

46 { "T", 
KEY_T
, 
KEYCODE_T
 },

47 { "U", 
KEY_U
, 
KEYCODE_U
 },

48 { "V", 
KEY_V
, 
KEYCODE_V
 },

49 { "W", 
KEY_W
, 
KEYCODE_W
 },

50 { "X", 
KEY_X
, 
KEYCODE_X
 },

51 { "Y", 
KEY_Y
, 
KEYCODE_Y
 },

52 { "Z", 
KEY_Z
, 
KEYCODE_Z
 },

53 { "0", 
KEY_0
, 
KEYCODE_0
 },

54 { "1", 
KEY_1
, 
KEYCODE_1
 },

55 { "2", 
KEY_2
, 
KEYCODE_2
 },

56 { "3", 
KEY_3
, 
KEYCODE_3
 },

57 { "4", 
KEY_4
, 
KEYCODE_4
 },

58 { "5", 
KEY_5
, 
KEYCODE_5
 },

59 { "6", 
KEY_6
, 
KEYCODE_6
 },

60 { "7", 
KEY_7
, 
KEYCODE_7
 },

61 { "8", 
KEY_8
, 
KEYCODE_8
 },

62 { "9", 
KEY_9
, 
KEYCODE_9
 },

63 { "0 PAD", 
KEY_0_PAD
, 
KEYCODE_0_PAD
 },

64 { "1 PAD", 
KEY_1_PAD
, 
KEYCODE_1_PAD
 },

65 { "2 PAD", 
KEY_2_PAD
, 
KEYCODE_2_PAD
 },

66 { "3 PAD", 
KEY_3_PAD
, 
KEYCODE_3_PAD
 },

67 { "4 PAD", 
KEY_4_PAD
, 
KEYCODE_4_PAD
 },

68 { "5 PAD", 
KEY_5_PAD
, 
KEYCODE_5_PAD
 },

69 { "6 PAD", 
KEY_6_PAD
, 
KEYCODE_6_PAD
 },

70 { "7 PAD", 
KEY_7_PAD
, 
KEYCODE_7_PAD
 },

71 { "8 PAD", 
KEY_8_PAD
, 
KEYCODE_8_PAD
 },

72 { "9 PAD", 
KEY_9_PAD
, 
KEYCODE_9_PAD
 },

73 { "F1", 
KEY_F1
, 
KEYCODE_F1
 },

74 { "F2", 
KEY_F2
, 
KEYCODE_F2
 },

75 { "F3", 
KEY_F3
, 
KEYCODE_F3
 },

76 { "F4", 
KEY_F4
, 
KEYCODE_F4
 },

77 { "F5", 
KEY_F5
, 
KEYCODE_F5
 },

78 { "F6", 
KEY_F6
, 
KEYCODE_F6
 },

79 { "F7", 
KEY_F7
, 
KEYCODE_F7
 },

80 { "F8", 
KEY_F8
, 
KEYCODE_F8
 },

81 { "F9", 
KEY_F9
, 
KEYCODE_F9
 },

82 { "F10", 
KEY_F10
, 
KEYCODE_F10
 },

83 { "F11", 
KEY_F11
, 
KEYCODE_F11
 },

84 { "F12", 
KEY_F12
, 
KEYCODE_F12
 },

85 { "ESC", 
KEY_ESC
, 
KEYCODE_ESC
 },

86 { "~", 
KEY_TILDE
, 
KEYCODE_TILDE
 },

87 { "-", 
KEY_MINUS
, 
KEYCODE_MINUS
 },

88 { "=", 
KEY_EQUALS
, 
KEYCODE_EQUALS
 },

89 { "BKSPACE", 
KEY_BACKSPACE
, 
KEYCODE_BACKSPACE
 },

90 { "TAB", 
KEY_TAB
, 
KEYCODE_TAB
 },

91 { "[", 
KEY_OPENBRACE
, 
KEYCODE_OPENBRACE
 },

92 { "]", 
KEY_CLOSEBRACE
, 
KEYCODE_CLOSEBRACE
 },

93 { "ENTER", 
KEY_ENTER
, 
KEYCODE_ENTER
 },

94 { ";", 
KEY_COLON
, 
KEYCODE_COLON
 },

95 { ":", 
KEY_QUOTE
, 
KEYCODE_QUOTE
 },

96 { "\\", 
KEY_BACKSLASH
, 
KEYCODE_BACKSLASH
 },

97 { "<", 
KEY_BACKSLASH2
, 
KEYCODE_BACKSLASH2
 },

98 { ",", 
KEY_COMMA
, 
KEYCODE_COMMA
 },

99 { ".", 
KEY_STOP
, 
KEYCODE_STOP
 },

100 { "/", 
KEY_SLASH
, 
KEYCODE_SLASH
 },

101 { "SPACE", 
KEY_SPACE
, 
KEYCODE_SPACE
 },

102 { "INS", 
KEY_INSERT
, 
KEYCODE_INSERT
 },

103 { "DEL", 
KEY_DEL
, 
KEYCODE_DEL
 },

104 { "HOME", 
KEY_HOME
, 
KEYCODE_HOME
 },

105 { "END", 
KEY_END
, 
KEYCODE_END
 },

106 { "PGUP", 
KEY_PGUP
, 
KEYCODE_PGUP
 },

107 { "PGDN", 
KEY_PGDN
, 
KEYCODE_PGDN
 },

108 { "LEFT", 
KEY_LEFT
, 
KEYCODE_LEFT
 },

109 { "RIGHT", 
KEY_RIGHT
, 
KEYCODE_RIGHT
 },

110 { "UP", 
KEY_UP
, 
KEYCODE_UP
 },

111 { "DOWN", 
KEY_DOWN
, 
KEYCODE_DOWN
 },

112 { "/ PAD", 
KEY_SLASH_PAD
, 
KEYCODE_SLASH_PAD
 },

113 { "* PAD", 
KEY_ASTERISK
, 
KEYCODE_ASTERISK
 },

114 { "- PAD", 
KEY_MINUS_PAD
, 
KEYCODE_MINUS_PAD
 },

115 { "+ PAD", 
KEY_PLUS_PAD
, 
KEYCODE_PLUS_PAD
 },

116 { ". PAD", 
KEY_DEL_PAD
, 
KEYCODE_DEL_PAD
 },

117 { "ENTER PAD", 
KEY_ENTER_PAD
, 
KEYCODE_ENTER_PAD
 },

118 { "PRTSCR", 
KEY_PRTSCR
, 
KEYCODE_PRTSCR
 },

119 { "PAUSE", 
KEY_PAUSE
, 
KEYCODE_PAUSE
 },

120 { "LSHIFT", 
KEY_LSHIFT
, 
KEYCODE_LSHIFT
 },

121 { "RSHIFT", 
KEY_RSHIFT
, 
KEYCODE_RSHIFT
 },

122 { "LCTRL", 
KEY_LCONTROL
, 
KEYCODE_LCONTROL
 },

123 { "RCTRL", 
KEY_RCONTROL
, 
KEYCODE_RCONTROL
 },

124 { "ALT", 
KEY_ALT
, 
KEYCODE_LALT
 },

125 { "ALTGR", 
KEY_ALTGR
, 
KEYCODE_RALT
 },

126 { "LWIN", 
KEY_LWIN
, 
KEYCODE_OTHER
 },

127 { "RWIN", 
KEY_RWIN
, 
KEYCODE_OTHER
 },

128 { "MENU", 
KEY_MENU
, 
KEYCODE_OTHER
 },

129 { "SCRLOCK", 
KEY_SCRLOCK
, 
KEYCODE_SCRLOCK
 },

130 { "NUMLOCK", 
KEY_NUMLOCK
, 
KEYCODE_NUMLOCK
 },

131 { "CAPSLOCK", 
KEY_CAPSLOCK
, 
KEYCODE_CAPSLOCK
 },

137 c⁄° 
KeybﬂrdInfo
 *
	$osd_gë_key_li°
()

139  
keyli°
;

140 
	}
}

142 
	gkey
[
KEY_MAX
];

144 
	$upd©ekeybﬂrd
()

146 
i
=0;

149 
i
 = 0;ò< 
KEY_MAX
;i++)

151 
key
[
i
]=0;

167 
key
[
KEY_1
]=–(
ExKey1
 & 
GP2X_START
Ë&& !(ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
) );

169 
key
[
KEY_2
]=––(
ExKey1
 & 
GP2X_START
Ë&& !(ExKey1 & 
GP2X_SELECT
Ë&& (ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey2
 & GP2X_START));

171 
key
[
KEY_3
]=––(
ExKey1
 & 
GP2X_START
Ë&& !(ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& (ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey3
 & GP2X_START));

173 
key
[
KEY_4
]=––(
ExKey1
 & 
GP2X_START
Ë&& !(ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& (ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey4
 & GP2X_START));

175 
key
[
KEY_5
]=–!(
ExKey1
 & 
GP2X_START
Ë&& (ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
) );

177 
key
[
KEY_6
]=––!(
ExKey1
 & 
GP2X_START
Ë&& (ExKey1 & 
GP2X_SELECT
Ë&& (ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey2
 & GP2X_SELECT));

179 
key
[
KEY_7
]=––!(
ExKey1
 & 
GP2X_START
Ë&& (ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& (ExKey1 & 
GP2X_RIGHT
Ë&& !(ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey3
 & GP2X_SELECT));

181 
key
[
KEY_8
]=––!(
ExKey1
 & 
GP2X_START
Ë&& (ExKey1 & 
GP2X_SELECT
Ë&& !(ExKey1 & 
GP2X_UP
Ë&& !(ExKey1 & 
GP2X_RIGHT
Ë&& (ExKey1 & 
GP2X_DOWN
ËË|| (
ExKey4
 & GP2X_SELECT));

183 
key
[
KEY_TAB
]=(
ExKey1
 & 
GP2X_START
Ë&& (ExKey1 & 
GP2X_SELECT
);

184 
key
[
KEY_ENTER
]=(
ExKey1
 & 
GP2X_B
);

188 
key
[
KEY_ESC
]=
m4Æl_exôGame
;

192 
key
[
KEY_F11
]=(((
ExKey1
 & 
GP2X_L
Ë&& (ExKey1 & 
GP2X_START
)Ë|| ((ExKey1 & 
GP2X_R
Ë&& (ExKey1 & 
GP2X_SELECT
)));

193 
key
[
KEY_LSHIFT
]=((
ExKey1
 & 
GP2X_L
Ë&& (ExKey1 & 
GP2X_START
));

194 
	}
}

196 
	$osd_is_key_¥es£d
(
keycode
)

198 i‡(
keycode
 >
KEY_MAX
)  0;

200 i‡(
keycode
 =
KEY_PAUSE
)

202 
¥es£d
,
cou¡î
;

203 
ªs
;

205 
ªs
 = 
key
[
KEY_PAUSE
] ^ 
¥es£d
;

206 i‡(
ªs
)

208 i‡(
cou¡î
 > 0)

210 i‡(--
cou¡î
 == 0)

211 
¥es£d
 = 
key
[
KEY_PAUSE
];

213 
cou¡î
 = 10;

216  
ªs
;

219  
key
[
keycode
];

220 
	}
}

223 
	$osd_waô_key¥ess
()

230 
	}
}

233 
	$osd_ªadkey_unicode
(
Êush
)

243 
	}
}

254 
	#JOYCODE
(
joy
,
°ick
,
axis_‹_buâ⁄
,
dú
Ë\

	)

255 ((((
	gdú
)&0x03)<<14)|(((
	gaxis_‹_buâ⁄
)&0x3f)<<8)|(((
	g°ick
)&0x1f)<<3)|(((
	gjoy
)&0x07)<<0))

257 
	#GET_JOYCODE_JOY
(
code
Ë(((code)>>0)&0x07)

	)

258 
	#GET_JOYCODE_STICK
(
code
Ë(((code)>>3)&0x1f)

	)

259 
	#GET_JOYCODE_AXIS
(
code
Ë(((code)>>8)&0x3f)

	)

260 
	#GET_JOYCODE_BUTTON
(
code
Ë
	`GET_JOYCODE_AXIS
(code)

	)

261 
	#GET_JOYCODE_DIR
(
code
Ë(((code)>>14)&0x03)

	)

264 
	#MOUSE_BUTTON
(
buâ⁄
Ë
	`JOYCODE
(1,0,buâ⁄,1)

	)

267 
	#MAX_JOY
 256

	)

268 
	#MAX_JOY_NAME_LEN
 40

	)

270 
Joy°ickInfo
 
	gjoyli°
[
MAX_JOY
] =

276 
	gjoy«mes
[
MAX_JOY
][
MAX_JOY_NAME_LEN
+1];

279 
	gjoyequiv
[][2] =

281 { 
JOYCODE
(1,1,1,1), 
JOYCODE_1_LEFT
 },

282 { 
JOYCODE
(1,1,1,2), 
JOYCODE_1_RIGHT
 },

283 { 
JOYCODE
(1,1,2,1), 
JOYCODE_1_UP
 },

284 { 
JOYCODE
(1,1,2,2), 
JOYCODE_1_DOWN
 },

285 { 
JOYCODE
(1,0,1,0), 
JOYCODE_1_BUTTON1
 },

286 { 
JOYCODE
(1,0,2,0), 
JOYCODE_1_BUTTON2
 },

287 { 
JOYCODE
(1,0,3,0), 
JOYCODE_1_BUTTON3
 },

288 { 
JOYCODE
(1,0,4,0), 
JOYCODE_1_BUTTON4
 },

289 { 
JOYCODE
(1,0,5,0), 
JOYCODE_1_BUTTON5
 },

290 { 
JOYCODE
(1,0,6,0), 
JOYCODE_1_BUTTON6
 },

291 { 
JOYCODE
(2,1,1,1), 
JOYCODE_2_LEFT
 },

292 { 
JOYCODE
(2,1,1,2), 
JOYCODE_2_RIGHT
 },

293 { 
JOYCODE
(2,1,2,1), 
JOYCODE_2_UP
 },

294 { 
JOYCODE
(2,1,2,2), 
JOYCODE_2_DOWN
 },

295 { 
JOYCODE
(2,0,1,0), 
JOYCODE_2_BUTTON1
 },

296 { 
JOYCODE
(2,0,2,0), 
JOYCODE_2_BUTTON2
 },

297 { 
JOYCODE
(2,0,3,0), 
JOYCODE_2_BUTTON3
 },

298 { 
JOYCODE
(2,0,4,0), 
JOYCODE_2_BUTTON4
 },

299 { 
JOYCODE
(2,0,5,0), 
JOYCODE_2_BUTTON5
 },

300 { 
JOYCODE
(2,0,6,0), 
JOYCODE_2_BUTTON6
 },

301 { 
JOYCODE
(3,1,1,1), 
JOYCODE_3_LEFT
 },

302 { 
JOYCODE
(3,1,1,2), 
JOYCODE_3_RIGHT
 },

303 { 
JOYCODE
(3,1,2,1), 
JOYCODE_3_UP
 },

304 { 
JOYCODE
(3,1,2,2), 
JOYCODE_3_DOWN
 },

305 { 
JOYCODE
(3,0,1,0), 
JOYCODE_3_BUTTON1
 },

306 { 
JOYCODE
(3,0,2,0), 
JOYCODE_3_BUTTON2
 },

307 { 
JOYCODE
(3,0,3,0), 
JOYCODE_3_BUTTON3
 },

308 { 
JOYCODE
(3,0,4,0), 
JOYCODE_3_BUTTON4
 },

309 { 
JOYCODE
(3,0,5,0), 
JOYCODE_3_BUTTON5
 },

310 { 
JOYCODE
(3,0,6,0), 
JOYCODE_3_BUTTON6
 },

311 { 
JOYCODE
(4,1,1,1), 
JOYCODE_4_LEFT
 },

312 { 
JOYCODE
(4,1,1,2), 
JOYCODE_4_RIGHT
 },

313 { 
JOYCODE
(4,1,2,1), 
JOYCODE_4_UP
 },

314 { 
JOYCODE
(4,1,2,2), 
JOYCODE_4_DOWN
 },

315 { 
JOYCODE
(4,0,1,0), 
JOYCODE_4_BUTTON1
 },

316 { 
JOYCODE
(4,0,2,0), 
JOYCODE_4_BUTTON2
 },

317 { 
JOYCODE
(4,0,3,0), 
JOYCODE_4_BUTTON3
 },

318 { 
JOYCODE
(4,0,4,0), 
JOYCODE_4_BUTTON4
 },

319 { 
JOYCODE
(4,0,5,0), 
JOYCODE_4_BUTTON5
 },

320 { 
JOYCODE
(4,0,6,0), 
JOYCODE_4_BUTTON6
 },

325 
	$öô_joy_li°
()

327 
tŸ
,
i
,
j
,
k
;

328 
buf
[256];

330 
tŸ
 = 0;

333 
j
 = 0;j < 3;j++)

335 
	`•rötf
(
buf
,"MOUSE B%d",
j
+1);

336 
	`°∫˝y
(
joy«mes
[
tŸ
],
buf
,
MAX_JOY_NAME_LEN
);

337 
joy«mes
[
tŸ
][
MAX_JOY_NAME_LEN
] = 0;

338 
joyli°
[
tŸ
].
«me
 = 
joy«mes
[tot];

339 
joyli°
[
tŸ
].
code
 = 
	`MOUSE_BUTTON
(
j
+1);

340 
tŸ
++;

343 
i
 = 0;ò< 
num_joy°icks
;i++)

345 
j
 = 0;j < 1;j++)

347 
k
 = 0;k < 2;k++)

349 
	`•rötf
(
buf
,"J%d %†%†-",
i
+1,"JoystickAxis","-");

350 
	`°∫˝y
(
joy«mes
[
tŸ
],
buf
,
MAX_JOY_NAME_LEN
);

351 
joy«mes
[
tŸ
][
MAX_JOY_NAME_LEN
] = 0;

352 
joyli°
[
tŸ
].
«me
 = 
joy«mes
[tot];

353 
joyli°
[
tŸ
].
code
 = 
	`JOYCODE
(
i
+1,
j
+1,
k
+1,1);

354 
tŸ
++;

356 
	`•rötf
(
buf
,"J%d %†%†+",
i
+1,"JoystickAxis","+");

357 
	`°∫˝y
(
joy«mes
[
tŸ
],
buf
,
MAX_JOY_NAME_LEN
);

358 
joy«mes
[
tŸ
][
MAX_JOY_NAME_LEN
] = 0;

359 
joyli°
[
tŸ
].
«me
 = 
joy«mes
[tot];

360 
joyli°
[
tŸ
].
code
 = 
	`JOYCODE
(
i
+1,
j
+1,
k
+1,2);

361 
tŸ
++;

364 
j
 = 0;j < 6;j++)

366 
	`•rötf
(
buf
,"J%d %s",
i
+1,"JoystickButton");

367 
	`°∫˝y
(
joy«mes
[
tŸ
],
buf
,
MAX_JOY_NAME_LEN
);

368 
joy«mes
[
tŸ
][
MAX_JOY_NAME_LEN
] = 0;

369 
joyli°
[
tŸ
].
«me
 = 
joy«mes
[tot];

370 
joyli°
[
tŸ
].
code
 = 
	`JOYCODE
(
i
+1,0,
j
+1,0);

371 
tŸ
++;

376 
joyli°
[
tŸ
].
«me
 = 0;

377 
joyli°
[
tŸ
].
code
 = 0;

378 
joyli°
[
tŸ
].
°™d¨dcode
 = 0;

381 
i
 = 0;ò< 
tŸ
;i++)

383 
joyli°
[
i
].
°™d¨dcode
 = 
JOYCODE_OTHER
;

385 
j
 = 0;

386 
joyequiv
[
j
][0] != 0)

388 i‡(
joyequiv
[
j
][0] =
joyli°
[
i
].
code
)

390 
joyli°
[
i
].
°™d¨dcode
 = 
joyequiv
[
j
][1];

393 
j
++;

396 
	}
}

400 c⁄° 
Joy°ickInfo
 *
	$osd_gë_joy_li°
()

402  
joyli°
;

403 
	}
}

405 
	$is_joy_buâ⁄_¥es£d
 (
buâ⁄
, 
ExKey
)

407 
buâ⁄
)

409 0:  
ExKey
 & 
GP2X_B
; ;

410 1:  
ExKey
 & 
GP2X_X
; ;

411 2:  
ExKey
 & 
GP2X_A
; ;

412 3:  
ExKey
 & 
GP2X_Y
; ;

413 4:  
ExKey
 & 
GP2X_L
; ;

414 5:  
ExKey
 & 
GP2X_R
; ;

418 
	}
}

421 
	#JOY_LEFT_PRESSED
(
x
)(
	`is_joy_axis_¥es£d
(0,1, (x==0?
ExKey1
:(x==1?
ExKey2
:(x==2?
ExKey3
:
ExKey4
)))))

	)

422 
	#JOY_RIGHT_PRESSED
(
x
)–
	`is_joy_axis_¥es£d
(0,2, (x==0?
ExKey1
:(x==1?
ExKey2
:(x==2?
ExKey3
:
ExKey4
)))))

	)

423 
	#JOY_UP_PRESSED
(
x
)–
	`is_joy_axis_¥es£d
(1,1, (x==0?
ExKey1
:(x==1?
ExKey2
:(x==2?
ExKey3
:
ExKey4
)))))

	)

424 
	#JOY_DOWN_PRESSED
(
x
)–
	`is_joy_axis_¥es£d
(1,2, (x==0?
ExKey1
:(x==1?
ExKey2
:(x==2?
ExKey3
:
ExKey4
)))))

	)

433 
	#JOY_LEFT_PRESSED2
 
	`is_joy_axis_¥es£d
(0,1,
ExKey1
)

	)

434 
	#JOY_RIGHT_PRESSED2
 
	`is_joy_axis_¥es£d
(0,2,
ExKey1
)

	)

435 
	#JOY_UP_PRESSED2
 
	`is_joy_axis_¥es£d
(1,1,
ExKey1
)

	)

436 
	#JOY_DOWN_PRESSED2
 
	`is_joy_axis_¥es£d
(1,2,
ExKey1
)

	)

438 
	$is_joy_axis_¥es£d
 (
axis
, 
dú
, 
ExKey
)

440 
rŸ©e_c⁄åﬁs
;

441 i‡(!
rŸ©e_c⁄åﬁs
)

444 i‡(
axis
==0)

446 
dú
)

448 1:  
ExKey
 & 
GP2X_LEFT
; ;

449 2:  
ExKey
 & 
GP2X_RIGHT
; ;

455 
dú
)

457 1:  
ExKey
 & 
GP2X_UP
; ;

458 2:  
ExKey
 & 
GP2X_DOWN
; ;

466 i‡(
axis
==0)

468 
dú
)

470 1:  
ExKey
 & 
GP2X_UP
; ;

471 2:  
ExKey
 & 
GP2X_DOWN
; ;

477 
dú
)

479 1:  
ExKey
 & 
GP2X_RIGHT
; ;

480 2:  
ExKey
 & 
GP2X_LEFT
; ;

486 
	}
}

488 
	$osd_is_joy_¥es£d
(
joycode
)

490 
joy_num
,
°ick
;

494 
joycode
)

496 
	`MOUSE_BUTTON
(1):

497  
ExKey1
 & 
GP2X_B
; ;

498 
	`MOUSE_BUTTON
(2):

499  
ExKey1
 & 
GP2X_X
; ;

500 
	`MOUSE_BUTTON
(3):

501  
ExKey1
 & 
GP2X_A
; ;

504 
joy_num
 = 
	`GET_JOYCODE_JOY
(
joycode
);

507 i‡(
joy_num
 =0 || joy_num > 
num_joy°icks
)

509 
joy_num
--;

511 
°ick
 = 
	`GET_JOYCODE_STICK
(
joycode
);

513 i‡(
°ick
 == 0)

516 
buâ⁄
;

518 
buâ⁄
 = 
	`GET_JOYCODE_BUTTON
(
joycode
);

519 i‡(
buâ⁄
 == 0 || button > 6)

521 
buâ⁄
--;

523 
joy_num
)

525 0:  
	`is_joy_buâ⁄_¥es£d
(
buâ⁄
, 
ExKey1
); ;

526 1:  
	`is_joy_buâ⁄_¥es£d
(
buâ⁄
, 
ExKey2
); ;

527 2:  
	`is_joy_buâ⁄_¥es£d
(
buâ⁄
, 
ExKey3
); ;

528 3:  
	`is_joy_buâ⁄_¥es£d
(
buâ⁄
, 
ExKey4
); ;

535 
axis
,
dú
;

537 i‡(
°ick
 > 1)

539 
°ick
--;

541 
axis
 = 
	`GET_JOYCODE_AXIS
(
joycode
);

542 
dú
 = 
	`GET_JOYCODE_DIR
(
joycode
);

544 i‡(
axis
 == 0 ||áxis > 2)

546 
axis
--;

548 
joy_num
)

550 0:  
	`is_joy_axis_¥es£d
(
axis
, 
dú
, 
ExKey1
); ;

551 1:  
	`is_joy_axis_¥es£d
(
axis
, 
dú
, 
ExKey2
); ;

552 2:  
	`is_joy_axis_¥es£d
(
axis
, 
dú
, 
ExKey3
); ;

553 3:  
	`is_joy_axis_¥es£d
(
axis
, 
dú
, 
ExKey4
); ;

559 
	}
}

561 
	$pﬁl_joy°ick
()

563 
num_of_joys
;

565 
num_of_joys
)

567 4: 
ExKey4
=
	`gp2x_joy°ick_ªad
(3);

568 3: 
ExKey3
=
	`gp2x_joy°ick_ªad
(2);

569 2: 
ExKey2
=
	`gp2x_joy°ick_ªad
(1);

570 1: 
ExKey1
=
	`gp2x_joy°ick_ªad
(0); ;

572 
ExKey1
=
	`gp2x_joy°ick_ªad
(0);

573 
ExKey2
=
ExKey1
;

574 if(
ExKey2
&
GP2X_START
) ExKey2^=GP2X_START;

575 if(
ExKey2
&
GP2X_SELECT
) ExKey2^=GP2X_SELECT;

576 
ExKey3
=
ExKey2
;

577 
ExKey4
=
ExKey2
;

580 
	}
}

582 
	$osd_pﬁl_joy°icks
()

586 
	`upd©ekeybﬂrd
();

588 i‡(
joy°ick
 > 
JOY_TYPE_NONE
)

589 
	`pﬁl_joy°ick
();

590 
	}
}

592 
	gpos_™Æog_x
[4];

593 
	gpos_™Æog_y
[4];

596 
	$osd_™Æogjoy_ªad
(
∂ayî
,*
™Æog_x
, *
™Æog_y
)

598 *
™Æog_x
 = *
™Æog_y
 = 0;

599 
joy_™Æog_x_128
 = 
joy_™Æog_x
[
∂ayî
] * 128.0;

600 
joy_™Æog_y_128
 = 
joy_™Æog_y
[
∂ayî
] * -128.0 ;

603 i‡(
∂ayî
+1 > 
num_joy°icks
 || 
joy°ick
 =
JOY_TYPE_NONE
)

606 if–(!(
	`JOY_LEFT_PRESSED
(
∂ayî
))Ë&& (!(
	`JOY_RIGHT_PRESSED
(player))) ) {

607 
pos_™Æog_x
[
∂ayî
]=0;

609 if(
	`JOY_LEFT_PRESSED
(
∂ayî
))

611 if(
joy_™Æog_x
[
∂ayî
]!=0){ 
pos_™Æog_x
[∂ayî]=
joy_™Æog_x_128
; 
™Æog_ªad
[player]=1;}

612 {
pos_™Æog_x
[
∂ayî
]-=5;
™Æog_ªad
[player]=0;}

614 if(
	`JOY_RIGHT_PRESSED
(
∂ayî
))

616 if(
joy_™Æog_x
[
∂ayî
]!=0Ë{
pos_™Æog_x
[∂ayî]=
joy_™Æog_x_128
; 
™Æog_ªad
[player]=1;}

617 {
pos_™Æog_x
[
∂ayî
]+=5;
™Æog_ªad
[player]=0;}

620 if–(!(
	`JOY_UP_PRESSED
(
∂ayî
))Ë&& (!(
	`JOY_DOWN_PRESSED
(player))) ) {

621 
pos_™Æog_y
[
∂ayî
]=0;

623 if(
	`JOY_UP_PRESSED
(
∂ayî
))

625 if(
joy_™Æog_y
[
∂ayî
]!=0Ë{
pos_™Æog_y
[∂ayî]=
joy_™Æog_y_128
;
™Æog_ªad
[player]=1;} 

626 {
pos_™Æog_y
[
∂ayî
]-=5;
™Æog_ªad
[player]=0;}

628 if(
	`JOY_DOWN_PRESSED
(
∂ayî
))

630 if(
joy_™Æog_y
[
∂ayî
]!=0){ 
pos_™Æog_y
[∂ayî]=
joy_™Æog_y_128
;
™Æog_ªad
[player]=1;} 

631 {
pos_™Æog_y
[
∂ayî
]+=5;
™Æog_ªad
[player]=0;}

635 i‡(
pos_™Æog_x
[
∂ayî
]<-128)Öos_analog_x[player]=-128;

636 i‡(
pos_™Æog_x
[
∂ayî
]>128)Öos_analog_x[player]=128;

637 i‡(
pos_™Æog_y
[
∂ayî
]<-128)Öos_analog_y[player]=-128;

638 i‡(
pos_™Æog_y
[
∂ayî
]>128)Öos_analog_y[player]=128;

642 *
™Æog_x
 = 
pos_™Æog_x
[
∂ayî
];

643 *
™Æog_y
 = 
pos_™Æog_y
[
∂ayî
];

646 
	}
}

649 
	$osd_joy°ick_√eds_ˇlibøti⁄
 ()

652 
	}
}

655 
	$osd_joy°ick_°¨t_ˇlibøti⁄
 ()

657 
	}
}

659 *
	$osd_joy°ick_ˇlibøã_√xt
 ()

662 
	}
}

664 
	$osd_joy°ick_ˇlibøã
 ()

666 
	}
}

668 
	$osd_joy°ick_íd_ˇlibøti⁄
 ()

670 
	}
}

672 
	$osd_åak_ªad
(
∂ayî
,*
dñèx
,*
dñèy
)

674 i‡(
∂ayî
 !0 || 
u£_mou£
 == 0 )

675 *
dñèx
 = *
dñèy
 = 0;

678 *
dñèx
 = *
dñèy
 = 0;

679 
x_vÆue
 = 
joy_™Æog_x
[
∂ayî
] * 30;

680 
y_vÆue
 = 
joy_™Æog_y
[
∂ayî
] * -30;

682 if(
	`JOY_LEFT_PRESSED
(
∂ayî
))

684 if(
x_vÆue
!=0){

685 *
dñèx
=
x_vÆue
;

686 
™Æog_ªad
[
∂ayî
]=1;

688 *
dñèx
=-5;

689 
™Æog_ªad
[
∂ayî
]=0;

692 if(
	`JOY_RIGHT_PRESSED
(
∂ayî
))

694 if(
x_vÆue
!=0){

695 *
dñèx
=
x_vÆue
;

696 
™Æog_ªad
[
∂ayî
]=1;

698 *
dñèx
=5;

699 
™Æog_ªad
[
∂ayî
]=0;

702 if(
	`JOY_UP_PRESSED
(
∂ayî
))

704 if(
y_vÆue
!=0){

705 *
dñèy
=
y_vÆue
;

706 
™Æog_ªad
[
∂ayî
]=1;

708 *
dñèy
=5;

709 
™Æog_ªad
[
∂ayî
]=0;

712 if(
	`JOY_DOWN_PRESSED
(
∂ayî
))

714 if(
y_vÆue
!=0){

715 *
dñèy
=
y_vÆue
;

716 
™Æog_ªad
[
∂ayî
]=1;

718 *
dñèy
=-5;

719 
™Æog_ªad
[
∂ayî
]=0;

724 
	}
}

727 #i‚de‡
MESS


728 #i‚de‡
TINY_COMPILE


729 
no_of_tûes
;

730 
GameDrivî
 
drivî_√ogeo
;

734 
	$osd_cu°omize_öpuç‹t_deÁu…s
(
ùd
 *
deÁu…s
)

736 
	}
}

740 
	$osd_Àd_w
(
Àd
,
⁄
) {

741 
	}
}

745 
	$msdos_öô_öput
 ()

747 
i
;

750 
i
 = 0;ò< 
KEY_MAX
;i++)

752 
key
[
i
]=0;

755 i‡(
joy°ick
 =
JOY_TYPE_NONE
)

756 
	`logîr‹
("JoystickÇot found\n");

758 
	`logîr‹
("Installed %s %s\n","Joystick", "GP2X");

760 
	`öô_joy_li°
();

762 i‡(
u£_mou£
)

763 
u£_mou£
 = 1;

765 
u£_mou£
 = 0;

766 
	}
}

769 
	$msdos_shutdown_öput
()

771 
	}
}

	@minimal.c

18 
	~"möimÆ.h
"

19 
	~"wiimŸe.h
"

20 
	~"drivî.h
"

22 
	~<uni°d.h
>

23 
	~<f˙é.h
>

25 
	~<™droid/log.h
>

27 
	~<±hªad.h
>

30 
	gglobÆ_Âs
 = 1;

31 
	gglobÆ_showöfo
 = 1;

32 
	gglobÆ_idÀ_waô
 = 0;

34 
	gemuœãd_width
;

35 
	gemuœãd_height
;

36 
	gß„_ªndî_∑th
 = 1;

38 
	gm4Æl_HiS≥cs
 = 1;

40 
	gm4Æl_hide_LR
 = 0;

41 
	gm4Æl_B∂usX
 = 0;

42 
	gm4Æl_œndsˇ≥_buâ⁄s
 = 2;

43 
m4Æl_öGame
;

44 
m4Æl_exôGame
;

45 
m4Æl_exôPau£
;

46 
m4Æl_waysStick
;

47 
m4Æl_ASMC‹es
;

49 
joy_™Æog_x
[4];

50 
joy_™Æog_y
[4];

52 
	giOS_fixedRes
 = 0;

54 
≠p_MuãSound
();

55 
≠p_DemuãSound
();

57 
	gdroid_video_width
 = 320;

58 
	gdroid_video_height
 = 240;

60 
soundˇrd
;

62 
	gsoundInô
 = 0;

63 
timevÆ
 
	g±v
;

64 
	g__audioVﬁume
 = 1.0;

67 
	ggp2x_dev
[3];

68 
	ggp2x_ticks_≥r_£c⁄d
;

69 *
	ggp2x_s¸ìn8
;

70 *
	ggp2x_s¸ìn15
;

71 *
	ggp2x_logvøm15
[2];

72 
	ggp2x_physvøm
[2];

73 
	ggp2x_nÊù
;

74 
	ggp2x_∑Àâe
[512];

75 
	ggp2x_sound_øã
=44100;

76 
	ggp2x_sound_°îeo
=0;

77 
	ggp2x_∑l_50hz
=0;

78 
	ggp2x_øm_twóks
=0;

79 
	grŸ©e_c⁄åﬁs
=0;

81 *
	ggp2x_duÆc‹e_øm
;

82 
	ggp2x_duÆc‹e_øm_size
;

84 
	ggp2x_∑d_°©us
 = 0;

85 
	ggp2x_joy_°©us
[4];

90 
	gs¸ìnbuf„r
[640 * 480];

91 
	gglobÆ∑th
[247]="/sdcard/ROMs/MAME4all/";

97 (*
dumpVideo_ˇŒback
)(
emuœtög
);

98 (*
öôVideo_ˇŒback
)(*
buf„r
);

99 (*
ch™geVideo_ˇŒback
)(
√wWidth
,
√wHeight
);

101 (*
›íSound_ˇŒback
)(
øã
,
°îeo
);

102 (*
dumpSound_ˇŒback
)(*
buf„r
,
size
);

103 (*
˛o£Sound_ˇŒback
)();

106 
	$£tVideoCÆlbacks
(*
öô_video_java
,*
dump_video_java
, *
ch™ge_video_java
)

108 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4all.so", "setVideoCallbacks");

110 
öôVideo_ˇŒback
 = 
öô_video_java
;

111 
dumpVideo_ˇŒback
 = 
dump_video_java
;

112 
ch™geVideo_ˇŒback
 = 
ch™ge_video_java
;

113 
	}
}

115 
	$£tAudioCÆlbacks
(*
›í_sound_java
, *
dump_sound_java
, *
˛o£_sound_java
)

117 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4all.so", "setAudioCallbacks");

119 
›íSound_ˇŒback
 = 
›í_sound_java
;

120 
dumpSound_ˇŒback
 = 
dump_sound_java
;

121 
˛o£Sound_ˇŒback
 = 
˛o£_sound_java
;

122 
	}
}

125 
	$£tGlobÆP©h
(c⁄° *
∑th
){

126 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4Æl.so", "£tGlobÆP©h %s",
∑th
);

127 
	`°r˝y
(
globÆ∑th
,
∑th
);

128 
	}
}

130 
	$£tPadSètus
(
i
, 
∑d_°©us
)

132 if(
i
==0 && 
num_of_joys
==0)

133 
gp2x_∑d_°©us
 = 
∑d_°©us
;

135 
gp2x_joy_°©us
[
i
]=
∑d_°©us
;

137 if(
i
==1 && 
∑d_°©us
 && 
GP2X_SELECT
 && 
num_of_joys
<2)

138 
num_of_joys
 = 2;

139 if(
i
==2 && 
∑d_°©us
 && 
GP2X_SELECT
 && 
num_of_joys
<3)

140 
num_of_joys
 = 3;

141 if(
i
==2 && 
∑d_°©us
 && 
GP2X_SELECT
 && 
num_of_joys
<4)

142 
num_of_joys
 = 4;

145 
	}
}

147 
	$isEmuœtög
()

149 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "libMAME4Æl.so", "isEmuœtög %d",
m4Æl_öGame
);

150  
m4Æl_öGame
;

151 
	}
}

153 
	$£tMyVÆue
(
key
,
vÆue
){

159 
key
)

162 
globÆ_Âs
 = 
vÆue
;;

164 
m4Æl_exôGame
 = 
vÆue
;;

166 
m4Æl_ASMC‹es
 = 
vÆue
;;

168 
globÆ_showöfo
 = 
vÆue
;;

170 
m4Æl_exôPau£
 = 
vÆue
;;

172 
globÆ_idÀ_waô
 = 
vÆue
;;

174 
m4Æl_HiS≥cs
 = 
vÆue
;

176 
	}
}

178 
	$gëMyVÆue
(
key
){

181 
key
)

184  
globÆ_Âs
;

186  
m4Æl_exôGame
;

188  
m4Æl_œndsˇ≥_buâ⁄s
;

190  
m4Æl_hide_LR
;

192  
m4Æl_B∂usX
;

194  
m4Æl_waysStick
;

196  
m4Æl_ASMC‹es
;

198  
globÆ_showöfo
;

200  
m4Æl_HiS≥cs
;

205 
	}
}

207 
	$£tMyA«logD©a
(
i
, 
v1
, 
v2
){

208 
joy_™Æog_x
[
i
]=
v1
;

209 
joy_™Æog_y
[
i
]=
v2
;

210 
	}
}

212 
	$dump_video
()

214 
	`dumpVideo_ˇŒback
(
m4Æl_öGame
);

215 
	}
}

219 
	$gp2x_video_Êù
()

221 
	`dump_video
();

222 
	}
}

224 
	$gp2x_video_Êù_sögÀ
()

226 
	`dump_video
();

227 
	}
}

230 
	$gp2x_video_£çÆëã
()

232 
	}
}

238 
	$gp2x_joy°ick_ªad
(
n
)

240 
ªs
=0;

241 
ªs
 = 
gp2x_∑d_°©us
;

244 i‡((
ªs
 & 
GP2X_VOL_UP
Ë&& (ª†& 
GP2X_VOL_DOWN
))

245 
ªs
 |
GP2X_PUSH
;

247 i‡(
num_of_joys
>
n
)

252 
ªs
 |
gp2x_joy_°©us
[
n
];

255  
ªs
;

256 
	}
}

258 
	$gp2x_joy°ick_¥ess
 (
n
)

260 
ExKey
=0;

265 
	`gp2x_joy°ick_ªad
(
n
)==0Ë{ 
	`gp2x_timî_dñay
(150); }

272  
ExKey
;

273 
	}
}

275 
	$gp2x_sound_vﬁume
(
l
, 
r
)

278 
	}
}

281 
	$gp2x_timî_dñay
(
ticks
)

286 
	`u¶ìp
(
ticks
*1000UL);

287 
	}
}

290 
	$gp2x_timî_ªad
()

292 
timevÆ
 
cuºít_time
;

293 
	`gëtimeofday
(&
cuºít_time
, 
NULL
);

295  (()
cuºít_time
.
tv_£c
 * 1000LL + (cuºít_time.
tv_u£c
 / 1000LL));

296 
	}
}

298 
	$gp2x_timî_ªad_ªÆ
()

300 
timevÆ
 
cuºít_time
;

301 
	`gëtimeofday
(&
cuºít_time
, 
NULL
);

303  ((()
cuºít_time
.
tv_£c
 * 1000000LL + cuºít_time.
tv_u£c
));

304 
	}
}

306 
	$gp2x_timî_ªad_sˇÀ
()

308  
gp2x_ticks_≥r_£c⁄d
;

309 
	}
}

311 
	$gp2x_timî_¥ofûe
()

313 
	}
}

317 #i‡
deföed
(
__˝lu•lus
)

320 
f˛o£Æl
();

321 #i‡
deföed
(
__˝lu•lus
)

327 
	$gp2x_£t_˛ock
(
mhz
)

329 
	}
}

331 
	$gp2x_£t_video_mode
(
bµ
,
width
,
height
)

336 
droid_video_width
 = 
width
;

337 
droid_video_height
 = 
height
;

339 
	`ch™geVideo_ˇŒback
(
width
, 
height
);

343 
	`mem£t
(
gp2x_s¸ìn15
, 0, 
droid_video_width
*
droid_video_height
*2);

345 
	`gp2x_video_Êù
();

347 
	`gp2x_video_Êù_sögÀ
();

349 
gp2x_∑l_50hz
=0;

350 
	}
}

352 
	$£t_øm_twóks
()

354 
	}
}

356 
	gf⁄td©a8x8
[] =

424 
	$gp2x_ãxt
(*
s¸ìn
, 
x
, 
y
, *
ãxt
, 
cﬁ‹
)

426 
i
,
l
;

427 
s¸ìn
=s¸ìn+
x
+
y
*320;

429 
i
=0;i<
	`°æí
(
ãxt
);i++) {

431 
l
=0;l<8;l++) {

432 
s¸ìn
[
l
*320+0]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x80)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+0];

433 
s¸ìn
[
l
*320+1]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x40)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+1];

434 
s¸ìn
[
l
*320+2]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x20)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+2];

435 
s¸ìn
[
l
*320+3]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x10)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+3];

436 
s¸ìn
[
l
*320+4]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x08)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+4];

437 
s¸ìn
[
l
*320+5]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x04)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+5];

438 
s¸ìn
[
l
*320+6]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x02)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+6];

439 
s¸ìn
[
l
*320+7]=(
f⁄td©a8x8
[((
ãxt
[
i
])*8)+l]&0x01)?
gp2x_∑Àâe
[
cﬁ‹
]:screen[l*320+7];

441 
s¸ìn
+=8;

443 
	}
}

445 
	$gp2x_gamñi°_ãxt_out
(
x
, 
y
, *
ñãxto
)

447 
ãxto
[33];

448 
	`°∫˝y
(
ãxto
,
ñãxto
,32);

449 
ãxto
[32]=0;

450 i‡(
ãxto
[0]!='-')

451 
	`gp2x_ãxt
(
gp2x_s¸ìn15
,
x
+1,
y
+1,
ãxto
,0);

452 
	`gp2x_ãxt
(
gp2x_s¸ìn15
,
x
,
y
,
ãxto
,255);

453 
	}
}

456 
	$gp2x_gamñi°_ãxt_out_fmt
(
x
, 
y
, * 
fmt
, ...)

458 
°rOut
[128];

459 
va_li°
 
m¨kî
;

461 
	`va_°¨t
(
m¨kî
, 
fmt
);

462 
	`v•rötf
(
°rOut
, 
fmt
, 
m¨kî
);

463 
	`va_íd
(
m¨kî
);

465 
	`gp2x_gamñi°_ãxt_out
(
x
, 
y
, 
°rOut
);

466 
	}
}

468 
	gpÊog
=0;

470 
	$gp2x_¥ötf_öô
()

472 
pÊog
=0;

473 
	}
}

475 
	$gp2x_ãxt_log
(*
ãxto
)

477 i‡(!
pÊog
)

479 
	`mem£t
(
gp2x_s¸ìn15
,0,320*240*2);

481 
	`gp2x_ãxt
(
gp2x_s¸ìn15
,0,
pÊog
,
ãxto
,255);

482 
pÊog
+=8;

483 if(
pÊog
>239)Öflog=0;

484 
	}
}

487 
	$gp2x_¥ötf
(* 
fmt
, ...)

489 
i
,
c
;

490 
°rOut
[4096];

491 
°r
[41];

492 
va_li°
 
m¨kî
;

494 
	`va_°¨t
(
m¨kî
, 
fmt
);

495 
	`v•rötf
(
°rOut
, 
fmt
, 
m¨kî
);

496 
	`va_íd
(
m¨kî
);

498 
	`Ârötf
(
°dîr
, "%s\n", 
°rOut
);

500 
c
=0;

501 
i
=0;i<
	`°æí
(
°rOut
);i++)

503 
°r
[
c
]=
°rOut
[
i
];

504 i‡(
°r
[
c
]=='\n')

506 
°r
[
c
]=0;

507 
	`gp2x_ãxt_log
(
°r
);

508 
c
=0;

510 i‡(
c
==39)

512 
°r
[40]=0;

513 
	`gp2x_ãxt_log
(
°r
);

514 
c
=0;

518 
c
++;

521 
	}
}

524 
	$gp2x_sound_thªad_muã
()

526 
	}
}

528 
	$gp2x_sound_thªad_°¨t
(
Àn
)

531 
	`gp2x_sound_thªad_muã
();

532 
	}
}

534 
	$gp2x_sound_thªad_°›
()

536 
	}
}

538 
	$gp2x_sound_£t_øã
(
øã
)

540 
	}
}

542 
	$gp2x_sound_£t_°îeo
(
°îeo
)

544 
	}
}

546 
	$gp2x_video_waô_vsync
()

548 
	}
}

550 
	$£t_ßve_°©e
()

552 
	}
}

557 
	glib_öôed
 = 0;

559 
±hªad_muãx_t
 
	gmut
;

561 * 
thªaded_sound_∂ay
(* 
¨gs
);

563 
	$gp2x_öô
(
ticks_≥r_£c⁄d
, 
bµ
, 
øã
, 
bôs
, 
°îeo
, 
Hz
)

565 
±hªad_t
 
maö_tid
;

567 i‡(!
lib_öôed
 )

570 
gp2x_ticks_≥r_£c⁄d
=1000;

575 
gp2x_s¸ìn15
=
s¸ìnbuf„r
;

576 
gp2x_s¸ìn8
=(*)
s¸ìnbuf„r
;

577 
	`öôVideo_ˇŒback
((*)&
s¸ìnbuf„r
);

579 
gp2x_nÊù
=0;

581 
	`gp2x_£t_video_mode
(
bµ
,320,240);

583 
	`gp2x_video_cﬁ‹8
(0,0,0,0);

584 
	`gp2x_video_cﬁ‹8
(255,255,255,255);

585 
	`gp2x_video_£çÆëã
();

593 
	`±hªad_muãx_öô
 (&
mut
,
NULL
);

594 
lib_öôed
 = 1;

596 
	}
}

598 
	$gp2x_deöô
()

600 i‡(
lib_öôed
 )

604 
	`±hªad_muãx_de°roy
(&
mut
);

605 
lib_öôed
 = 0;

607 
	}
}

614 
	#TAM
 (1470 * 2 * 2 * 3)

	)

615 
	g±r_buf
[
TAM
];

616 
	ghód
 = 0;

617 
	gèû
 = 0;

619 
ölöe
 
	$fuŒQueue
(
size
){

621 if(
hód
 < 
èû
)

623  
hód
 + 
size
 >
èû
;

625 if(
hód
 > 
èû
)

627  (
hód
 + 
size
Ë>
TAM
 ? (hód + size)- TAM >
èû
 : 0;

630 
	}
}

632 
ölöe
 
	$em±yQueue
(){

633  
hód
 =
èû
;

634 
	}
}

636 
	$queue
(*
p
,
size
){

637 
√whód
;

638 if(
hód
 + 
size
 < 
TAM
)

640 
	`mem˝y
(
±r_buf
+
hód
,
p
,
size
);

641 
√whód
 = 
hód
 + 
size
;

645 
	`mem˝y
(
±r_buf
+
hód
,
p
, 
TAM
 -head);

646 
	`mem˝y
(
±r_buf
,
p
 + (
TAM
-
hód
), 
size
 - (TAM-head));

647 
√whód
 = (
hód
 + 
size
Ë- 
TAM
;

649 
	`±hªad_muãx_lock
(&
mut
);

651 
hód
 = 
√whód
;

653 
	`±hªad_muãx_u∆ock
(&
mut
);

654 
	}
}

656 
	$dequeue
(*
p
,
size
){

658 
ªÆ
;

660 if(
	`em±yQueue
())

662 
	`mem£t
(
p
,0,
size
);

663  
size
;

666 
	`±hªad_muãx_lock
(&
mut
);

668 
d©asize
 = 
hód
 > 
èû
 ? hód -Åaû : (
TAM
 -Åail) + head ;

669 
ªÆ
 = 
d©asize
 > 
size
 ? size : datasize;

671 if(
èû
 + 
ªÆ
 < 
TAM
)

673 
	`mem˝y
(
p
,
±r_buf
+
èû
,
ªÆ
);

674 
èû
+=
ªÆ
;

678 
	`mem˝y
(
p
,
±r_buf
 + 
èû
, 
TAM
 -Åail);

679 
	`mem˝y
(
p
+ (
TAM
-
èû
),
±r_buf
 , 
ªÆ
 - (TAM-tail));

680 
èû
 = (èû + 
ªÆ
Ë- 
TAM
;

683 
	`±hªad_muãx_u∆ock
(&
mut
);

685  
ªÆ
;

686 
	}
}

688 
	$≠p_MuãSound
() {

689 if–
soundInô
 == 1 )

692 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "MAME4all.so", "closeSound");

693 
	`˛o£Sound_ˇŒback
();

695 
	}
}

697 
	$≠p_DemuãSound
() {

698 if–
soundInô
 =0 && 
soundˇrd
!=0)

701 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "MAME4Æl.so", "›íSoundÑ©e:%d sãªo:%d",
gp2x_sound_øã
,
gp2x_sound_°îeo
);

703 
	`›íSound_ˇŒback
(
gp2x_sound_øã
,
gp2x_sound_°îeo
);

705 
	}
}

707 
	$gp2x_sound_∂ay
(*
buff
, 
Àn
)

710 
	`dumpSound_ˇŒback
(
buff
,
Àn
);

711 
	}
}

713 * 
	$thªaded_sound_∂ay
(* 
¨gs
)

715 
buf
[
TAM
];

720 if(!
	`em±yQueue
())

722 
Àn
 = 
	`dequeue
(&
buf
[0],
TAM
);

723 
	`__™droid_log_¥öt
(
ANDROID_LOG_DEBUG
, "MAME4Æl.so", "dequeue:%d ",
Àn
);

728 
	}
}

	@minimal.h

17 
	~<f˙é.h
>

18 
	~<±hªad.h
>

19 
	~<°dlib.h
>

20 
	~<°dio.h
>

21 
	~<°rög.h
>

22 
	~<sys/time.h
>

23 
	~<uni°d.h
>

24 
	~<°d¨g.h
>

26 #i‚de‡
__MINIMAL_H__


27 
	#__MINIMAL_H__


	)

29 #i‡
deföed
(
__˝lu•lus
)

33 
	#gp2x_video_cﬁ‹8
(
C
,
R
,
G
,
B
Ë
gp2x_∑Àâe
[C]=
	`gp2x_video_cﬁ‹15
(R,G,B,0)

	)

38 
	#gp2x_video_cﬁ‹15
(
R
,
G
,
B
,
A
Ë((R >> 3Ë<< 11Ë| (–G >> 2Ë<< 5 ) | (–B >> 3 ) << 0 )

	)

40 
	#RGB2565L
(
R
, 
G
, 
B
Ë((R >> 3Ë<< 11Ë| (–G >> 2Ë<< 5 ) | (–B >> 3 ) << 0 )

	)

41 
	#RGBA5551
(
R
, 
G
, 
B
Ë((R >> 3Ë<< 10Ë| (–G >> 3Ë<< 5 ) | (–B >> 3 ) << 0 )

	)

48 
	#gp2x_video_gër15
(
C
Ë((((C)>>10)<<3)&0x00FF)

	)

49 
	#gp2x_video_gëg15
(
C
Ë((((C)>>05)<<3)&0x00FF)

	)

50 
	#gp2x_video_gëb15
(
C
Ë((((C)>>00)<<3)&0x00FF)

	)

52 íum { 
GP2X_UP
=0x1, 
GP2X_LEFT
=0x4, 
GP2X_DOWN
=0x10, 
GP2X_RIGHT
=0x40,

53 
GP2X_START
=1<<8, 
GP2X_SELECT
=1<<9, 
GP2X_L
=1<<10, 
GP2X_R
=1<<11,

54 
GP2X_A
=1<<12, 
GP2X_B
=1<<13, 
GP2X_X
=1<<14, 
GP2X_Y
=1<<15,

55 
GP2X_VOL_UP
=1<<23, 
GP2X_VOL_DOWN
=1<<22, 
GP2X_PUSH
=1<<27, 
GP2X_ESC
=1<<28 };

57 
__emuœti⁄_run
;

58 
gp2x_∑Àâe
[512];

59 *
gp2x_s¸ìn8
;

60 *
gp2x_s¸ìn15
;

61 
gp2x_sound_øã
;

62 
gp2x_sound_°îeo
;

63 
gp2x_∑l_50hz
;

64 
gp2x_˛ock
;

66 
gp2x_öô
(
tick•î£c⁄d
, 
bµ
, 
øã
, 
bôs
, 
°îeo
, 
hz
);

67 
gp2x_deöô
();

68 
gp2x_timî_dñay
(
ticks
);

69 
gp2x_sound_∂ay
(*
buff
, 
Àn
);

70 
gp2x_video_Êù
();

71 
gp2x_video_Êù_sögÀ
();

72 
gp2x_video_£çÆëã
();

73 
gp2x_joy°ick_ªad
(
n
);

74 
gp2x_joy°ick_¥ess
 (
n
);

75 
gp2x_sound_vﬁume
(
À·
, 
right
);

76 
gp2x_sound_thªad_muã
();

77 
gp2x_sound_thªad_°¨t
(
Àn
);

78 
gp2x_sound_thªad_°›
();

79 
gp2x_sound_£t_øã
(
øã
);

80 
gp2x_sound_£t_°îeo
(
°îeo
);

81 
gp2x_timî_ªad
();

84 
gp2x_timî_¥ofûe
();

86 
gp2x_£t_video_mode
(
bµ
,
width
,
height
);

87 
gp2x_£t_˛ock
(
mhz
);

89 
£t_øm_twóks
();

92 
gp2x_gamñi°_ãxt_out
(
x
, 
y
, *
ñãxto
);

93 
gp2x_gamñi°_ãxt_out_fmt
(
x
, 
y
, * 
fmt
, ...);

94 
gp2x_video_waô_vsync
();

96 
gp2x_¥ötf
(* 
fmt
, ...);

97 
gp2x_¥ötf_öô
();

99 
≠p_MuãSound
();

100 
≠p_DemuãSound
();

102 #i‡
deföed
(
__˝lu•lus
)

	@osd_cpu.h

25 #i‚de‡
OSD_CPU_H


26 
	#OSD_CPU_H


	)

28 
	tUINT8
;

29 
	tUINT16
;

30 
	tUINT32
;

31 
__exãnsi⁄__
 
	tUINT64
;

32 sig√d 
	tINT8
;

33 sig√d 
	tINT16
;

34 sig√d 
	tINT32
;

35 
__exãnsi⁄__
 sig√d 
	tINT64
;

38 
	#COMBINE_64_32_32
(
A
,
B
Ë((((
UINT64
)(A))<<32Ë| (
UINT32
)(B))

	)

39 
	#COMBINE_U64_U32_U32
(
A
,
B
Ë
	`COMBINE_64_32_32
(A,B)

	)

42 
	#HI32_32_64
(
A
Ë(((
UINT64
)(A)Ë>> 32)

	)

43 
	#HI32_U32_U64
(
A
Ë
	`HI32_32_64
(A)

	)

46 
	#LO32_32_64
(
A
Ë((AË& 0xffffffff)

	)

47 
	#LO32_U32_U64
(
A
Ë
	`LO32_32_64
(A)

	)

49 
	#DIV_64_64_32
(
A
,
B
Ë((A)/(B))

	)

50 
	#DIV_U64_U64_U32
(
A
,
B
Ë((A)/(
UINT32
)(B))

	)

52 
	#MOD_32_64_32
(
A
,
B
Ë((A)%(B))

	)

53 
	#MOD_U32_U64_U32
(
A
,
B
Ë((A)%(
UINT32
)(B))

	)

55 
	#MUL_64_32_32
(
A
,
B
Ë((A)*(
INT64
)(B))

	)

56 
	#MUL_U64_U32_U32
(
A
,
B
Ë((A)*(
UINT64
)(
UINT32
)(B))

	)

67 #ifde‡
LSB_FIRST


68 °ru˘ { 
UINT8
 
	ml
,
	mh
,
	mh2
,
	mh3
; } 
	mb
;

69 °ru˘ { 
UINT16
 
	ml
,
	mh
; } 
	mw
;

71 °ru˘ { 
UINT8
 
	mh3
,
	mh2
,
	mh
,
	ml
; } 
	mb
;

72 °ru˘ { 
UINT16
 
	mh
,
	ml
; } 
	mw
;

74 
UINT32
 
	md
;

75 } 
	tPAIR
;

	@osinline.h

2 #i‚de‡
__OSINLINE__


3 
	#__OSINLINE__


	)

7 
	#DIRTY_H
 256

	)

8 
	#DIRTY_V
 1600/16

	)

10 *
dúty_√w
;

11 
	#osd_m¨k_ve˘‹_dúty
(
x
,
y
Ë
dúty_√w
[(y)/16 * 
DIRTY_H
 + (x)/16] = 1

	)

13 
	#vec_mu…
 
_vec_mu…


	)

14 
INLINE
 
	$_vec_mu…
(
x
, 
y
)

16 
ªs_hi
, 
ªs_lo
;

18 
__asm__
 
__vﬁ©ûe__


20 : "Ù"(
ªs_hi
), "Ù"(
ªs_lo
)

21 : "r"(
x
), "r"(
y
)

24  
ªs_hi
;

25 
	}
}

27 
	~"möimÆ.h
"

28 
	#osd_cy˛es
 
gp2x_timî_ªad


	)

31 
	#mix_ßm∂e
 
_mix_ßm∂e


	)

32 
	#_mix_ßm∂e
(
d°
,
§c
Ë\

	)

33 
__asm__
 
	g__vﬁ©ûe__
 \

36 : "Ù" (
d°
) \

37 : "r" (
§c
),"r" (
	gd°
) \

44 
	#˛ù_sh‹t
 
_˛ù_sh‹t


	)

45 
	#_˛ù_sh‹t
(
x
Ë{ 
sign
 = x >> 31; i‡(sig¿!(x >> 15)Ëx = sig¿^ ((1 << 15Ë- 1); }

	)

47 
	#˛ù_sh‹t_ªt
 
_˛ù_sh‹t_ªt


	)

48 
INLINE
 
	$_˛ù_sh‹t_ªt
(
x
Ë{ 
	`_˛ù_sh‹t
(x);  x; 
	}
}

	@port_wrapper.h

1 #i‚de‡
GP2X_WRAPPER


2 
	#GP2X_WRAPPER


	)

13 
	#¥ötf
 
gp2x_¥ötf


	)

16 #i‡
deföed
(
__˝lu•lus
)

20 
gp2x_¥ötf
(* 
fmt
, ...);

22 #i‡
deföed
(
__˝lu•lus
)

	@shared.c

1 
	~"sh¨ed.h
"

2 
	~<°dio.h
>

4 
globÆ∑th
[247];

6 c⁄° * 
	$gë_ªsour˚_∑th
(* 
fûe
)

8 
ªsour˚_∑th
[1024];

10 
	`•rötf
(
ªsour˚_∑th
, "%s%s",
globÆ∑th
, 
fûe
);

12  
ªsour˚_∑th
;

13 
	}
}

15 c⁄° * 
	$gë_documíts_∑th
(* 
fûe
)

17 
documíts_∑th
[1024];

19 
	`•rötf
(
documíts_∑th
, "%s%s",
globÆ∑th
, 
fûe
);

21  
documíts_∑th
;

22 
	}
}

	@shared.h

1 #i‚de‡
__SHARED_H__


2 
	#__SHARED_H__


	)

4 #i‡
deföed
(
__˝lu•lus
)

8 c⁄° * 
gë_ªsour˚_∑th
(* 
fûe
);

9 c⁄° * 
gë_documíts_∑th
(* 
fûe
);

11 #i‡
deföed
(
__˝lu•lus
)

	@sound.cpp

1 
	~"drivî.h
"

2 
	~"möimÆ.h
"

4 
	gsoundˇrd
,
	gu£°îeo
;

5 
	g©ãnu©i⁄
 = 0;

6 
	gma°î_vﬁume
 = 100;

8 
INT16
 *
	g°ªam_ˇche_d©a
;

9 
	g°ªam_ˇche_Àn
;

10 
	g°ªam_ˇche_°îeo
;

11 
	gßm∂es_≥r_‰ame
;

13 
	$msdos_öô_sound
()

16 i‡(
soundˇrd
 == -1)

18 
soundˇrd
=1;

21 i‡(
soundˇrd
 == 0)

24 
Machöe
->
ßm∂e_øã
 = 0;

29 
gp2x_sound_°îeo
=0;

30 i‡(
u£°îeo
)

32 i‡(
Machöe
->
drv
->
sound_©åibuãs
 & 
SOUND_SUPPORTS_STEREO
)

33 
gp2x_sound_°îeo
=1;

36 
°ªam_ˇche_d©a
 = 0;

37 
°ªam_ˇche_Àn
 = 0;

38 
°ªam_ˇche_°îeo
 = 0;

40 
gp2x_sound_øã
=
›ti⁄s
.
ßm∂î©e
;

43 
Machöe
->
ßm∂e_øã
 = 
gp2x_sound_øã
;

45 
	`logîr‹
("£à°îeo: %d\n",
gp2x_sound_°îeo
);

46 
	`logîr‹
("£àßm∂êøã: %d\n",
Machöe
->
ßm∂e_øã
);

48 
	`osd_£t_ma°îvﬁume
(
©ãnu©i⁄
);

50 
	`≠p_MuãSound
();

51 
	`≠p_DemuãSound
();

54 
	}
}

56 
	$msdos_shutdown_sound
()

59 
	}
}

61 
	$osd_°¨t_audio_°ªam
(
°îeo
)

63 i‡(
°îeo
) stereo = 1;

65 
°ªam_ˇche_°îeo
 = 
°îeo
;

66 
gp2x_sound_°îeo
 = 
°îeo
;

69 
ßm∂es_≥r_‰ame
 = 
Machöe
->
ßm∂e_øã
 / Machöe->
drv
->
‰ames_≥r_£c⁄d
;

71 i‡(
Machöe
->
ßm∂e_øã
 == 0)  0;

74 
	`gp2x_sound_thªad_°¨t
(
ßm∂es_≥r_‰ame
 * 2);

76  
ßm∂es_≥r_‰ame
;

77 
	}
}

79 
	$osd_°›_audio_°ªam
()

81 i‡(
Machöe
->
ßm∂e_øã
 != 0)

83 
	`gp2x_sound_thªad_°›
();

85 
	}
}

87 
	$upd©óudio°ªam
()

89 
INT16
 *
d©a
 = 
°ªam_ˇche_d©a
;

90 
°îeo
 = 
°ªam_ˇche_°îeo
;

91 
Àn
 = 
°ªam_ˇche_Àn
;

92 
buÊí
;

94 i‡(
°îeo
)

96 
buÊí
=
Àn
*2*(signed );

100 
buÊí
=
Àn
*(signed );

102 
	`gp2x_sound_∂ay
(
d©a
,
buÊí
);

103 
	}
}

105 
	$osd_upd©e_audio_°ªam
(
INT16
 *
buf„r
)

107 
°ªam_ˇche_d©a
 = 
buf„r
;

108 
°ªam_ˇche_Àn
 = 
ßm∂es_≥r_‰ame
;

110  
ßm∂es_≥r_‰ame
;

111 
	}
}

113 
	$msdos_upd©e_audio
()

115 i‡(
Machöe
->
ßm∂e_øã
 =0 || 
°ªam_ˇche_d©a
 == 0)  0;

116 
	`¥ofûî_m¨k
(
PROFILER_MIXER
);

117 
	`upd©óudio°ªam
();

118 
	`¥ofûî_m¨k
(
PROFILER_END
);

120 
	}
}

123 
	$osd_£t_ma°îvﬁume
(
_©ãnu©i⁄
)

125 
vﬁume
;

128 i‡(
_©ãnu©i⁄
 > 0) _attenuation = 0;

129 i‡(
_©ãnu©i⁄
 < -32) _attenuation = -32;

131 
©ãnu©i⁄
 = 
_©ãnu©i⁄
;

133 
vﬁume
 = 100.0;

134 
_©ãnu©i⁄
++ < 0)

135 
vﬁume
 /= 1.122018454;

137 
ma°î_vﬁume
 = 
vﬁume
;

139 
	`gp2x_sound_vﬁume
(
ma°î_vﬁume
,master_volume);

140 
	}
}

142 
	$osd_gë_ma°îvﬁume
()

144  
©ãnu©i⁄
;

145 
	}
}

147 
	$osd_sound_íabÀ
(
íabÀ_ô
)

149 i‡(
íabÀ_ô
)

150 
	`gp2x_sound_vﬁume
(
ma°î_vﬁume
,master_volume);

152 
	`gp2x_sound_vﬁume
(0,0);

153 
	}
}

155 
	$osd_›l_c⁄åﬁ
(
chù
,
ªg
)

157 
	}
}

159 
	$osd_›l_wrôe
(
chù
,
d©a
)

161 
	}
}

	@video.cpp

1 
	~"drivî.h
"

2 
	~<m©h.h
>

3 
	~"vidhrdw/ve˘‹.h
"

4 
	~"dúty.h
"

5 
	~<time.h
>

6 
	~<uni°d.h
>

7 
	~<™droid/log.h
>

9 
globÆ_Âs
;

10 
globÆ_idÀ_waô
;

11 
isI∑d
;

12 
emuœãd_width
;

13 
emuœãd_height
;

15 
	gm4Æl_exôPau£
 = 0;

16 
	gm4Æl_¸›Video
 = 0;

17 
	gm4Æl_a•e˘R©io
 = 0;

18 
	gm4Æl_fixedRes
 = 0;

21 
dútygrid
 
	ggrid1
;

22 
dútygrid
 
	ggrid2
;

23 *
	gdúty_ﬁd
=
grid1
;

24 *
	gdúty_√w
=
grid2
;

27 
msdos_upd©e_audio
();

31 
blôs¸ìn_dúty1_cﬁ‹8
(
osd_bôm≠
 *
bôm≠
);

32 
blôs¸ìn_dúty1_cﬁ‹16
(
osd_bôm≠
 *
bôm≠
);

33 
blôs¸ìn_dúty1_∑Àâized16
(
osd_bôm≠
 *
bôm≠
);

35 
blôs¸ìn_dúty0_cﬁ‹8
(
osd_bôm≠
 *
bôm≠
);

36 
blôs¸ìn_dúty0_cﬁ‹16
(
osd_bôm≠
 *
bôm≠
);

37 
blôs¸ìn_dúty0_∑Àâized16
(
osd_bôm≠
 *
bôm≠
);

39 
upd©e_s¸ìn_dummy
(
osd_bôm≠
 *
bôm≠
);

40 (*
upd©e_s¸ìn
)(
osd_bôm≠
 *
bôm≠
Ë
upd©e_s¸ìn_dummy
;

42 
video_dïth
,
video_Âs
;

43 
modifübÀ_∑Àâe
;

44 
s¸ìn_cﬁ‹s
;

45 *
cuºít_∑Àâe
;

46 *
dútycﬁ‹
;

47 
dúty∑Àâe
;

48 
dúty_bright
;

49 
bright_lookup
[256];

50 
UINT32
 *
∑Àâe_16bô_lookup
;

52 
‰ameskù
,
auto‰ameskù
;

53 
	#FRAMESKIP_LEVELS
 12

	)

55 
video_sync
;

56 
waô_vsync
;

57 
vsync_‰ame_øã
;

58 
skùlöes
;

59 
skùcﬁumns
;

60 
u£_dúty
;

61 
osd_gamma_c‹ª˘i⁄
 = 1.0;

62 
brighäess
;

63 
brighäess_∑u£d_adju°
;

64 
gfx_width
;

65 
gfx_height
;

67 
viswidth
;

68 
visheight
;

69 
skùlöesmax
;

70 
skùcﬁumnsmax
;

71 
skùlöesmö
;

72 
skùcﬁumnsmö
;

74 
ve˘‹_game
;

76 
gfx_xoff£t
;

77 
gfx_yoff£t
;

78 
gfx_di•œy_löes
;

79 
gfx_di•œy_cﬁumns
;

80 
xmu…ùly
,
ymu…ùly
;

81 
thrŸée
 = 1;

83 
‰ameskù_cou¡î
;

85 
	~"möimÆ.h
"

86 
	#TICKER
 

	)

87 
	#tickî
(Ë
	`gp2x_timî_ªad
()

	)

88 
	#TICKS_PER_SEC
 1000

	)

89 
	#vsync
(Ëdo{
	}

	`}whûe
(0)

	)

90 
	#makecﬁ
(
r
,
g
,
b
Ë
	`gp2x_video_cﬁ‹15
‘,g,b,0)

	)

91 
	#gër
(
c
Ë
	`gp2x_video_gër15
(c)

	)

92 
	#gëg
(
c
Ë
	`gp2x_video_gëg15
(c)

	)

93 
	#gëb
(
c
Ë
	`gp2x_video_gëb15
(c)

	)

95 
	gvideo_sˇÀ
=0;

96 
	gvideo_b‹dî
=0;

97 
	gvideo_a•e˘
=0;

105 c⁄° 
	gß„ty
 = 16;

107 
osd_bôm≠
 *
	$osd_Æloc_bôm≠
(
width
,
height
,
dïth
)

109 
osd_bôm≠
 *
bôm≠
;

112 i‡((
bôm≠
 = (
osd_bôm≠
 *)
	`mÆloc
((osd_bitmap))) != 0)

114 
i
,
rowÀn
,
rdwidth
;

115 *
bm
;

118 i‡(
dïth
 != 8 && depth != 16) depth = 8;

120 
bôm≠
->
dïth
 = depth;

121 
bôm≠
->
width
 = width;

122 
bôm≠
->
height
 = height;

124 
rdwidth
 = (
width
 + 7) & ~7;

125 i‡(
dïth
 == 16)

126 
rowÀn
 = 2 * (
rdwidth
 + 2 * 
ß„ty
) * ();

128 
rowÀn
 = (
rdwidth
 + 2 * 
ß„ty
) * ();

130 i‡((
bm
 = (*)
	`mÆloc
((
height
 + 2 * 
ß„ty
Ë* 
rowÀn
)) == 0)

132 
	`‰ì
(
bôm≠
);

138 
	`mem£t
(
bm
,0,(
height
 + 2 * 
ß„ty
Ë* 
rowÀn
);

140 i‡((
bôm≠
->
löe
 = (**)
	`mÆloc
((
height
 + 2 * 
ß„ty
) * (*))) == 0)

142 
	`‰ì
(
bm
);

143 
	`‰ì
(
bôm≠
);

147 
i
 = 0;ò< 
height
 + 2 * 
ß„ty
;i++)

149 i‡(
dïth
 == 16)

150 
bôm≠
->
löe
[
i
] = &
bm
[ò* 
rowÀn
 + 2*
ß„ty
];

152 
bôm≠
->
löe
[
i
] = &
bm
[ò* 
rowÀn
 + 
ß„ty
];

154 
bôm≠
->
löe
 +
ß„ty
;

156 
bôm≠
->
_¥iv©e
 = 
bm
;

158 
	`osd_˛órbôm≠
(
bôm≠
);

161  
bôm≠
;

162 
	}
}

167 
	$osd_˛órbôm≠
(
osd_bôm≠
 *
bôm≠
)

169 
i
;

172 
i
 = 0;ò< 
bôm≠
->
height
;i++)

174 i‡(
bôm≠
->
dïth
 == 16)

175 
	`mem£t
(
bôm≠
->
löe
[
i
],0,2*bôm≠->
width
);

177 
	`mem£t
(
bôm≠
->
löe
[
i
],0,bôm≠->
width
);

180 i‡(
bôm≠
 =
Machöe
->
s¸bôm≠
)

182 
bôm≠_dúty
;

184 
	`osd_m¨k_dúty
 (0,0,
bôm≠
->
width
-1,bôm≠->
height
-1,1);

185 
bôm≠_dúty
 = 1;

187 
	}
}

191 
	$osd_‰ì_bôm≠
(
osd_bôm≠
 *
bôm≠
)

193 i‡(
bôm≠
)

195 
bôm≠
->
löe
 -
ß„ty
;

196 
	`‰ì
(
bôm≠
->
löe
);

197 
	`‰ì
(
bôm≠
->
_¥iv©e
);

198 
	`‰ì
(
bôm≠
);

200 
	}
}

203 
	$osd_m¨k_dúty
(
_x1
, 
_y1
, 
_x2
, 
_y2
, 
ui
)

205 i‡(
u£_dúty
)

207 
x
, 
y
;

211 
_x1
 -
skùcﬁumns
;

212 
_x2
 -
skùcﬁumns
;

213 
_y1
 -
skùlöes
;

214 
_y2
 -
skùlöes
;

216 i‡(
_y1
 >
gfx_di•œy_löes
 || 
_y2
 < 0 || 
_x1
 > 
gfx_di•œy_cﬁumns
 || 
_x2
 < 0) ;

217 i‡(
_y1
 < 0) _y1 = 0;

218 i‡(
_y2
 >
gfx_di•œy_löes
) _y2 = gfx_display_lines - 1;

219 i‡(
_x1
 < 0) _x1 = 0;

220 i‡(
_x2
 >
gfx_di•œy_cﬁumns
) _x2 = gfx_display_columns - 1;

222 
y
 = 
_y1
; y <
_y2
 + 15; y += 16)

223 
x
 = 
_x1
; x <
_x2
 + 15; x += 16)

224 
	`MARKDIRTY
(
x
,
y
);

226 
	}
}

228 
	$öô_dúty
(
dúty
)

230 
	`mem£t
(
dúty_√w
, 
dúty
, 
MAX_GFX_WIDTH
/16 * 
MAX_GFX_HEIGHT
/16);

231 
	}
}

233 
INLINE
 
	$sw≠_dúty
()

235 *
tmp
;

237 
tmp
 = 
dúty_ﬁd
;

238 
dúty_ﬁd
 = 
dúty_√w
;

239 
dúty_√w
 = 
tmp
;

240 
	}
}

247 
	$£À˘_di•œy_mode
(
width
,
height
,
dïth
,
©åibuãs
,
‹õ¡©i⁄
)

250 i‡(
dïth
 == 16 || depth == 32)

252 
	`logîr‹
("Gamê√ed†%d-bô cﬁ‹s.\n",
dïth
);

256 if(
width
 %2 !=0)

257 
width
+=1;

260 
emuœãd_width
 = 
width
;

261 
emuœãd_height
 = 
height
;

264 i‡(!
gfx_width
 && !
gfx_height
)

266 
gfx_width
 = 
width
;

267 
gfx_height
 = 
height
;

270 if(
m4Æl_fixedRes
 == 1)

272 
gfx_width
 = 320;

273 
gfx_height
 = 240;

274 
emuœãd_width
 = 320;

275 
emuœãd_height
 = 240;

277 if(
m4Æl_fixedRes
 == 2)

279 
gfx_width
 = 240;

280 
gfx_height
 = 320;

281 
emuœãd_width
 = 240;

282 
emuœãd_height
 = 320;

283 }if(
m4Æl_fixedRes
 == 3)

285 
gfx_width
 = 640;

286 
gfx_height
 = 480;

287 
emuœãd_width
 = 640;

288 
emuœãd_height
 = 480;

289 }if(
m4Æl_fixedRes
 == 4)

291 
gfx_width
 = 480;

292 
gfx_height
 = 640;

293 
emuœãd_width
 = 480;

294 
emuœãd_height
 = 640;

298 if(
m4Æl_¸›Video
)

301 
gfx_width
 = 
width
;

302 
gfx_height
 = 
height
;

304 
rx
 = 
m4Æl_¸›Video
 == 1 ? 4 : 3;

305 
ry
 = 
m4Æl_¸›Video
 == 1 ? 3 : 4;

311 
√w_width
 =

312 ((((
gfx_height
*
rx
)/
ry
)+7)&~7);

314 if(
√w_width
>
gfx_width
)

316 
gfx_height
 =

317 ((((
gfx_width
*
ry
)/
rx
)+7)&~7);

320 
gfx_width
 = 
√w_width
;

322 
emuœãd_width
 = 
gfx_width
;

323 
emuœãd_height
 = 
gfx_height
;

369 i‡(
video_sˇÀ
)

371 
gfx_width
=
width
;

372 
gfx_height
=
height
;

376 i‡(
ve˘‹_game
 && !
m4Æl_fixedRes
)

378 
gfx_width
 = 640;

379 
gfx_height
 = 480;

380 
emuœãd_width
 = 640;

381 
emuœãd_height
 = 480;

384 
	`gp2x_£t_video_mode
(16,
gfx_width
,
gfx_height
);

385 
	}
}

390 
	$osd_£t_visibÀ_¨ó
(
mö_x
,
max_x
,
mö_y
,
max_y
)

392 
a˘_width
;

394 
	`logîr‹
("£àvisibÀáª®%d-%d %d-%d\n",
mö_x
,
max_x
,
mö_y
,
max_y
);

396 
a˘_width
 = 
gfx_width
;

398 
viswidth
 = 
max_x
 - 
mö_x
 + 1;

399 
visheight
 = 
max_y
 - 
mö_y
 + 1;

402 
xmu…ùly
 = 1;

403 
ymu…ùly
 = 1;

405 
gfx_di•œy_löes
 = 
visheight
;

406 
gfx_di•œy_cﬁumns
 = 
viswidth
;

408 
gfx_xoff£t
 = (
a˘_width
 - 
viswidth
 * 
xmu…ùly
) / 2;

409 i‡(
gfx_di•œy_cﬁumns
 > 
a˘_width
 / 
xmu…ùly
)

410 
gfx_di•œy_cﬁumns
 = 
a˘_width
 / 
xmu…ùly
;

412 
gfx_yoff£t
 = (
gfx_height
 - 
visheight
 * 
ymu…ùly
) / 2;

413 i‡(
gfx_di•œy_löes
 > 
gfx_height
 / 
ymu…ùly
)

414 
gfx_di•œy_löes
 = 
gfx_height
 / 
ymu…ùly
;

416 
skùlöesmö
 = 
mö_y
;

417 
skùlöesmax
 = 
visheight
 - 
gfx_di•œy_löes
 + 
mö_y
;

418 
skùcﬁumnsmö
 = 
mö_x
;

419 
skùcﬁumnsmax
 = 
viswidth
 - 
gfx_di•œy_cﬁumns
 + 
mö_x
;

422 
gfx_xoff£t
 &= ~7;

425 
skùcﬁumns
 = 
mö_x
 + skipcolumns;

426 
skùlöes
 = 
mö_y
 + skiplines;

429 i‡(
gfx_xoff£t
 < 0)

431 
skùcﬁumns
 -
gfx_xoff£t
;

432 
gfx_xoff£t
 = 0;

434 i‡(
gfx_yoff£t
 < 0)

436 
skùlöes
 -
gfx_yoff£t
;

437 
gfx_yoff£t
 = 0;

441 i‡(
skùlöes
 < 
skùlöesmö
)

442 
skùlöes
 = 
skùlöesmö
;

443 i‡(
skùcﬁumns
 < 
skùcﬁumnsmö
)

444 
skùcﬁumns
 = 
skùcﬁumnsmö
;

445 i‡(
skùlöes
 > 
skùlöesmax
)

446 
skùlöes
 = 
skùlöesmax
;

447 i‡(
skùcﬁumns
 > 
skùcﬁumnsmax
)

448 
skùcﬁumns
 = 
skùcﬁumnsmax
;

450 
	`logîr‹
("gfx_width = %d gfx_height = %d\n"

456 
gfx_width
,
gfx_height
,

457 
gfx_xoff£t
,
gfx_yoff£t
,

458 
mö_x
, 
mö_y
, 
max_x
, 
max_y
, 
skùlöes
, 
skùcﬁumns
,
gfx_di•œy_löes
,
gfx_di•œy_cﬁumns
,
xmu…ùly
,
ymu…ùly
);

460 
	`£t_ui_vißªa
(
skùcﬁumns
, 
skùlöes
, skùcﬁumns+
gfx_di•œy_cﬁumns
-1, skùlöes+
gfx_di•œy_löes
-1);

463 
gfx_di•œy_cﬁumns
 = (gfx_display_columns + 3) & ~3;

464 
	}
}

473 
	$osd_¸óã_di•œy
(
width
,
height
,
dïth
,
Âs
,
©åibuãs
,
‹õ¡©i⁄
)

475 
	`logîr‹
("width %d, heighà%d\n", 
width
,
height
);

477 
video_dïth
 = 
dïth
;

478 
video_Âs
 = 
Âs
;

480 
brighäess
 = 100;

481 
brighäess_∑u£d_adju°
 = 1.0;

482 
dúty_bright
 = 1;

484 i‡(
‰ameskù
 < 0) frameskip = 0;

485 i‡(
‰ameskù
 >
FRAMESKIP_LEVELS
) frameskip = FRAMESKIP_LEVELS-1;

487 #ifde‡
GP2X


489 
gp2x_∑l_50hz
;

490 i‡((
gp2x_∑l_50hz
Ë&& (
video_Âs
>50Ë&& (
‰ameskù
<2))

491 
‰ameskù
=2;

496 i‡(
©åibuãs
 & 
VIDEO_TYPE_VECTOR
)

497 
ve˘‹_game
 = 1;

499 
ve˘‹_game
 = 0;

502 i‡(
u£_dúty
 == -1)

505 i‡((
©åibuãs
 & 
VIDEO_SUPPORTS_DIRTY
Ë|| 
ve˘‹_game
)

506 
u£_dúty
 = 1;

508 
u£_dúty
 = 0;

511 
	`£À˘_di•œy_mode
(
width
,
height
,
dïth
,
©åibuãs
,
‹õ¡©i⁄
);

513 i‡(!
	`osd_£t_di•œy
(
width
,
height
,
dïth
,
©åibuãs
,
‹õ¡©i⁄
))

517 
	`osd_£t_visibÀ_¨ó
(0,0,0,0);

520 
	}
}

523 
	$osd_£t_di•œy
(
width
,
height
,
dïth
,
©åibuãs
,
‹õ¡©i⁄
)

525 
i
;

527 i‡(!
gfx_height
 || !
gfx_width
)

529 
	`¥ötf
("Please specify height AND width (e.g. -640x480)\n");

535 i‡(
u£_dúty
)

537 i‡(
ve˘‹_game
)

539 
	`öô_dúty
 (0);

541 
	`öô_dúty
(1);

542 
	`sw≠_dúty
();

543 
	`öô_dúty
(1);

545 i‡(
dútycﬁ‹
)

547 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

548 
dútycﬁ‹
[
i
] = 1;

549 
dúty∑Àâe
 = 1;

553 
	`gp2x_£t_video_mode
(
dïth
,
gfx_width
,
gfx_height
);

555 
vsync_‰ame_øã
 = 
video_Âs
;

557 i‡(
video_sync
)

559 
TICKER
 
a
,
b
;

560 
øã
;

564 
i
 = 0;i < 60;i++)

566 
	`vsync
();

567 
a
 = 
	`tickî
();

571 
i
 = 0;i < 100000;i++) ;

573 
	`vsync
();

574 
b
 = 
	`tickî
();

576 
øã
 = (()
TICKS_PER_SEC
)/(
b
-
a
);

578 
	`logîr‹
("èrgë fømêøã = %fÂs, videÿ‰amêøã = %3.2fHz\n",
video_Âs
,
øã
);

581 
øã
 > 
video_Âs
 * 108 / 100)

582 
øã
 /= 2;

584 i‡(
øã
 < 
video_Âs
 * 92 / 100)

586 
	`osd_˛o£_di•œy
();

587 
	`logîr‹
("-vsync option cannot be used withÅhis display mode:\n"

589 ()(
TICKS_PER_SEC
/(
b
-
a
)),
video_Âs
);

593 
	`logîr‹
("adju°ed videÿ‰amêøã = %3.2fHz\n",
øã
);

594 
vsync_‰ame_øã
 = 
øã
;

596 i‡(
Machöe
->
ßm∂e_øã
)

598 
Machöe
->
ßm∂e_øã
 = Machöe->ßm∂e_øã * 
video_Âs
 / 
øã
;

599 
	`logîr‹
("ßm∂êøãádju°edÅÿm©ch videÿ‰eq: %d\n",
Machöe
->
ßm∂e_øã
);

604 
	}
}

607 
	$osd_˛o£_di•œy
()

609 
	`‰ì
(
dútycﬁ‹
);

610 
dútycﬁ‹
 = 0;

611 
	`‰ì
(
cuºít_∑Àâe
);

612 
cuºít_∑Àâe
 = 0;

613 
	`‰ì
(
∑Àâe_16bô_lookup
);

614 
∑Àâe_16bô_lookup
 = 0;

615 
	}
}

617 
	$osd_Æloˇã_cﬁ‹s
(
tŸÆcﬁ‹s
,c⁄° *
∑Àâe
,*
≥ns
,
modifübÀ
)

619 
i
;

621 
modifübÀ_∑Àâe
 = 
modifübÀ
;

622 
s¸ìn_cﬁ‹s
 = 
tŸÆcﬁ‹s
;

623 i‡(
video_dïth
 != 8)

624 
s¸ìn_cﬁ‹s
 += 2;

625 
s¸ìn_cﬁ‹s
 = 256;

627 
dútycﬁ‹
 = (*)
	`mÆloc
(
s¸ìn_cﬁ‹s
 * ());

628 
cuºít_∑Àâe
 = (*)
	`mÆloc
(3 * 
s¸ìn_cﬁ‹s
 * ());

629 
∑Àâe_16bô_lookup
 = (
UINT32
*)
	`mÆloc
(
s¸ìn_cﬁ‹s
 * (palette_16bit_lookup[0]));

630 i‡(
dútycﬁ‹
 =0 || 
cuºít_∑Àâe
 =0 || 
∑Àâe_16bô_lookup
 == 0)

633 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

634 
dútycﬁ‹
[
i
] = 1;

635 
dúty∑Àâe
 = 1;

636 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

637 
cuºít_∑Àâe
[3*
i
+0] = current_palette[3*i+1] = current_palette[3*i+2] = 0;

639 i‡(
video_dïth
 !8 && 
modifübÀ
 == 0)

641 
r
,
g
,
b
;

644 
i
 = 0;ò< 
tŸÆcﬁ‹s
;i++)

646 
r
 = 255 * 
brighäess
 * 
	`pow
(
∑Àâe
[3*
i
+0] / 255.0, 1 / 
osd_gamma_c‹ª˘i⁄
) / 100;

647 
g
 = 255 * 
brighäess
 * 
	`pow
(
∑Àâe
[3*
i
+1] / 255.0, 1 / 
osd_gamma_c‹ª˘i⁄
) / 100;

648 
b
 = 255 * 
brighäess
 * 
	`pow
(
∑Àâe
[3*
i
+2] / 255.0, 1 / 
osd_gamma_c‹ª˘i⁄
) / 100;

649 *
≥ns
++ = 
	`makecﬁ
(
r
,
g
,
b
);

652 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[0] = 
	`makecﬁ
(0x00,0x00,0x00);

653 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[1] = 
	`makecﬁ
(0xff,0xff,0xff);

654 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[2] = 
	`makecﬁ
(0xff,0xff,0xff);

655 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[3] = 
	`makecﬁ
(0x00,0x00,0x00);

659 i‡(
video_dïth
 =8 && 
tŸÆcﬁ‹s
 >= 255)

661 
be°bœck
,
be°whôe
;

662 
be°bœcksc‹e
,
be°whôesc‹e
;

665 
be°bœck
 = 
be°whôe
 = 0;

666 
be°bœcksc‹e
 = 3*255*255;

667 
be°whôesc‹e
 = 0;

668 
i
 = 0;ò< 
tŸÆcﬁ‹s
;i++)

670 
r
,
g
,
b
,
sc‹e
;

672 
r
 = 
∑Àâe
[3*
i
+0];

673 
g
 = 
∑Àâe
[3*
i
+1];

674 
b
 = 
∑Àâe
[3*
i
+2];

675 
sc‹e
 = 
r
*∏+ 
g
*g + 
b
*b;

677 i‡(
sc‹e
 < 
be°bœcksc‹e
)

679 
be°bœck
 = 
i
;

680 
be°bœcksc‹e
 = 
sc‹e
;

682 i‡(
sc‹e
 > 
be°whôesc‹e
)

684 
be°whôe
 = 
i
;

685 
be°whôesc‹e
 = 
sc‹e
;

689 
i
 = 0;ò< 
tŸÆcﬁ‹s
;i++)

690 
≥ns
[
i
] = i;

693 
≥ns
[
be°bœck
] = 0;

694 
≥ns
[0] = 
be°bœck
;

696 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[0] = 
≥ns
[
be°bœck
];

697 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[1] = 
≥ns
[
be°whôe
];

698 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[2] = 
≥ns
[
be°whôe
];

699 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[3] = 
≥ns
[
be°bœck
];

704 
cuºít_∑Àâe
[3*1+0] = current_palette[3*1+1] = current_palette[3*1+2] = 0xff;

705 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[0] = 0;

706 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[1] = 1;

707 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[2] = 1;

708 
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[3] = 0;

712 
i
 = 0;ò< 
tŸÆcﬁ‹s
;i++)

713 
≥ns
[
i
] = (
s¸ìn_cﬁ‹s
-1)-i;

716 
i
 = 0;ò< 
tŸÆcﬁ‹s
;i++)

718 
cuºít_∑Àâe
[3*
≥ns
[
i
]+0] = 
∑Àâe
[3*i];

719 
cuºít_∑Àâe
[3*
≥ns
[
i
]+1] = 
∑Àâe
[3*i+1];

720 
cuºít_∑Àâe
[3*
≥ns
[
i
]+2] = 
∑Àâe
[3*i+2];

724 i‡(
video_dïth
 == 16)

726 i‡(
modifübÀ_∑Àâe
)

728 i‡(
u£_dúty
)

730 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty1_∑Àâized16
;

731 
	`logîr‹
("blitscreen_dirty1_palettized16\n");

735 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty0_∑Àâized16
;

736 
	`logîr‹
("blitscreen_dirty0_palettized16\n");

741 i‡(
u£_dúty
)

743 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty1_cﬁ‹16
;

744 
	`logîr‹
("blitscreen_dirty1_color16\n");

748 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty0_cﬁ‹16
;

749 
	`logîr‹
("blitscreen_dirty0_color16\n");

755 i‡(
u£_dúty
)

757 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty1_cﬁ‹8
;

758 
	`logîr‹
("blitscreen_dirty1_color8\n");

762 
upd©e_s¸ìn
 = 
blôs¸ìn_dúty0_cﬁ‹8
;

763 
	`logîr‹
("blitscreen_dirty1_color8\n");

768 
	}
}

771 
	$osd_modify_≥n
(
≥n
,
ªd
, 
gªí
, 
blue
)

773 i‡(
modifübÀ_∑Àâe
 == 0)

775 
	`logîr‹
("error: osd_modify_pen() called with modifiable_palette == 0\n");

779 i‡(
cuºít_∑Àâe
[3*
≥n
+0] !
ªd
 ||

780 
cuºít_∑Àâe
[3*
≥n
+1] !
gªí
 ||

781 
cuºít_∑Àâe
[3*
≥n
+2] !
blue
)

783 
cuºít_∑Àâe
[3*
≥n
+0] = 
ªd
;

784 
cuºít_∑Àâe
[3*
≥n
+1] = 
gªí
;

785 
cuºít_∑Àâe
[3*
≥n
+2] = 
blue
;

786 
dútycﬁ‹
[
≥n
] = 1;

787 
dúty∑Àâe
 = 1;

789 
	}
}

793 
	$osd_gë_≥n
(
≥n
,*
ªd
, *
gªí
, *
blue
)

795 i‡(
video_dïth
 !8 && 
modifübÀ_∑Àâe
 == 0)

797 *
ªd
 = 
	`gër
(
≥n
);

798 *
gªí
 = 
	`gëg
(
≥n
);

799 *
blue
 = 
	`gëb
(
≥n
);

803 *
ªd
 = 
cuºít_∑Àâe
[3*
≥n
+0];

804 *
gªí
 = 
cuºít_∑Àâe
[3*
≥n
+1];

805 *
blue
 = 
cuºít_∑Àâe
[3*
≥n
+2];

807 
	}
}

811 
	$upd©e_s¸ìn_dummy
(
osd_bôm≠
 *
bôm≠
)

813 
	`logîr‹
("msdos/video.c: undeföed upd©e_s¸ìn(Ëfun˘i⁄ f‹ %d x %d!\n",
xmu…ùly
,
ymu…ùly
);

814 
	}
}

816 
INLINE
 
	$∑n_di•œy
()

818 
∑n_ch™ged
 = 0;

821 i‡(
	`öput_ui_¥es£d_ª≥©
(
IPT_UI_PAN_LEFT
,1))

822 i‡(
skùcﬁumns
 < 
skùcﬁumnsmax
)

824 
skùcﬁumns
++;

825 
	`osd_m¨k_dúty
 (0,0,
Machöe
->
s¸bôm≠
->
width
-1,Machöe->s¸bôm≠->
height
-1,1);

826 
∑n_ch™ged
 = 1;

828 i‡(
	`öput_ui_¥es£d_ª≥©
(
IPT_UI_PAN_RIGHT
,1))

829 i‡(
skùcﬁumns
 > 
skùcﬁumnsmö
)

831 
skùcﬁumns
--;

832 
	`osd_m¨k_dúty
 (0,0,
Machöe
->
s¸bôm≠
->
width
-1,Machöe->s¸bôm≠->
height
-1,1);

833 
∑n_ch™ged
 = 1;

835 i‡(
	`öput_ui_¥es£d_ª≥©
(
IPT_UI_PAN_DOWN
,1))

836 i‡(
skùlöes
 < 
skùlöesmax
)

838 
skùlöes
++;

839 
	`osd_m¨k_dúty
 (0,0,
Machöe
->
s¸bôm≠
->
width
-1,Machöe->s¸bôm≠->
height
-1,1);

840 
∑n_ch™ged
 = 1;

842 i‡(
	`öput_ui_¥es£d_ª≥©
(
IPT_UI_PAN_UP
,1))

843 i‡(
skùlöes
 > 
skùlöesmö
)

845 
skùlöes
--;

846 
	`osd_m¨k_dúty
 (0,0,
Machöe
->
s¸bôm≠
->
width
-1,Machöe->s¸bôm≠->
height
-1,1);

847 
∑n_ch™ged
 = 1;

850 i‡(
∑n_ch™ged
)

852 i‡(
u£_dúty
Ë
	`öô_dúty
(1);

854 
	`£t_ui_vißªa
 (
skùcﬁumns
, 
skùlöes
, skùcﬁumns+
gfx_di•œy_cﬁumns
-1, skùlöes+
gfx_di•œy_löes
-1);

856 
	}
}

858 
	$osd_skù_this_‰ame
()

860 c⁄° 
skùèbÀ
[
FRAMESKIP_LEVELS
][FRAMESKIP_LEVELS] =

875  
skùèbÀ
[
‰ameskù
][
‰ameskù_cou¡î
];

876 
	}
}

879 
	$osd_upd©e_video_™d_audio
(
osd_bôm≠
 *
bôm≠
)

881 c⁄° 
waôèbÀ
[
FRAMESKIP_LEVELS
][FRAMESKIP_LEVELS] =

896 
i
;

897 
showÂs
,
showÂ°emp
;

898 
TICKER
 
cuº
;

899 
TICKER
 
¥ev_mósuª
=0,
this_‰ame_ba£
,
¥ev
;

900 
•ìd
 = 100;

901 
vups
,
vfcou¡
;

902 
have_to_˛ór_bôm≠
 = 0;

906 i‡(
¥ev_mósuª
==0 || 
m4Æl_exôPau£
)

908 
m4Æl_exôPau£
 = 0;

910 
¥ev_mósuª
 = 
	`tickî
(Ë- 
FRAMESKIP_LEVELS
 * 
TICKS_PER_SEC
/
video_Âs
;

913 i‡(
‰ameskù_cou¡î
 == 0)

914 
this_‰ame_ba£
 = 
¥ev_mósuª
 + 
FRAMESKIP_LEVELS
 * 
TICKS_PER_SEC
/
video_Âs
;

917 
	`msdos_upd©e_audio
();

919 i‡(
	`osd_skù_this_‰ame
() == 0)

921 i‡(
showÂ°emp
)

923 
showÂ°emp
--;

924 i‡(
showÂs
 =0 && 
showÂ°emp
 == 0)

926 
have_to_˛ór_bôm≠
 = 1;

930 i‡(
	`öput_ui_¥es£d
(
IPT_UI_SHOW_FPS
))

932 i‡(
showÂ°emp
)

934 
showÂ°emp
 = 0;

935 
have_to_˛ór_bôm≠
 = 1;

939 
showÂs
 ^= 1;

940 i‡(
showÂs
 == 0)

942 
have_to_˛ór_bôm≠
 = 1;

948 i‡(
thrŸée
)

950 
	`¥ofûî_m¨k
(
PROFILER_IDLE
);

951 i‡(
video_sync
)

953 
TICKER
 
œ°
;

956 
	`vsync
();

957 
cuº
 = 
	`tickî
();

958 } 
TICKS_PER_SEC
 / (
cuº
 - 
œ°
Ë> 
video_Âs
 * 11 /10);

959 
œ°
 = 
cuº
;

963 
TICKER
 
èrgë
;

965 i‡(
waô_vsync
)

966 
	`vsync
();

967 
cuº
 = 
	`tickî
();

968 
èrgë
 = 
this_‰ame_ba£
 + 
‰ameskù_cou¡î
 * 
TICKS_PER_SEC
/
video_Âs
;

969 i‡((
cuº
 < 
èrgë
Ë&& (èrgë-cuº<
TICKS_PER_SEC
))

979 if(
globÆ_idÀ_waô
 && (
èrgë
-
cuº
 >2Ë&& (èrgë-cuº<
TICKS_PER_SEC
))

982 
time•ec
 
ªq
={0},
ªm
={0};

983 
ªq
.
tv_£c
=0;

984 
ªq
.
tv_n£c
=1000000UL;

986 
	`«no¶ìp
(&
ªq
,&
ªm
);

992 
cuº
 = 
	`tickî
();

994 } (
cuº
 < 
èrgë
Ë&& (èrgë-cuº<
TICKS_PER_SEC
));

999 
	`¥ofûî_m¨k
(
PROFILER_END
);

1001 
cuº
 = 
	`tickî
();

1003 i‡(
‰ameskù_cou¡î
 == 0)

1006 
divdr
;

1007 
divdr
 = ()(()(()(
TICKS_PER_SEC
Ë/ 
video_Âs
Ë* ()(
FRAMESKIP_LEVELS
)Ë/ ()(
cuº
 - 
¥ev_mósuª
);

1008 
•ìd
 = ()(
divdr
 * 100.0);

1009 
¥ev_mósuª
 = 
cuº
;

1021 
¥ev
 = 
cuº
;

1023 
vfcou¡
 +
waôèbÀ
[
‰ameskù
][
‰ameskù_cou¡î
];

1024 i‡(
vfcou¡
 >
video_Âs
)

1026 
ve˘‹_upd©es
;

1027 
vfcou¡
 = 0;

1028 
vups
 = 
ve˘‹_upd©es
;

1029 
ve˘‹_upd©es
 = 0;

1032 i‡(
globÆ_Âs
 || 
showÂs
 || 
showÂ°emp
)

1034 
Âs
;

1035 
buf
[30];

1036 
divdr
;

1037 
divdr
 = 100 * 
FRAMESKIP_LEVELS
;

1038 
Âs
 = (
video_Âs
 * (
FRAMESKIP_LEVELS
 - 
‰ameskù
Ë* 
•ìd
 + (
divdr
 / 2)) / divdr;

1039 
	`•rötf
(
buf
,"%s%2d%4d%%%4d/%d fps",
auto‰ameskù
?"auto":"fskp",
‰ameskù
,
•ìd
,
Âs
,()(
video_Âs
+0.5));

1040 
	`ui_ãxt
(
bôm≠
,
buf
,
Machöe
->
uiwidth
-
	`°æí
(buf)*Machöe->
uif⁄twidth
,0);

1041 i‡(
ve˘‹_game
)

1043 
	`•rötf
(
buf
," %d ve˘‹ upd©es",
vups
);

1044 
	`ui_ãxt
(
bôm≠
,
buf
,
Machöe
->
uiwidth
-
	`°æí
(buf)*Machöe->
uif⁄twidth
,Machöe->
uif⁄theight
);

1048 i‡(
bôm≠
->
dïth
 == 8)

1050 i‡(
dúty_bright
)

1052 
dúty_bright
 = 0;

1053 
i
 = 0;i < 256;i++)

1055 
øã
 = 
brighäess
 * 
brighäess_∑u£d_adju°
 * 
	`pow
(
i
 / 255.0, 1 / 
osd_gamma_c‹ª˘i⁄
) / 100;

1056 
bright_lookup
[
i
] = 255 * 
øã
 + 0.5;

1059 i‡(
dúty∑Àâe
)

1061 
dúty∑Àâe
 = 0;

1062 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

1064 i‡(
dútycﬁ‹
[
i
])

1066 
r
,
g
,
b
;

1068 
dútycﬁ‹
[
i
] = 0;

1070 
r
 = 
cuºít_∑Àâe
[3*
i
+0];

1071 
g
 = 
cuºít_∑Àâe
[3*
i
+1];

1072 
b
 = 
cuºít_∑Àâe
[3*
i
+2];

1073 i‡(
i
 !
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[1])

1075 
r
 = 
bright_lookup
[r];

1076 
g
 = 
bright_lookup
[g];

1077 
b
 = 
bright_lookup
[b];

1079 
	`gp2x_video_cﬁ‹8
(
i
,
r
,
g
,
b
);

1082 
	`gp2x_video_£çÆëã
();

1087 i‡(
dúty_bright
)

1089 
dúty_bright
 = 0;

1090 
i
 = 0;i < 256;i++)

1092 
øã
 = 
brighäess
 * 
brighäess_∑u£d_adju°
 * 
	`pow
(
i
 / 255.0, 1 / 
osd_gamma_c‹ª˘i⁄
) / 100;

1093 
bright_lookup
[
i
] = 255 * 
øã
 + 0.5;

1096 i‡(
dúty∑Àâe
)

1098 i‡(
u£_dúty
Ë
	`öô_dúty
(1);

1100 
dúty∑Àâe
 = 0;

1101 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

1103 i‡(
dútycﬁ‹
[
i
])

1105 
r
,
g
,
b
;

1107 
dútycﬁ‹
[
i
] = 0;

1109 
r
 = 
cuºít_∑Àâe
[3*
i
+0];

1110 
g
 = 
cuºít_∑Àâe
[3*
i
+1];

1111 
b
 = 
cuºít_∑Àâe
[3*
i
+2];

1112 i‡(
i
 !
Machöe
->
uif⁄t
->
cﬁ‹èbÀ
[1])

1114 
r
 = 
bright_lookup
[r];

1115 
g
 = 
bright_lookup
[g];

1116 
b
 = 
bright_lookup
[b];

1118 
∑Àâe_16bô_lookup
[
i
] = 
	`makecﬁ
(
r
,
g
,
b
);

1125 
	`¥ofûî_m¨k
(
PROFILER_BLIT
);

1126 
	`upd©e_s¸ìn
(
bôm≠
);

1127 
	`¥ofûî_m¨k
(
PROFILER_END
);

1129 i‡(
have_to_˛ór_bôm≠
)

1130 
	`osd_˛órbôm≠
(
bôm≠
);

1132 i‡(
u£_dúty
)

1134 i‡(!
ve˘‹_game
)

1135 
	`sw≠_dúty
();

1136 
	`öô_dúty
(0);

1139 i‡(
have_to_˛ór_bôm≠
)

1140 
	`osd_˛órbôm≠
(
bôm≠
);

1142 i‡(
thrŸée
 && 
auto‰ameskù
 && 
‰ameskù_cou¡î
 == 0)

1144 
‰ameskùadju°
 ;

1145 
adj•ìd
;

1148 
adj•ìd
 = 
•ìd
 * 
video_Âs
 / 
vsync_‰ame_øã
;

1150 i‡(
adj•ìd
 >= 100 )

1152 
‰ameskùadju°
++;

1153 i‡(
‰ameskùadju°
 >= 3)

1155 
‰ameskùadju°
 = 0;

1156 #ifde‡
GP2X


1158 
gp2x_∑l_50hz
;

1159 i‡((
gp2x_∑l_50hz
Ë&& (
video_Âs
>50))

1161 i‡(
‰ameskù
>2)

1162 
‰ameskù
--;

1164 i‡(
‰ameskù
 > 0)

1165 
‰ameskù
--;

1168 i‡(
‰ameskù
 > 0) frameskip--;

1174 i‡(
adj•ìd
 < 80)

1176 
‰ameskùadju°
 -(90 - 
adj•ìd
) / 5;

1181 i‡(
‰ameskù
 < 8)

1182 
‰ameskùadju°
--;

1185 
‰ameskùadju°
 <= -2)

1187 
‰ameskùadju°
 += 2;

1191 i‡(
‰ameskù
 < 
FRAMESKIP_LEVELS
-1) frameskip++;

1199 
	`∑n_di•œy
();

1201 i‡(
	`öput_ui_¥es£d
(
IPT_UI_FRAMESKIP_INC
))

1203 i‡(
auto‰ameskù
)

1205 
auto‰ameskù
 = 0;

1206 
‰ameskù
 = 0;

1210 i‡(
‰ameskù
 =
FRAMESKIP_LEVELS
-1)

1212 
‰ameskù
 = 0;

1213 
auto‰ameskù
 = 1;

1216 
‰ameskù
++;

1219 i‡(
showÂs
 == 0)

1220 
showÂ°emp
 = 2*
video_Âs
;

1223 i‡(
	`öput_ui_¥es£d
(
IPT_UI_FRAMESKIP_DEC
))

1225 i‡(
auto‰ameskù
)

1227 
auto‰ameskù
 = 0;

1228 
‰ameskù
 = 
FRAMESKIP_LEVELS
-1;

1232 i‡(
‰ameskù
 == 0)

1233 
auto‰ameskù
 = 1;

1235 
‰ameskù
--;

1238 i‡(
showÂs
 == 0)

1239 
showÂ°emp
 = 2*
video_Âs
;

1242 i‡(
	`öput_ui_¥es£d
(
IPT_UI_THROTTLE
))

1244 
thrŸée
 ^= 1;

1247 
‰ameskù_cou¡î
 = (‰ameskù_cou¡î + 1Ë% 
FRAMESKIP_LEVELS
;

1248 
	}
}

1252 
	$osd_£t_gamma
(
_gamma
)

1254 
i
;

1256 
osd_gamma_c‹ª˘i⁄
 = 
_gamma
;

1258 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

1259 
dútycﬁ‹
[
i
] = 1;

1260 
dúty∑Àâe
 = 1;

1261 
dúty_bright
 = 1;

1262 
	}
}

1264 
	$osd_gë_gamma
()

1266  
osd_gamma_c‹ª˘i⁄
;

1267 
	}
}

1270 
	$osd_£t_brighäess
(
_brighäess
)

1272 
i
;

1274 
brighäess
 = 
_brighäess
;

1276 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

1277 
dútycﬁ‹
[
i
] = 1;

1278 
dúty∑Àâe
 = 1;

1279 
dúty_bright
 = 1;

1280 
	}
}

1282 
	$osd_gë_brighäess
()

1284  
brighäess
;

1285 
	}
}

1287 
	$osd_ßve_¢≠shŸ
(
osd_bôm≠
 *
bôm≠
)

1289 
	`ßve_s¸ìn_¢≠shŸ
(
bôm≠
);

1290 
	}
}

1292 
	$osd_∑u£
(
∑u£d
)

1294 
i
;

1296 i‡(
∑u£d
)

1299 
brighäess_∑u£d_adju°
 = 0.65;

1304 
brighäess_∑u£d_adju°
 = 1.0;

1307 
i
 = 0;ò< 
s¸ìn_cﬁ‹s
;i++)

1308 
dútycﬁ‹
[
i
] = 1;

1309 
dúty∑Àâe
 = 1;

1310 
dúty_bright
 = 1;

1311 
	}
}

	@wiimote.c

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<m©h.h
>

45 
	~<¨∑/öë.h
>

48 
	~"wiimŸe.h
"

49 
	~"möimÆ.h
"

51 
	gnum_of_joys
 = 0;

52 
wiimŸe_t
 
	gjoys
[4];

53 
m4Æl_exôGame
;

54 
	gm4Æl_wiiDódZ⁄eVÆue
 = 1;

55 
m4Æl_öGame
;

56 
m4Æl_waysStick
;

57 
	#STICK4WAY
 (
m4Æl_waysStick
 =4 && 
m4Æl_öGame
)

	)

58 
	#STICK2WAY
 (
m4Æl_waysStick
 =2 && 
m4Æl_öGame
)

	)

60 
wiimŸe_£nd
(
wiimŸe_t
* 
wm
, 
byã
 
ªp‹t_ty≥
, byã* 
msg
, 
Àn
);

61 
wiimŸe_ªad_d©a
(
wiimŸe_t
* 
wm
, 
addr
, 
Àn
);

62 
wiimŸe_wrôe_d©a
(
wiimŸe_t
* 
wm
, 
addr
, 
byã
* 
d©a
, byã 
Àn
);

63 
wiimŸe_£t_Àds
(
wiimŸe_t
* 
wm
, 
Àds
);

64 
˛assic_˘æ_h™dshake
(
wiimŸe_t
* 
wm
, 
˛assic_˘æ_t
* 
cc
, 
byã
* 
d©a
, 
Àn
);

65 
˛assic_˘æ_evít
(
˛assic_˘æ_t
* 
cc
, 
byã
* 
msg
);

119 
wiimŸe_t
* 
	$wiimŸe_gë_by_sour˚_cid
(
uöt16_t
 
sour˚_cid
){

121 
i
 = 0;

123 ; 
i
 < 
num_of_joys
; ++i) {

124 if(
WIIMOTE_DBG
)
	`¥ötf
("0x%02x 0x%02x\n",
joys
[
i
].
i_sour˚_cid
,
sour˚_cid
);

125 i‡(
joys
[
i
].
i_sour˚_cid
 =
sour˚_cid
)

126  &
joys
[
i
];

129  
NULL
;

130 
	}
}

139 
	$wiimŸe_°©us
(
wiimŸe_t
* 
wm
) {

140 
byã
 
buf
 = 0;

142 i‡(!
wm
 || !
	`WIIMOTE_IS_CONNECTED
(wm))

145 if(
WIIMOTE_DBG
)
	`¥ötf
("Requested wiimote status.\n");

147 
	`wiimŸe_£nd
(
wm
, 
WM_CMD_CTRL_STATUS
, &
buf
, 1);

148 
	}
}

150 
	$wiimŸe_d©a_ªp‹t
(
wiimŸe_t
* 
wm
, 
byã
 
ty≥
) {

151 
byã
 
buf
[2] = {0x0,0x0};

153 i‡(!
wm
 || !
	`WIIMOTE_IS_CONNECTED
(wm))

156 
buf
[1] = 
ty≥
;

158 
	`wiimŸe_£nd
(
wm
, 
WM_CMD_REPORT_TYPE
, 
buf
, 2);

159 
	}
}

170 
	$wiimŸe_£t_Àds
(
wiimŸe_t
* 
wm
, 
Àds
) {

171 
byã
 
buf
;

173 i‡(!
wm
 || !
	`WIIMOTE_IS_CONNECTED
(wm))

177 
wm
->
Àds
 = (leds & 0xF0);

179 
buf
 = 
wm
->
Àds
;

181 
	`wiimŸe_£nd
(
wm
, 
WM_CMD_LED
, &
buf
, 1);

182 
	}
}

190 
	$wiimŸe_¥es£d_buâ⁄s
(
wiimŸe_t
* 
wm
, 
byã
* 
msg
) {

191 
now
;

194 
now
 = 
	`BIG_ENDIAN_SHORT
(*(*)
msg
Ë& 
WIIMOTE_BUTTON_ALL
;

197 
wm
->
bäs
 = 
now
;

198 
	}
}

206 
	$wiimŸe_h™dÀ_ex∑nsi⁄
(
wiimŸe_t
* 
wm
, 
byã
* 
msg
) {

207 
wm
->
exp
.
ty≥
) {

208 
EXP_CLASSIC
:

209 
	`˛assic_˘æ_evít
(&
wm
->
exp
.
˛assic
, 
msg
);

214 
	}
}

229 
	$wiimŸe_h™dshake
(
wiimŸe_t
* 
wm
, 
byã
 
evít
, byã* 
d©a
, 
Àn
) {

231 i‡(!
wm
)  0;

235 if(
WIIMOTE_DBG
)
	`¥ötf
("H™dshakê%d\n",
wm
->
h™dshake_°©e
);

236 
wm
->
h™dshake_°©e
) {

239 
	`WIIMOTE_ENABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE
);

240 
	`wiimŸe_£t_Àds
(
wm
, 
WIIMOTE_LED_NONE
);

243 
	`wiimŸe_°©us
(
wm
);

245 
wm
->
h™dshake_°©e
=1;

250 
©èchmít
 = 0;

252 if(
evít
 !
WM_RPT_CTRL_STATUS
)

256 i‡((
d©a
[2] & 
WM_CTRL_STATUS_BYTE1_ATTACHMENT
) == WM_CTRL_STATUS_BYTE1_ATTACHMENT)

258 
©èchmít
 = 1;

261 if(
WIIMOTE_DBG
)
	`¥ötf
("©èchmíà%d %d\n",
©èchmít
,
	`WIIMOTE_IS_SET
(
wm
, 
WIIMOTE_STATE_EXP
));

264 i‡(
©èchmít
 && !
	`WIIMOTE_IS_SET
(
wm
, 
WIIMOTE_STATE_EXP
)) {

265 
	`WIIMOTE_ENABLE_STATE
(
wm
, 
WIIMOTE_STATE_EXP
);

268 if(
WIIMOTE_DBG
)
	`¥ötf
("haciendoÉl handshake deÜaÉxpansion\n");

270 if(
	`WIIMOTE_IS_SET
(
wm
,
WIIMOTE_STATE_HANDSHAKE_COMPLETE
))

272 if(
WIIMOTE_DBG
)
	`¥ötf
("rehandshake\n");

273 
	`WIIMOTE_DISABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE_COMPLETE
);

274 
	`WIIMOTE_ENABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE
);

277 
byã
 
buf
;

283 
buf
 = 0x55;

284 
	`wiimŸe_wrôe_d©a
(
wm
, 0x04A400F0, &
buf
, 1);

285 
	`u¶ìp
(100000);

286 
buf
 = 0x00;

287 
	`wiimŸe_wrôe_d©a
(
wm
, 0x04A400FB, &
buf
, 1);

290 
	`u¶ìp
(100000);

291 
	`wiimŸe_ªad_d©a
(
wm
, 
WM_EXP_MEM_CALIBR
+220, 4);

294 
wm
->
h™dshake_°©e
 = 4;

297 } i‡(!
©èchmít
 && 
	`WIIMOTE_IS_SET
(
wm
, 
WIIMOTE_STATE_EXP
)) {

299 
	`WIIMOTE_DISABLE_STATE
(
wm
, 
WIIMOTE_STATE_EXP
);

300 
wm
->
exp
.
ty≥
 = 
EXP_NONE
;

302 if(
	`WIIMOTE_IS_SET
(
wm
,
WIIMOTE_STATE_HANDSHAKE_COMPLETE
))

304 if(
WIIMOTE_DBG
)
	`¥ötf
("rehandshake\n");

305 
	`WIIMOTE_DISABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE_COMPLETE
);

306 
	`WIIMOTE_ENABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE
);

310 if(!
©èchmít
 && 
	`WIIMOTE_IS_SET
(
wm
,
WIIMOTE_STATE_HANDSHAKE
))

312 
wm
->
h™dshake_°©e
 = 2;

320 if(
WIIMOTE_DBG
)
	`¥ötf
("Finalizado HANDSHAKE SIN EXPANSION\n");

321 
	`wiimŸe_d©a_ªp‹t
(
wm
,
WM_RPT_BTN
);

322 
wm
->
h™dshake_°©e
 = 6;

327 if(
WIIMOTE_DBG
)
	`¥ötf
("Finalizado HANDSHAKE CON EXPANSION\n");

328 
	`wiimŸe_d©a_ªp‹t
(
wm
,
WM_RPT_BTN_EXP
);

329 
wm
->
h™dshake_°©e
 = 6;

334 if(
evít
 !
WM_RPT_READ
)

337 
id
 = 
	`BIG_ENDIAN_LONG
(*(*)(
d©a
));

339 if(
WIIMOTE_DBG
)
	`¥ötf
("Ex∑nsi⁄ id=0x%04x\n",
id
);

341 if(
id
!= 0xa4200101)

343 
wm
->
h™dshake_°©e
 = 2;

349 
	`u¶ìp
(100000);

350 
	`wiimŸe_ªad_d©a
(
wm
, 
WM_EXP_MEM_CALIBR
, 16);

351 
wm
->
h™dshake_°©e
 = 5;

358 if(
evít
 !
WM_RPT_READ
)

361 
	`˛assic_˘æ_h™dshake
(
wm
, &wm->
exp
.
˛assic
, 
d©a
,
Àn
);

362 
wm
->
h™dshake_°©e
 = 3;

368 
	`WIIMOTE_DISABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE
);

369 
	`WIIMOTE_ENABLE_STATE
(
wm
, 
WIIMOTE_STATE_HANDSHAKE_COMPLETE
);

370 
wm
->
h™dshake_°©e
 = 1;

371 if(
wm
->
unid
==0)

372 
	`wiimŸe_£t_Àds
(
wm
, 
WIIMOTE_LED_1
);

373 if(
wm
->
unid
==1)

374 
	`wiimŸe_£t_Àds
(
wm
, 
WIIMOTE_LED_2
);

375 if(
wm
->
unid
==2)

376 
	`wiimŸe_£t_Àds
(
wm
, 
WIIMOTE_LED_3
);

377 if(
wm
->
unid
==3)

378 
	`wiimŸe_£t_Àds
(
wm
, 
WIIMOTE_LED_4
);

387 
	}
}

400 
	$wiimŸe_£nd
(
wiimŸe_t
* 
wm
, 
byã
 
ªp‹t_ty≥
, byã* 
msg
, 
Àn
) {

401 
byã
 
buf
[32];

403 
buf
[0] = 
WM_SET_REPORT
 | 
WM_BT_OUTPUT
;

404 
buf
[1] = 
ªp‹t_ty≥
;

406 
	`mem˝y
(
buf
+2, 
msg
, 
Àn
);

408 if(
WIIMOTE_DBG
)

410 
x
 = 2;

411 
	`¥ötf
("[DEBUG] (id %iËSEND: (%xË%.2x ", 
wm
->
unid
, 
buf
[0], buf[1]);

412 ; 
x
 < 
Àn
+2; ++x)

413 
	`¥ötf
("%.2x ", 
buf
[
x
]);

414 
	`¥ötf
("\n");

420 
	}
}

436 
	$wiimŸe_ªad_d©a
(
wiimŸe_t
* 
wm
, 
addr
, 
Àn
) {

439 i‡(!
wm
 || !
	`WIIMOTE_IS_CONNECTED
(wm))

441 i‡(!
Àn
 )

444 
byã
 
buf
[6];

447 *(*)(
buf
Ë
	`BIG_ENDIAN_LONG
(
addr
);

450 *(*)(
buf
 + 4Ë
	`BIG_ENDIAN_SHORT
(
Àn
);

452 if(
WIIMOTE_DBG
)
	`¥ötf
("Reque°Ñódáàaddªss: 0x%xÜígth: %i", 
addr
, 
Àn
);

453 
	`wiimŸe_£nd
(
wm
, 
WM_CMD_READ_DATA
, 
buf
, 6);

456 
	}
}

466 
	$wiimŸe_wrôe_d©a
(
wiimŸe_t
* 
wm
, 
addr
, 
byã
* 
d©a
, byã 
Àn
) {

467 
byã
 
buf
[21] = {0};

469 i‡(!
wm
 || !
	`WIIMOTE_IS_CONNECTED
(wm))

471 i‡(!
d©a
 || !
Àn
)

474 if(
WIIMOTE_DBG
)
	`¥ötf
("Wrôög %òbyã†tÿmem‹yÜoˇti⁄ 0x%x...\n", 
Àn
, 
addr
);

476 if(
WIIMOTE_DBG
)

478 
i
 = 0;

479 
	`¥ötf
("Write data is: ");

480 ; 
i
 < 
Àn
; ++i)

481 
	`¥ötf
("%x ", 
d©a
[
i
]);

482 
	`¥ötf
("\n");

486 *(*)(
buf
Ë
	`BIG_ENDIAN_LONG
(
addr
);

489 *(
byã
*)(
buf
 + 4Ë
Àn
;

492 
	`mem˝y
(
buf
 + 5, 
d©a
, 
Àn
);

494 
	`wiimŸe_£nd
(
wm
, 
WM_CMD_WRITE_DATA
, 
buf
, 21);

496 
	}
}

501 
˛assic_˘æ_¥es£d_buâ⁄s
(
˛assic_˘æ_t
* 
cc
, 
now
);

502 
ˇlc_joy°ick_°©e
(
joy°ick_t
* 
js
, 
x
, 
y
);

513 
	$˛assic_˘æ_h™dshake
(
wiimŸe_t
* 
wm
, 
˛assic_˘æ_t
* 
cc
, 
byã
* 
d©a
, 
Àn
) {

514 
i
;

515 
off£t
 = 0;

517 
cc
->
bäs
 = 0;

518 
cc
->
r_shouldî
 = 0;

519 
cc
->
l_shouldî
 = 0;

527 if(
WIIMOTE_DBG
)

529 
x
 = 0;

530 
	`¥ötf
("[DECRIPTED]");

531 ; 
x
 < 
Àn
; x++)

532 
	`¥ötf
("%.2x ", 
d©a
[
x
]);

533 
	`¥ötf
("\n");

543 i‡(
d©a
[
off£t
] != 0xFF && data[offset] != 0x00)

545 
cc
->
ljs
.
max
.
x
 = 
d©a
[0 + 
off£t
] / 4;

546 
cc
->
ljs
.
mö
.
x
 = 
d©a
[1 + 
off£t
] / 4;

547 
cc
->
ljs
.
˚¡î
.
x
 = 
d©a
[2 + 
off£t
] / 4;

548 
cc
->
ljs
.
max
.
y
 = 
d©a
[3 + 
off£t
] / 4;

549 
cc
->
ljs
.
mö
.
y
 = 
d©a
[4 + 
off£t
] / 4;

550 
cc
->
ljs
.
˚¡î
.
y
 = 
d©a
[5 + 
off£t
] / 4;

552 
cc
->
rjs
.
max
.
x
 = 
d©a
[6 + 
off£t
] / 8;

553 
cc
->
rjs
.
mö
.
x
 = 
d©a
[7 + 
off£t
] / 8;

554 
cc
->
rjs
.
˚¡î
.
x
 = 
d©a
[8 + 
off£t
] / 8;

555 
cc
->
rjs
.
max
.
y
 = 
d©a
[9 + 
off£t
] / 8;

556 
cc
->
rjs
.
mö
.
y
 = 
d©a
[10 + 
off£t
] / 8;

557 
cc
->
rjs
.
˚¡î
.
y
 = 
d©a
[11 + 
off£t
] / 8;

561 
cc
->
ljs
.
max
.
x
 = 55;

562 
cc
->
ljs
.
mö
.
x
 = 5;

563 
cc
->
ljs
.
˚¡î
.
x
 = 30;

564 
cc
->
ljs
.
max
.
y
 = 55;

565 
cc
->
ljs
.
mö
.
y
 = 5;

566 
cc
->
ljs
.
˚¡î
.
y
 = 30;

568 
cc
->
rjs
.
max
.
x
 = 30;

569 
cc
->
rjs
.
mö
.
x
 = 0;

570 
cc
->
rjs
.
˚¡î
.
x
 = 15;

571 
cc
->
rjs
.
max
.
y
 = 30;

572 
cc
->
rjs
.
mö
.
y
 = 0;

573 
cc
->
rjs
.
˚¡î
.
y
 = 15;

577 
wm
->
exp
.
ty≥
 = 
EXP_CLASSIC
;

580 
	}
}

588 
	$˛assic_˘æ_evít
(
˛assic_˘æ_t
* 
cc
, 
byã
* 
msg
) {

589 
i
, 
lx
, 
ly
, 
rx
, 
ry
;

590 
byã
 
l
, 
r
;

598 
	`˛assic_˘æ_¥es£d_buâ⁄s
(
cc
, 
	`BIG_ENDIAN_SHORT
(*(*)(
msg
 + 4)));

601 
l
 = (((
msg
[2] & 0x60) >> 2) | ((msg[3] & 0xE0) >> 5));

602 
r
 = (
msg
[3] & 0x1F);

608 
cc
->
r_shouldî
 = (()
r
 / 0x1F);

609 
cc
->
l_shouldî
 = (()
l
 / 0x1F);

612 
lx
 = (
msg
[0] & 0x3F);

613 
ly
 = (
msg
[1] & 0x3F);

614 
rx
 = ((
msg
[0] & 0xC0) >> 3) | ((msg[1] & 0xC0) >> 5) | ((msg[2] & 0x80) >> 7);

615 
ry
 = (
msg
[2] & 0x1F);

617 if(
WIIMOTE_DBG
)

618 
	`¥ötf
("%d %d %d %d\n",
lx
,
ly
,
rx
,
ry
);

620 
	`ˇlc_joy°ick_°©e
(&
cc
->
ljs
, 
lx
, 
ly
);

621 
	`ˇlc_joy°ick_°©e
(&
cc
->
rjs
, 
rx
, 
ry
);

631 
	}
}

640 
	$˛assic_˘æ_¥es£d_buâ⁄s
(
˛assic_˘æ_t
* 
cc
, 
now
) {

642 
now
 = ~now & 
CLASSIC_CTRL_BUTTON_ALL
;

645 
cc
->
bäs
 = 
now
;

646 
	}
}

655 
	$ˇlc_joy°ick_°©e
(
joy°ick_t
* 
js
, 
x
, 
y
) {

656 
rx
, 
ry
, 
™g
;

674 i‡(
x
 =
js
->
˚¡î
.x)

675 
rx
 = 0;

676 i‡(
x
 >
js
->
˚¡î
.x)

677 
rx
 = (()(
x
 - 
js
->
˚¡î
.xË/ ()(js->
max
.x - js->center.x));

679 
rx
 = (()(
x
 - 
js
->
mö
.xË/ ()(js->
˚¡î
.x - js->min.x)) - 1.0f;

681 i‡(
y
 =
js
->
˚¡î
.y)

682 
ry
 = 0;

683 i‡(
y
 >
js
->
˚¡î
.y)

684 
ry
 = (()(
y
 - 
js
->
˚¡î
.yË/ ()(js->
max
.y - js->center.y));

686 
ry
 = (()(
y
 - 
js
->
mö
.yË/ ()(js->
˚¡î
.y - js->min.y)) - 1.0f;

689 
™g
 = 
	`RAD_TO_DEGREE
(
	`©™f
(
ry
 / 
rx
));

690 
™g
 -= 90.0f;

691 i‡(
rx
 < 0.0f)

692 
™g
 -= 180.0f;

693 
js
->
™g
 = 
	`absf
(ang);

694 
js
->
mag
 = (Ë
	`sqπ
((
rx
 *ÑxË+ (
ry
 *Ñy));

695 
js
->
rx
 =Ñx;

696 
js
->
ry
 =Ñy;

698 
	}
}

702 
joy_™Æog_x
[4];

703 
joy_™Æog_y
[4];

705 
	$iOS_wiimŸe_check
 (
wiimŸe_t
 *
wm
){

707 
joy_™Æog_x
[
wm
->
unid
]=0.0f;

708 
joy_™Æog_y
[
wm
->
unid
]=0.0f;

709 
joyExKey
 = 0;

710 
m4Æl_exôGame
 = 0;

713 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_A
)Ë{
joyExKey
 |
GP2X_A
;}

714 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_B
)Ë{
joyExKey
 |
GP2X_Y
;}

716 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_UP
)Ë{
joyExKey
 |
GP2X_LEFT
;}

717 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_DOWN
)Ë{
joyExKey
 |
GP2X_RIGHT
;}

719 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_LEFT
)) {

720 if(!
STICK2WAY
 &&

721 !(
STICK4WAY
 && (
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_UP
) ||

722 (
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_DOWN
)))))

723 
joyExKey
 |
GP2X_DOWN
;

725 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_RIGHT
)) {

726 if(!
STICK2WAY
 &&

727 !(
STICK4WAY
 && (
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_UP
) ||

728 (
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_DOWN
)))))

729 
joyExKey
 |
GP2X_UP
;

732 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_MINUS
)Ë{
joyExKey
 |
GP2X_SELECT
;}

733 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_PLUS
)Ë{
joyExKey
 |
GP2X_START
;}

734 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_ONE
)Ë{
joyExKey
 |
GP2X_X
;}

735 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_TWO
)Ë{
joyExKey
 |
GP2X_B
;}

736 i‡(
	`IS_PRESSED
(
wm
, 
WIIMOTE_BUTTON_HOME
)) {

739 
m4Æl_exôGame
 = 1;}

741 i‡(
wm
->
exp
.
ty≥
 =
EXP_CLASSIC
) {

743 
dódZ⁄e
;

745 
m4Æl_wiiDódZ⁄eVÆue
)

747 0: 
dódZ⁄e
 = 0.12f;;

748 1: 
dódZ⁄e
 = 0.15f;;

749 2: 
dódZ⁄e
 = 0.17f;;

750 3: 
dódZ⁄e
 = 0.2f;;

751 4: 
dódZ⁄e
 = 0.3f;;

752 5: 
dódZ⁄e
 = 0.4f;;

757 
˛assic_˘æ_t
* 
cc
 = (˛assic_˘æ_t*)&
wm
->
exp
.
˛assic
;

759 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_ZL
)Ë
joyExKey
 |
GP2X_R
;

760 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_B
)Ë
joyExKey
 |
GP2X_X
;

761 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_Y
)Ë
joyExKey
 |
GP2X_A
;

762 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_A
)Ë
joyExKey
 |
GP2X_B
;

763 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_X
)Ë
joyExKey
 |
GP2X_Y
;

764 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_ZR
)Ë
joyExKey
 |
GP2X_L
;

767 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_UP
)){

768 if(!
STICK2WAY
 &&

769 !(
STICK4WAY
 && (
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_LEFT
) ||

770 (
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_RIGHT
)))))

771 
joyExKey
 |
GP2X_UP
;

773 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_DOWN
)){

774 if(!
STICK2WAY
 &&

775 !(
STICK4WAY
 && (
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_LEFT
) ||

776 (
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_RIGHT
)))))

777 
joyExKey
 |
GP2X_DOWN
;

779 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_LEFT
)Ë
joyExKey
 |
GP2X_LEFT
;

780 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_RIGHT
)Ë
joyExKey
 |
GP2X_RIGHT
;

783 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_FULL_L
)Ë
joyExKey
 |
GP2X_L
;

784 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_MINUS
)Ë
joyExKey
 |
GP2X_SELECT
;

785 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_HOME
)) {

786 
m4Æl_exôGame
 = 1;}

787 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_PLUS
)Ë
joyExKey
 |
GP2X_START
;

788 i‡(
	`IS_PRESSED
(
cc
, 
CLASSIC_CTRL_BUTTON_FULL_R
)Ë
joyExKey
 |
GP2X_R
;

790 if(
cc
->
ljs
.
mag
 >
dódZ⁄e
)

792 
joy_™Æog_x
[
wm
->
unid
] = 
cc
->
ljs
.
rx
;

793 
joy_™Æog_y
[
wm
->
unid
] = 
cc
->
ljs
.
ry
;

795 
v
 = 
cc
->
ljs
.
™g
;

797 if(
STICK2WAY
)

799 if–
v
 < 180){

800 
joyExKey
 |
GP2X_RIGHT
;

803 i‡–
v
 >= 180){

804 
joyExKey
 |
GP2X_LEFT
;

808 if(
STICK4WAY
)

810 if(
v
 >= 315 || v < 45){

811 
joyExKey
 |
GP2X_UP
;

814 i‡(
v
 >= 45 && v < 135){

815 
joyExKey
 |
GP2X_RIGHT
;

818 i‡(
v
 >= 135 && v < 225){

819 
joyExKey
 |
GP2X_DOWN
;

822 i‡(
v
 >= 225 && v < 315){

823 
joyExKey
 |
GP2X_LEFT
;

829 if–
v
 >= 330 || v < 30){

830 
joyExKey
 |
GP2X_UP
;

833 i‡–
v
 >= 30 && v <60 ) {

834 
joyExKey
 |
GP2X_UP
;joyExKey |
GP2X_RIGHT
;

837 i‡–
v
 >= 60 && v < 120 ){

838 
joyExKey
 |
GP2X_RIGHT
;

841 i‡–
v
 >= 120 && v < 150 ){

842 
joyExKey
 |
GP2X_RIGHT
;joyExKey |
GP2X_DOWN
;

845 i‡–
v
 >= 150 && v < 210 ){

846 
joyExKey
 |
GP2X_DOWN
;

849 i‡–
v
 >= 210 && v < 240 ){

850 
joyExKey
 |
GP2X_DOWN
;joyExKey |
GP2X_LEFT
;

853 i‡–
v
 >= 240 && v < 300 ){

854 
joyExKey
 |
GP2X_LEFT
;

857 i‡–
v
 >= 300 && v < 330 ){

858 
joyExKey
 |
GP2X_LEFT
;

859 
joyExKey
 |
GP2X_UP
;

865 if(
cc
->
rjs
.
mag
 >
dódZ⁄e
)

867 
v
 = 
cc
->
rjs
.
™g
;

869 if–
v
 >= 330 || v < 30){

870 
joyExKey
 |
GP2X_Y
;

873 i‡–
v
 >= 30 && v <60 ) {

874 
joyExKey
 |
GP2X_Y
;joyExKey |
GP2X_B
;

877 i‡–
v
 >= 60 && v < 120 ){

878 
joyExKey
 |
GP2X_B
;

881 i‡–
v
 >= 120 && v < 150 ){

882 
joyExKey
 |
GP2X_B
;joyExKey |
GP2X_X
;

885 i‡–
v
 >= 150 && v < 210 ){

886 
joyExKey
 |
GP2X_X
;

889 i‡–
v
 >= 210 && v < 240 ){

890 
joyExKey
 |
GP2X_X
;joyExKey |
GP2X_A
;

893 i‡–
v
 >= 240 && v < 300 ){

894 
joyExKey
 |
GP2X_A
;

897 i‡–
v
 >= 300 && v < 330 ){

898 
joyExKey
 |
GP2X_A
;joyExKey |
GP2X_Y
;

915  
joyExKey
;

917 
joyExKey
 = 0;

918  
joyExKey
;

920 
	}
}

	@wiimote.h

41 #i‚de‡
__WIIMOTE_H__


42 
	#__WIIMOTE_H__


	)

45 #i‡
deföed
(
__˝lu•lus
)

49 
	tbyã
;

50 
	tsbyã
;

52 
	#WIIMOTE_PI
 3.14159265

	)

54 
	#WIIMOTE_DBG
 0

	)

57 
	#RAD_TO_DEGREE
(
r
Ë(‘ * 180.0fË/ 
WIIMOTE_PI
)

	)

58 
	#DEGREE_TO_RAD
(
d
Ë(d * (
WIIMOTE_PI
 / 180.0f))

	)

61 
	#BIG_ENDIAN_LONG
(
i
Ë(
	`ht⁄l
(i))

	)

62 
	#BIG_ENDIAN_SHORT
(
i
Ë(
	`ht⁄s
(i))

	)

64 
	#absf
(
x
Ë((x >0Ë? (xË: (x * -1.0f))

	)

65 
	#diff_f
(
x
, 
y
Ë((x >yË? (
	`absf
(x - y)Ë: (absf(y - x)))

	)

68 
	#WIIMOTE_STATE_DEV_FOUND
 0x0001

	)

69 
	#WIIMOTE_STATE_HANDSHAKE
 0x0002

	)

70 
	#WIIMOTE_STATE_HANDSHAKE_COMPLETE
 0x0004

	)

71 
	#WIIMOTE_STATE_CONNECTED
 0x0008

	)

72 
	#WIIMOTE_STATE_EXP
 0x0040

	)

75 
	#WM_OUTPUT_CHANNEL
 0x11

	)

76 
	#WM_INPUT_CHANNEL
 0x13

	)

78 
	#WM_SET_REPORT
 0x50

	)

81 
	#WM_CMD_LED
 0x11

	)

82 
	#WM_CMD_REPORT_TYPE
 0x12

	)

83 
	#WM_CMD_RUMBLE
 0x13

	)

84 
	#WM_CMD_IR
 0x13

	)

85 
	#WM_CMD_CTRL_STATUS
 0x15

	)

86 
	#WM_CMD_WRITE_DATA
 0x16

	)

87 
	#WM_CMD_READ_DATA
 0x17

	)

88 
	#WM_CMD_IR_2
 0x1A

	)

91 
	#WM_RPT_CTRL_STATUS
 0x20

	)

92 
	#WM_RPT_READ
 0x21

	)

93 
	#WM_RPT_WRITE
 0x22

	)

94 
	#WM_RPT_BTN
 0x30

	)

95 
	#WM_RPT_BTN_ACC
 0x31

	)

96 
	#WM_RPT_BTN_ACC_IR
 0x33

	)

97 
	#WM_RPT_BTN_EXP
 0x34

	)

98 
	#WM_RPT_BTN_ACC_EXP
 0x35

	)

99 
	#WM_RPT_BTN_IR_EXP
 0x36

	)

100 
	#WM_RPT_BTN_ACC_IR_EXP
 0x37

	)

102 
	#WM_BT_INPUT
 0x01

	)

103 
	#WM_BT_OUTPUT
 0x02

	)

106 
	#WM_MAX_BATTERY_CODE
 0xC8

	)

108 
	#EXP_ID_CODE_CLASSIC_CONTROLLER
 0x9A1EFDFD

	)

111 
	#WM_MEM_OFFSET_CALIBRATION
 0x16

	)

112 
	#WM_EXP_MEM_BASE
 0x04A40000

	)

113 
	#WM_EXP_MEM_ENABLE
 0x04A40040

	)

114 
	#WM_EXP_MEM_CALIBR
 0x04A40020

	)

116 
	#EXP_HANDSHAKE_LEN
 224

	)

120 
	#WM_CTRL_STATUS_BYTE1_ATTACHMENT
 0x02

	)

121 
	#WM_CTRL_STATUS_BYTE1_SPEAKER_ENABLED
 0x04

	)

122 
	#WM_CTRL_STATUS_BYTE1_IR_ENABLED
 0x08

	)

123 
	#WM_CTRL_STATUS_BYTE1_LED_1
 0x10

	)

124 
	#WM_CTRL_STATUS_BYTE1_LED_2
 0x20

	)

125 
	#WM_CTRL_STATUS_BYTE1_LED_3
 0x40

	)

126 
	#WM_CTRL_STATUS_BYTE1_LED_4
 0x80

	)

129 
	#WIIMOTE_LED_NONE
 0x00

	)

130 
	#WIIMOTE_LED_1
 0x10

	)

131 
	#WIIMOTE_LED_2
 0x20

	)

132 
	#WIIMOTE_LED_3
 0x40

	)

133 
	#WIIMOTE_LED_4
 0x80

	)

136 
	#WIIMOTE_BUTTON_TWO
 0x0001

	)

137 
	#WIIMOTE_BUTTON_ONE
 0x0002

	)

138 
	#WIIMOTE_BUTTON_B
 0x0004

	)

139 
	#WIIMOTE_BUTTON_A
 0x0008

	)

140 
	#WIIMOTE_BUTTON_MINUS
 0x0010

	)

141 
	#WIIMOTE_BUTTON_ZACCEL_BIT6
 0x0020

	)

142 
	#WIIMOTE_BUTTON_ZACCEL_BIT7
 0x0040

	)

143 
	#WIIMOTE_BUTTON_HOME
 0x0080

	)

144 
	#WIIMOTE_BUTTON_LEFT
 0x0100

	)

145 
	#WIIMOTE_BUTTON_RIGHT
 0x0200

	)

146 
	#WIIMOTE_BUTTON_DOWN
 0x0400

	)

147 
	#WIIMOTE_BUTTON_UP
 0x0800

	)

148 
	#WIIMOTE_BUTTON_PLUS
 0x1000

	)

149 
	#WIIMOTE_BUTTON_ZACCEL_BIT4
 0x2000

	)

150 
	#WIIMOTE_BUTTON_ZACCEL_BIT5
 0x4000

	)

151 
	#WIIMOTE_BUTTON_UNKNOWN
 0x8000

	)

152 
	#WIIMOTE_BUTTON_ALL
 0x1F9F

	)

155 
	#CLASSIC_CTRL_BUTTON_UP
 0x0001

	)

156 
	#CLASSIC_CTRL_BUTTON_LEFT
 0x0002

	)

157 
	#CLASSIC_CTRL_BUTTON_ZR
 0x0004

	)

158 
	#CLASSIC_CTRL_BUTTON_X
 0x0008

	)

159 
	#CLASSIC_CTRL_BUTTON_A
 0x0010

	)

160 
	#CLASSIC_CTRL_BUTTON_Y
 0x0020

	)

161 
	#CLASSIC_CTRL_BUTTON_B
 0x0040

	)

162 
	#CLASSIC_CTRL_BUTTON_ZL
 0x0080

	)

163 
	#CLASSIC_CTRL_BUTTON_FULL_R
 0x0200

	)

164 
	#CLASSIC_CTRL_BUTTON_PLUS
 0x0400

	)

165 
	#CLASSIC_CTRL_BUTTON_HOME
 0x0800

	)

166 
	#CLASSIC_CTRL_BUTTON_MINUS
 0x1000

	)

167 
	#CLASSIC_CTRL_BUTTON_FULL_L
 0x2000

	)

168 
	#CLASSIC_CTRL_BUTTON_DOWN
 0x4000

	)

169 
	#CLASSIC_CTRL_BUTTON_RIGHT
 0x8000

	)

170 
	#CLASSIC_CTRL_BUTTON_ALL
 0xFEFF

	)

173 
	#EXP_NONE
 0

	)

174 
	#EXP_CLASSIC
 2

	)

180 
	svec2b_t
 {

181 
byã
 
x
, 
y
;

182 } 
	tvec2b_t
;

199 
	sjoy°ick_t
 {

200 
vec2b_t
 
max
;

201 
vec2b_t
 
mö
;

202 
vec2b_t
 
˚¡î
;

204 
™g
;

205 
mag
;

206 
rx
, 
ry
;

207 } 
	tjoy°ick_t
;

213 
	s˛assic_˘æ_t
 {

214 
bäs
;

216 
r_shouldî
;

217 
l_shouldî
;

219 
joy°ick_t
 
ljs
;

220 
joy°ick_t
 
rjs
;

221 } 
	t˛assic_˘æ_t
;

227 
	sex∑nsi⁄_t
 {

228 
ty≥
;

231 
˛assic_˘æ_t
 
˛assic
;

233 } 
	tex∑nsi⁄_t
;

239 
	swiimŸe_t
 {

240 
unid
;

242 
uöt16_t
 
wiiMŸeC⁄H™dÀ
;

243 
uöt16_t
 
i_sour˚_cid
;

244 
uöt16_t
 
c_sour˚_cid
;

247 
°©e
;

248 
byã
 
Àds
;

249 
b©ãry_Àvñ
;

251 
byã
 
h™dshake_°©e
;

253 
ex∑nsi⁄_t
 
exp
;

255 
bäs
;

256 } 
	twiimŸe
;

264 
	#IS_PRESSED
(
dev
, 
buâ⁄
Ë((dev->
bäs
 & buâ⁄Ë=buâ⁄)

	)

267 
	#WIIMOTE_IS_SET
(
wm
, 
s
Ë((wm->
°©e
 & (s)Ë=(s))

	)

268 
	#WIIMOTE_ENABLE_STATE
(
wm
, 
s
Ë(wm->
°©e
 |(s))

	)

269 
	#WIIMOTE_DISABLE_STATE
(
wm
, 
s
Ë(wm->
°©e
 &~(s))

	)

270 
	#WIIMOTE_TOGGLE_STATE
(
wm
, 
s
Ë((wm->
°©e
 & (s)Ë? 
	`WIIMOTE_DISABLE_STATE
(wm, sË: 
	`WIIMOTE_ENABLE_STATE
(wm, s))

	)

272 
	#WIIMOTE_IS_CONNECTED
(
wm
Ë(
	`WIIMOTE_IS_SET
(wm, 
WIIMOTE_STATE_CONNECTED
))

	)

274 
wiimŸe_t
 
joys
[4];

275 
num_of_joys
;

279 
iOS_wiimŸe_check
 (
wiimŸe_t
 *
wm
);

281 
wiimŸe_t
* 
wiimŸe_gë_by_sour˚_cid
(
uöt16_t
 
sour˚_cid
);

282 
wiimŸe_h™dshake
(
wiimŸe_t
* 
wm
, 
byã
 
evít
, byã* 
d©a
, 
Àn
);

283 
wiimŸe_°©us
(
wiimŸe_t
* 
wm
);

284 
wiimŸe_d©a_ªp‹t
(
wiimŸe_t
* 
wm
, 
byã
 
ty≥
);

285 
wiimŸe_¥es£d_buâ⁄s
(
wiimŸe_t
* 
wm
, 
byã
* 
msg
);

286 
wiimŸe_h™dÀ_ex∑nsi⁄
(
wiimŸe_t
* 
wm
, 
byã
* 
msg
);

289 #i‡
deföed
(
__˝lu•lus
)

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


123 #unde‡
__MATHDECL_1


124 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

125 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

126 
¨gs
, 
Æüs
)

	)

127 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

128 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
,

206 
	#FP_NAN
 
FP_NAN


	)

207 
FP_INFINITE
,

208 
	#FP_INFINITE
 
FP_INFINITE


	)

209 
FP_ZERO
,

210 
	#FP_ZERO
 
FP_ZERO


	)

211 
FP_SUBNORMAL
,

212 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

213 
FP_NORMAL


214 
	#FP_NORMAL
 
FP_NORMAL


	)

218 #ifde‡
__NO_LONG_DOUBLE_MATH


219 
	#Â˛assify
(
x
) \

220 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

222 
	#Â˛assify
(
x
) \

223 ( (
x
) ==  () \

224 ? 
	`__Â˛assifyf
 (
x
) \

225 :  (
x
) ==  () \

226 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

230 #ifde‡
__NO_LONG_DOUBLE_MATH


231 
	#signbô
(
x
) \

232 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

234 
	#signbô
(
x
) \

235 ( (
x
) ==  () \

236 ? 
	`__signbôf
 (
x
) \

237 :  (
x
) ==  () \

238 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

242 #ifde‡
__NO_LONG_DOUBLE_MATH


243 
	#isföôe
(
x
) \

244 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

246 
	#isföôe
(
x
) \

247 ( (
x
) ==  () \

248 ? 
	`__föôef
 (
x
) \

249 :  (
x
) ==  () \

250 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

254 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

258 #ifde‡
__NO_LONG_DOUBLE_MATH


259 
	#i¢™
(
x
) \

260 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

262 
	#i¢™
(
x
) \

263 ( (
x
) ==  () \

264 ? 
	`__i¢™f
 (
x
) \

265 :  (
x
) ==  () \

266 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

270 #ifde‡
__NO_LONG_DOUBLE_MATH


271 
	#isöf
(
x
) \

272 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

274 
	#isöf
(
x
) \

275 ( (
x
) ==  () \

276 ? 
	`__isöff
 (
x
) \

277 :  (
x
) ==  () \

278 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

282 
	#MATH_ERRNO
 1

	)

283 
	#MATH_ERREXCEPT
 2

	)

288 #i‚de‡
__FAST_MATH__


289 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

294 #ifdef 
__USE_MISC


298 
_IEEE_
 = -1,

299 
_SVID_
,

300 
_XOPEN_
,

301 
_POSIX_
,

302 
_ISOC_


303 } 
	t_LIB_VERSION_TYPE
;

308 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

312 #ifde‡
__USE_SVID


318 #ifde‡
__˝lu•lus


319 
__ex˚±i⁄


321 
ex˚±i⁄


324 
ty≥
;

325 *
«me
;

326 
¨g1
;

327 
¨g2
;

328 
ªtvÆ
;

329 
	}
};

331 #ifde‡
__˝lu•lus


332 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

334 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

337 
	#X_TLOSS
 1.41484755040568800000e+16

	)

340 
	#DOMAIN
 1

	)

341 
	#SING
 2

	)

342 
	#OVERFLOW
 3

	)

343 
	#UNDERFLOW
 4

	)

344 
	#TLOSS
 5

	)

345 
	#PLOSS
 6

	)

348 
	#HUGE
 3.40282347e+38F

	)

352 #ifde‡
__USE_XOPEN


354 
	#MAXFLOAT
 3.40282347e+38F

	)

361 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


362 
	#M_E
 2.7182818284590452354

	)

363 
	#M_LOG2E
 1.4426950408889634074

	)

364 
	#M_LOG10E
 0.43429448190325182765

	)

365 
	#M_LN2
 0.69314718055994530942

	)

366 
	#M_LN10
 2.30258509299404568402

	)

367 
	#M_PI
 3.14159265358979323846

	)

368 
	#M_PI_2
 1.57079632679489661923

	)

369 
	#M_PI_4
 0.78539816339744830962

	)

370 
	#M_1_PI
 0.31830988618379067154

	)

371 
	#M_2_PI
 0.63661977236758134308

	)

372 
	#M_2_SQRTPI
 1.12837916709551257390

	)

373 
	#M_SQRT2
 1.41421356237309504880

	)

374 
	#M_SQRT1_2
 0.70710678118654752440

	)

380 #ifde‡
__USE_GNU


381 
	#M_El
 2.7182818284590452353602874713526625L

	)

382 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

383 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

384 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

385 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

386 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

387 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

388 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

389 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

390 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

391 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

392 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

393 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

400 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


401 
	#__NO_MATH_INLINES
 1

	)

404 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

411 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

412 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

413 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

414 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

415 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

416 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

420 #ifde‡
__USE_EXTERN_INLINES


421 
	~<bôs/m©hölöe.h
>

426 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

427 
	~<bôs/m©h-föôe.h
>

430 #ifde‡
__USE_ISOC99


434 #i‚de‡
isgª©î


435 
	#isgª©î
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

442 #i‚de‡
isgª©îequÆ


443 
	#isgª©îequÆ
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

450 #i‚de‡
i¶ess


451 
	#i¶ess
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

458 #i‚de‡
i¶es£quÆ


459 
	#i¶es£quÆ
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

466 #i‚de‡
i¶essgª©î


467 
	#i¶essgª©î
(
x
, 
y
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

470 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

474 #i‚de‡
isun‹dîed


475 
	#isun‹dîed
(
u
, 
v
) \

476 (
__exãnsi⁄__
 \

477 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

478 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

483 
	g__END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/errno.h

1 
	~<î∫o.h
>

	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.3.4"

	)

41 
	#ZLIB_VERNUM
 0x1234

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 3

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

165 
	#Z_NO_FLUSH
 0

	)

166 
	#Z_PARTIAL_FLUSH
 1

	)

167 
	#Z_SYNC_FLUSH
 2

	)

168 
	#Z_FULL_FLUSH
 3

	)

169 
	#Z_FINISH
 4

	)

170 
	#Z_BLOCK
 5

	)

171 
	#Z_TREES
 6

	)

174 
	#Z_OK
 0

	)

175 
	#Z_STREAM_END
 1

	)

176 
	#Z_NEED_DICT
 2

	)

177 
	#Z_ERRNO
 (-1)

	)

178 
	#Z_STREAM_ERROR
 (-2)

	)

179 
	#Z_DATA_ERROR
 (-3)

	)

180 
	#Z_MEM_ERROR
 (-4)

	)

181 
	#Z_BUF_ERROR
 (-5)

	)

182 
	#Z_VERSION_ERROR
 (-6)

	)

187 
	#Z_NO_COMPRESSION
 0

	)

188 
	#Z_BEST_SPEED
 1

	)

189 
	#Z_BEST_COMPRESSION
 9

	)

190 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

193 
	#Z_FILTERED
 1

	)

194 
	#Z_HUFFMAN_ONLY
 2

	)

195 
	#Z_RLE
 3

	)

196 
	#Z_FIXED
 4

	)

197 
	#Z_DEFAULT_STRATEGY
 0

	)

200 
	#Z_BINARY
 0

	)

201 
	#Z_TEXT
 1

	)

202 
	#Z_ASCII
 
Z_TEXT


	)

203 
	#Z_UNKNOWN
 2

	)

206 
	#Z_DEFLATED
 8

	)

209 
	#Z_NULL
 0

	)

211 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

351 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

390 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

498 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

574 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

575 c⁄° 
Byãf
 *
di˘i⁄¨y
,

576 
uI¡
 
di˘Lígth
));

613 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

614 
z_°ªamp
 
sour˚
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

642 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

643 
Àvñ
,

644 
°øãgy
));

663 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

664 
good_Àngth
,

665 
max_œzy
,

666 
ni˚_Àngth
,

667 
max_chaö
));

680 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

681 
uL⁄g
 
sour˚Lí
));

690 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

691 
bôs
,

692 
vÆue
));

706 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

707 
gz_hódîp
 
hód
));

777 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

778 c⁄° 
Byãf
 *
di˘i⁄¨y
,

779 
uI¡
 
di˘Lígth
));

799 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

814 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

815 
z_°ªamp
 
sour˚
));

830 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

840 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

841 
wödowBôs
));

852 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

853 
bôs
,

854 
vÆue
));

873 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

901 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

902 
gz_hódîp
 
hód
));

963 (*
ö_func
Ë
	tOF
((
	tFAR
 *, FAR * FAR *));

964 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

966 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

967 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

968 
out_func
 
out
, 
FAR
 *
out_desc
));

1035 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1043 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1095 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1096 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1110 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1111 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1112 
Àvñ
));

1126 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1133 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1134 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1152 
voidp
 
	tgzFûe
;

1172 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1185 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1193 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1201 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1202 
voidpc
 
buf
, 
Àn
));

1209 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
OF
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1222 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1229 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1238 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1244 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1250 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1260 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1289 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1306 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1312 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1318 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1326 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1338 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1353 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1379 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1411 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1412 c⁄° *
vîsi⁄
, 
°ªam_size
));

1413 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1414 c⁄° *
vîsi⁄
, 
°ªam_size
));

1415 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1416 
wödowBôs
, 
memLevñ
,

1417 
°øãgy
, c⁄° *
vîsi⁄
,

1418 
°ªam_size
));

1419 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1420 c⁄° *
vîsi⁄
, 
°ªam_size
));

1421 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1422 
FAR
 *
wödow
,

1423 c⁄° *
vîsi⁄
,

1424 
°ªam_size
));

1425 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1426 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1427 
	#öÊ©eInô
(
°rm
) \

1428 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1429 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1430 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1431 (
°øãgy
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1432 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1433 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, (
z_°ªam
))

	)

1434 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1435 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1436 
ZLIB_VERSION
, (
z_°ªam
))

	)

1438 #i‡
deföed
(
_LARGEFILE64_SOURCE
)

1439 
	#z_off64_t
 
off64_t


	)

1441 #i‡
_FILE_OFFSET_BITS
 == 64

1442 
	#z_off64_t
 
off_t


	)

1446 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë|| 
_FILE_OFFSET_BITS
 == 64

1447 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1448 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1449 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1450 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1451 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1454 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& 
_FILE_OFFSET_BITS
 == 64

1455 
	#gz›í
 
gz›í64


	)

1456 
	#gz£ek
 
gz£ek64


	)

1457 
	#gzãŒ
 
gzãŒ64


	)

1458 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1459 
	#¸c32_comböe
 
¸c32_comböe64


	)

1460 #i‚de‡
_LARGEFILE64_SOURCE


1461 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1462 
ZEXTERN
 
off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, off_t, ));

1463 
ZEXTERN
 
off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1464 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
off_t
));

1465 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
off_t
));

1468 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1469 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1470 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1471 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1472 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1475 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1476 
	söã∫Æ_°©e
 {
dummy
;};

1479 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1480 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1481 
ZEXTERN
 c⁄° 
uL⁄gf
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1482 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1484 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

57 
	#O_PATH
 010000000

	)

63 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


64 
	#O_DSYNC
 010000

	)

65 
	#O_RSYNC
 
O_SYNC


	)

68 #ifde‡
__USE_LARGEFILE64


69 #i‡
__WORDSIZE
 == 64

70 
	#O_LARGEFILE
 0

	)

72 
	#O_LARGEFILE
 0100000

	)

77 
	#F_DUPFD
 0

	)

78 
	#F_GETFD
 1

	)

79 
	#F_SETFD
 2

	)

80 
	#F_GETFL
 3

	)

81 
	#F_SETFL
 4

	)

82 #i‡
__WORDSIZE
 == 64

83 
	#F_GETLK
 5

	)

84 
	#F_SETLK
 6

	)

85 
	#F_SETLKW
 7

	)

87 
	#F_GETLK64
 5

	)

88 
	#F_SETLK64
 6

	)

89 
	#F_SETLKW64
 7

	)

91 #i‚de‡
__USE_FILE_OFFSET64


92 
	#F_GETLK
 5

	)

93 
	#F_SETLK
 6

	)

94 
	#F_SETLKW
 7

	)

96 
	#F_GETLK
 
F_GETLK64


	)

97 
	#F_SETLK
 
F_SETLK64


	)

98 
	#F_SETLKW
 
F_SETLKW64


	)

100 
	#F_GETLK64
 12

	)

101 
	#F_SETLK64
 13

	)

102 
	#F_SETLKW64
 14

	)

105 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


106 
	#F_SETOWN
 8

	)

107 
	#F_GETOWN
 9

	)

110 #ifde‡
__USE_GNU


111 
	#F_SETSIG
 10

	)

112 
	#F_GETSIG
 11

	)

113 
	#F_SETOWN_EX
 15

	)

114 
	#F_GETOWN_EX
 16

	)

117 #ifde‡
__USE_GNU


118 
	#F_SETLEASE
 1024

	)

119 
	#F_GETLEASE
 1025

	)

120 
	#F_NOTIFY
 1026

	)

121 
	#F_SETPIPE_SZ
 1031

	)

122 
	#F_GETPIPE_SZ
 1032

	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#F_DUPFD_CLOEXEC
 1030

	)

130 
	#FD_CLOEXEC
 1

	)

133 
	#F_RDLCK
 0

	)

134 
	#F_WRLCK
 1

	)

135 
	#F_UNLCK
 2

	)

138 
	#F_EXLCK
 4

	)

139 
	#F_SHLCK
 8

	)

141 #ifde‡
__USE_BSD


143 
	#LOCK_SH
 1

	)

144 
	#LOCK_EX
 2

	)

145 
	#LOCK_NB
 4

	)

147 
	#LOCK_UN
 8

	)

150 #ifde‡
__USE_GNU


151 
	#LOCK_MAND
 32

	)

152 
	#LOCK_READ
 64

	)

153 
	#LOCK_WRITE
 128

	)

154 
	#LOCK_RW
 192

	)

157 #ifde‡
__USE_GNU


159 
	#DN_ACCESS
 0x00000001

	)

160 
	#DN_MODIFY
 0x00000002

	)

161 
	#DN_CREATE
 0x00000004

	)

162 
	#DN_DELETE
 0x00000008

	)

163 
	#DN_RENAME
 0x00000010

	)

164 
	#DN_ATTRIB
 0x00000020

	)

165 
	#DN_MULTISHOT
 0x80000000

	)

168 
	sÊock


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
__off_t
 
	ml_°¨t
;

174 
__off_t
 
	ml_Àn
;

176 
__off64_t
 
	ml_°¨t
;

177 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

182 #ifde‡
__USE_LARGEFILE64


183 
	sÊock64


185 
	ml_ty≥
;

186 
	ml_whí˚
;

187 
__off64_t
 
	ml_°¨t
;

188 
__off64_t
 
	ml_Àn
;

189 
__pid_t
 
	ml_pid
;

193 #ifde‡
__USE_GNU


195 
	e__pid_ty≥


197 
	mF_OWNER_TID
 = 0,

198 
	mF_OWNER_PID
,

199 
	mF_OWNER_PGRP
,

200 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


204 
	sf_ow√r_ex


206 
__pid_ty≥
 
	mty≥
;

207 
__pid_t
 
	mpid
;

213 #ifdef 
__USE_BSD


214 
	#FAPPEND
 
O_APPEND


	)

215 
	#FFSYNC
 
O_FSYNC


	)

216 
	#FASYNC
 
O_ASYNC


	)

217 
	#FNONBLOCK
 
O_NONBLOCK


	)

218 
	#FNDELAY
 
O_NDELAY


	)

222 #ifde‡
__USE_XOPEN2K


223 
	#POSIX_FADV_NORMAL
 0

	)

224 
	#POSIX_FADV_RANDOM
 1

	)

225 
	#POSIX_FADV_SEQUENTIAL
 2

	)

226 
	#POSIX_FADV_WILLNEED
 3

	)

227 
	#POSIX_FADV_DONTNEED
 4

	)

228 
	#POSIX_FADV_NOREUSE
 5

	)

232 #ifde‡
__USE_GNU


234 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

237 
	#SYNC_FILE_RANGE_WRITE
 2

	)

240 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

245 
	#SPLICE_F_MOVE
 1

	)

246 
	#SPLICE_F_NONBLOCK
 2

	)

249 
	#SPLICE_F_MORE
 4

	)

250 
	#SPLICE_F_GIFT
 8

	)

254 
	sfûe_h™dÀ


256 
	mh™dÀ_byãs
;

257 
	mh™dÀ_ty≥
;

259 
	mf_h™dÀ
[0];

263 
	#MAX_HANDLE_SZ
 128

	)

267 #ifde‡
__USE_ATFILE


268 
	#AT_FDCWD
 -100

	)

271 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

272 
	#AT_REMOVEDIR
 0x200

	)

274 
	#AT_SYMLINK_FOLLOW
 0x400

	)

275 
	#AT_NO_AUTOMOUNT
 0x800

	)

277 
	#AT_EMPTY_PATH
 0x1000

	)

278 
	#AT_EACCESS
 0x200

	)

282 
	g__BEGIN_DECLS


284 #ifde‡
__USE_GNU


287 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

288 
__THROW
;

295 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

296 
__Êags
);

303 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

304 
size_t
 
__cou¡
, 
__Êags
);

310 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

311 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

312 
__Êags
);

318 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

319 
__Êags
);

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

330 
__off64_t
 
__Àn
),

331 
ÁŒoˇã64
);

333 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

336 #ifde‡
__USE_LARGEFILE64


337 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

338 
__off64_t
 
__Àn
);

343 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

344 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

345 
__Êags
Ë
__THROW
;

351 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

352 
__Êags
);

356 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

20 #i‚de‡
_MATH_H


25 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

31 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


33 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

34 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

35 #ifde‡
__MATH_DECLARE_LDOUBLE


36 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

41 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

42 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

43 #ifde‡
__MATH_DECLARE_LDOUBLE


44 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

48 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

49 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 
__REDIRECT_NTH
 (
©™2l
, (, ),

52 
__©™2l_föôe
);

55 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


57 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

58 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

59 #ifde‡
__MATH_DECLARE_LDOUBLE


60 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

65 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

66 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

67 #ifde‡
__MATH_DECLARE_LDOUBLE


68 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

72 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

73 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

74 #ifde‡
__MATH_DECLARE_LDOUBLE


75 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

78 #ifde‡
__USE_GNU


80 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

81 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

82 #ifde‡
__MATH_DECLARE_LDOUBLE


83 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

87 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

88 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

89 #ifde‡
__MATH_DECLARE_LDOUBLE


90 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

94 #ifde‡
__USE_ISOC99


96 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

97 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

104 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

105 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

106 #ifde‡
__MATH_DECLARE_LDOUBLE


107 
__REDIRECT_NTH
 (
fmodl
, (, ),

108 
__fmodl_föôe
);

111 #ifde‡
__USE_ISOC99


113 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

114 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

115 #ifde‡
__MATH_DECLARE_LDOUBLE


116 
__REDIRECT_NTH
 (
hypŸl
, (, ),

117 
__hypŸl_föôe
);

121 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


123 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

124 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

125 #ifde‡
__MATH_DECLARE_LDOUBLE


126 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

130 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

131 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

132 #ifde‡
__MATH_DECLARE_LDOUBLE


133 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

137 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

138 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

139 #ifde‡
__MATH_DECLARE_LDOUBLE


140 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

144 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

145 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

151 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

152 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

153 #ifde‡
__MATH_DECLARE_LDOUBLE


154 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

158 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

159 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

165 #ifde‡
__USE_MISC


167 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

168 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

169 #ifde‡
__MATH_DECLARE_LDOUBLE


170 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

171 
__lgammÆ_r_föôe
);

175 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


177 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

179 #ifde‡
__USE_ISOC99


180 
__loˇl_signgam
 = 0;

181  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

183  
	`lgamma_r
 (
__d
, &
signgam
);

185 
	}
}

186 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

188 #ifde‡
__USE_ISOC99


189 
__loˇl_signgam
 = 0;

190  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

192  
	`lgammaf_r
 (
__d
, &
signgam
);

194 
	}
}

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

198 #ifde‡
__USE_ISOC99


199 
__loˇl_signgam
 = 0;

200  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

202  
	`lgammÆ_r
 (
__d
, &
signgam
);

204 
	}
}

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


210 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

212 #ifde‡
__USE_ISOC99


213 
__loˇl_signgam
 = 0;

214  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

216  
	`lgamma_r
 (
__d
, &
signgam
);

218 
	}
}

219 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

221 #ifde‡
__USE_ISOC99


222 
__loˇl_signgam
 = 0;

223  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

225  
	`lgammaf_r
 (
__d
, &
signgam
);

227 
	}
}

228 #ifde‡
__MATH_DECLARE_LDOUBLE


229 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

231 #ifde‡
__USE_ISOC99


232 
__loˇl_signgam
 = 0;

233  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

235  
	`lgammÆ_r
 (
__d
, &
signgam
);

237 
	}
}

242 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

243 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

244 #ifde‡
__MATH_DECLARE_LDOUBLE


245 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

249 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

250 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

251 #ifde‡
__MATH_DECLARE_LDOUBLE


252 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

255 #ifde‡
__USE_ISOC99


257 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

258 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

259 #ifde‡
__MATH_DECLARE_LDOUBLE


260 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

265 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

266 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

267 #ifde‡
__MATH_DECLARE_LDOUBLE


268 
__REDIRECT_NTH
 (
powl
, (, ),

269 
__powl_föôe
);

273 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

274 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

277 
__ªmaödîl_föôe
);

280 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


282 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

283 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

286 
__sˇlbl_föôe
);

291 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

292 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

293 #ifde‡
__MATH_DECLARE_LDOUBLE


294 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

298 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

299 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

300 #ifde‡
__MATH_DECLARE_LDOUBLE


301 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

304 #ifde‡
__USE_ISOC99


306 
__gamma_r_föôe
 (, *);

307 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

309 
__loˇl_signgam
 = 0;

310 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

311  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

312 
	}
}

313 
__gammaf_r_föôe
 (, *);

314 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

316 
__loˇl_signgam
 = 0;

317 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

318  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

319 
	}
}

320 #ifde‡
__MATH_DECLARE_LDOUBLE


321 
__gammÆ_r_föôe
 (, *);

322 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

324 
__loˇl_signgam
 = 0;

325 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

326  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

327 
	}
}

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

117 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

118 
	g_MdoubÀ_END_NAMESPACE


120 #ifde‡
__USE_GNU


122 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

124 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

127 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


128 
__BEGIN_NAMESPACE_C99


130 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

136 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

137 
	g__END_NAMESPACE_C99


140 #ifde‡
__USE_ISOC99


141 
__BEGIN_NAMESPACE_C99


143 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

146 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

147 
	g__END_NAMESPACE_C99


153 
_MdoubÀ_BEGIN_NAMESPACE


155 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

158 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

159 
	g_MdoubÀ_END_NAMESPACE


161 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


162 
__BEGIN_NAMESPACE_C99


164 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

165 
	g__END_NAMESPACE_C99


168 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


169 
__BEGIN_NAMESPACE_C99


171 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

172 
	g__END_NAMESPACE_C99


178 
_MdoubÀ_BEGIN_NAMESPACE


180 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

183 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

186 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

189 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

194 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

198 
	g_MdoubÀ_END_NAMESPACE


200 #ifde‡
__USE_MISC


203 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

206 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

209 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

213 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

216 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


217 
__BEGIN_NAMESPACE_C99


219 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

220 
	g__END_NAMESPACE_C99


223 #ifde‡
__USE_ISOC99


224 
__BEGIN_NAMESPACE_C99


226 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

227 
	g__END_NAMESPACE_C99


232 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

239 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

242 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

244 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


249 
__BEGIN_NAMESPACE_C99


251 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

253 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

254 
	g__END_NAMESPACE_C99


257 #ifde‡
__USE_ISOC99


258 
__BEGIN_NAMESPACE_C99


260 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

261 
	g__END_NAMESPACE_C99


264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

269 #ifde‡
__USE_MISC


273 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

277 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


278 
__BEGIN_NAMESPACE_C99


281 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

284 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

285 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


286 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

290 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

292 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


294 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

298 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

301 #ifde‡
__USE_ISOC99


303 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

307 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

311 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

315 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

320 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

327 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

328 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

343 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


365 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

20 #i‚de‡
_MATH_H


24 
	~<bôs/w‹dsize.h
>

26 #i‚de‡
__exã∫_Æways_ölöe


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

35 #i‡
__GNUC_PREREQ
 (2, 8Ë&& 
deföed
 
__USE_ISOC99


36 
__BEGIN_NAMESPACE_C99


39 
__MATH_INLINE
 

40 
__NTH
 (
	$__signbôf
 (
__x
))

42 #i‡
__WORDSIZE
 == 32

43 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

44  
__u
.
__i
 < 0;

46 
__m
;

47 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

48  
__m
 & 0x8;

50 
	}
}

51 
__MATH_INLINE
 

52 
__NTH
 (
	$__signbô
 (
__x
))

54 #i‡
__WORDSIZE
 == 32

55 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

56  
__u
.
__i
[1] < 0;

58 
__m
;

59 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

60  
__m
 & 0x80;

62 
	}
}

63 
__MATH_INLINE
 

64 
__NTH
 (
	$__signbôl
 (
__x
))

66 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

67  (
__u
.
__i
[2] & 0x8000) != 0;

68 
	}
}

70 
	g__END_NAMESPACE_C99


74 #i‡(
__GNUC_PREREQ
 (2, 8Ë&& !
deföed
 
__NO_MATH_INLINES
 \

75 && 
deföed
 
	g__OPTIMIZE__
)

77 #ifde‡
__USE_ISOC99


78 
	g__BEGIN_NAMESPACE_C99


81 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE_MATH__


82 
__MATH_INLINE
 

83 
__NTH
 (
	$Ãötf
 (
__x
))

85 
__ªs
;

86 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

87  
__ªs
;

88 
	}
}

90 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__


91 
__MATH_INLINE
 

92 
__NTH
 (
	$Ãöt
 (
__x
))

94 
__ªs
;

95 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

96  
__ªs
;

97 
	}
}

99 #i‡
__WORDSIZE
 == 64

100 
__MATH_INLINE
 

101 
__NTH
 (
	$Œrötf
 (
__x
))

103 
__ªs
;

104 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

105  
__ªs
;

106 
	}
}

107 
__MATH_INLINE
 

108 
__NTH
 (
	$Œröt
 (
__x
))

110 
__ªs
;

111 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

112  
__ªs
;

113 
	}
}

116 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

117 && (
	g__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__
)

119 
__MATH_INLINE
 

120 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

122 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

123  
__x
;

124 
	}
}

125 
__MATH_INLINE
 

126 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

128 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

129  
__x
;

130 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

136 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

137  
__x
;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

142 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

143  
__x
;

144 
	}
}

147 
	g__END_NAMESPACE_C99


150 #i‡
deföed
 
__SSE4_1__
 && (
__WORDSIZE
 =64 || deföed 
__SSE2_MATH__
)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__BEGIN_NAMESPACE_C99


155 
__MATH_INLINE
 

156 
__NTH
 (
	$röt
 (
__x
))

158 
__ªs
;

159 
	`__asm
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

160  
__ªs
;

161 
	}
}

162 
__MATH_INLINE
 

163 
__NTH
 (
	$rötf
 (
__x
))

165 
__ªs
;

166 
	`__asm
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

167  
__ªs
;

168 
	}
}

170 #ifde‡
__USE_ISOC99


172 
__MATH_INLINE
 

173 
__NTH
 (
	$√¨byöt
 (
__x
))

175 
__ªs
;

176 
	`__asm
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

177  
__ªs
;

178 
	}
}

179 
__MATH_INLINE
 

180 
__NTH
 (
	$√¨byötf
 (
__x
))

182 
__ªs
;

183 
	`__asm
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

188 
	g__END_NAMESPACE_C99


191 
__BEGIN_NAMESPACE_STD


193 
__MATH_INLINE
 

194 
__NTH
 (
	$˚û
 (
__x
))

196 
__ªs
;

197 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

198  
__ªs
;

199 
	}
}

200 
__END_NAMESPACE_STD


202 
__BEGIN_NAMESPACE_C99


203 
__MATH_INLINE
 

204 
__NTH
 (
	$˚ûf
 (
__x
))

206 
__ªs
;

207 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

208  
__ªs
;

209 
	}
}

210 
__END_NAMESPACE_C99


212 
__BEGIN_NAMESPACE_STD


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Êo‹
 (
__x
))

217 
__ªs
;

218 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

219  
__ªs
;

220 
	}
}

221 
__END_NAMESPACE_STD


223 
__BEGIN_NAMESPACE_C99


224 
__MATH_INLINE
 

225 
__NTH
 (
	$Êo‹f
 (
__x
))

227 
__ªs
;

228 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

229  
__ªs
;

230 
	}
}

231 
	g__END_NAMESPACE_C99


	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


20 
	#_di°_code
 
z__di°_code


	)

21 
	#_Àngth_code
 
z__Àngth_code


	)

22 
	#_å_Æign
 
z__å_Æign


	)

23 
	#_å_Êush_block
 
z__å_Êush_block


	)

24 
	#_å_öô
 
z__å_öô


	)

25 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

26 
	#_å_èŒy
 
z__å_èŒy


	)

27 
	#adÀr32
 
z_adÀr32


	)

28 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

29 
	#com¥ess
 
z_com¥ess


	)

30 
	#com¥ess2
 
z_com¥ess2


	)

31 
	#com¥essBound
 
z_com¥essBound


	)

32 
	#¸c32
 
z_¸c32


	)

33 
	#¸c32_comböe
 
z_¸c32_comböe


	)

34 
	#deÊ©e
 
z_deÊ©e


	)

35 
	#deÊ©eBound
 
z_deÊ©eBound


	)

36 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

37 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

38 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

39 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

40 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

41 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

42 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

43 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

44 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

45 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

46 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

47 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

48 
	#gz˛óªº
 
z_gz˛óªº


	)

49 
	#gz˛o£
 
z_gz˛o£


	)

50 
	#gzdúe˘
 
z_gzdúe˘


	)

51 
	#gzd›í
 
z_gzd›í


	)

52 
	#gzeof
 
z_gzeof


	)

53 
	#gzîr‹
 
z_gzîr‹


	)

54 
	#gzÊush
 
z_gzÊush


	)

55 
	#gzgëc
 
z_gzgëc


	)

56 
	#gzgës
 
z_gzgës


	)

57 
	#gz›í
 
z_gz›í


	)

58 
	#gz¥ötf
 
z_gz¥ötf


	)

59 
	#gzputc
 
z_gzputc


	)

60 
	#gzputs
 
z_gzputs


	)

61 
	#gzªad
 
z_gzªad


	)

62 
	#gzªwöd
 
z_gzªwöd


	)

63 
	#gz£ek
 
z_gz£ek


	)

64 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

65 
	#gzãŒ
 
z_gzãŒ


	)

66 
	#gzungëc
 
z_gzungëc


	)

67 
	#gzwrôe
 
z_gzwrôe


	)

68 
	#öÊ©e
 
z_öÊ©e


	)

69 
	#öÊ©eBack
 
z_öÊ©eBack


	)

70 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

71 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

72 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

73 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

74 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

75 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

76 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

77 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

78 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

79 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

80 
	#öÊ©eSync
 
z_öÊ©eSync


	)

81 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

82 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

83 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

84 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

85 
	#uncom¥ess
 
z_uncom¥ess


	)

86 
	#zEº‹
 
z_zEº‹


	)

87 
	#z_îrmsg
 
z_z_îrmsg


	)

88 
	#zˇŒoc
 
z_zˇŒoc


	)

89 
	#zc‰ì
 
z_zc‰ì


	)

90 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

91 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

94 
	#Byã
 
z_Byã


	)

95 
	#Byãf
 
z_Byãf


	)

96 
	#Æloc_func
 
z_Æloc_func


	)

97 
	#ch¨f
 
z_ch¨f


	)

98 
	#‰ì_func
 
z_‰ì_func


	)

99 
	#gzFûe
 
z_gzFûe


	)

100 
	#gz_hódî
 
z_gz_hódî


	)

101 
	#gz_hódîp
 
z_gz_hódîp


	)

102 
	#ö_func
 
z_ö_func


	)

103 
	#ötf
 
z_ötf


	)

104 
	#out_func
 
z_out_func


	)

105 
	#uI¡
 
z_uI¡


	)

106 
	#uI¡f
 
z_uI¡f


	)

107 
	#uL⁄g
 
z_uL⁄g


	)

108 
	#uL⁄gf
 
z_uL⁄gf


	)

109 
	#voidp
 
z_voidp


	)

110 
	#voidp
 
z_voidp


	)

111 
	#voidpc
 
z_voidpc


	)

112 
	#voidpc
 
z_voidpc


	)

113 
	#voidpf
 
z_voidpf


	)

114 
	#voidpf
 
z_voidpf


	)

115 
	#z_°ªam
 
z_z_°ªam


	)

116 
	#z_°ªamp
 
z_z_°ªamp


	)

119 
	#gz_hódî_s
 
z_gz_hódî_s


	)

120 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

121 
	#z_°ªam_s
 
z_z_°ªam_s


	)

125 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

126 
	#MSDOS


	)

128 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

129 
	#OS2


	)

131 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

132 
	#WINDOWS


	)

134 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

135 #i‚de‡
WIN32


136 
	#WIN32


	)

139 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

140 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

141 #i‚de‡
SYS16BIT


142 
	#SYS16BIT


	)

151 #ifde‡
SYS16BIT


152 
	#MAXSEG_64K


	)

154 #ifde‡
MSDOS


155 
	#UNALIGNED_OK


	)

158 #ifde‡
__STDC_VERSION__


159 #i‚de‡
STDC


160 
	#STDC


	)

162 #i‡
__STDC_VERSION__
 >= 199901L

163 #i‚de‡
STDC99


164 
	#STDC99


	)

168 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

169 
	#STDC


	)

171 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

172 
	#STDC


	)

174 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

175 
	#STDC


	)

177 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

178 
	#STDC


	)

181 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

182 
	#STDC


	)

185 #i‚de‡
STDC


187 c⁄°

	)

192 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

193 
	#NO_DUMMY_DECL


	)

197 #i‚de‡
MAX_MEM_LEVEL


198 #ifde‡
MAXSEG_64K


199 
	#MAX_MEM_LEVEL
 8

	)

201 
	#MAX_MEM_LEVEL
 9

	)

210 #i‚de‡
MAX_WBITS


211 
	#MAX_WBITS
 15

	)

229 #i‚de‡
OF


230 #ifde‡
STDC


231 
	#OF
(
¨gs
Ë
	)
args

233 
	#OF
(
¨gs
Ë()

	)

243 #ifde‡
SYS16BIT


244 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

246 
	#SMALL_MEDIUM


	)

247 #ifde‡
_MSC_VER


248 
	#FAR
 
_Ár


	)

250 
	#FAR
 
Ár


	)

253 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

255 
	#SMALL_MEDIUM


	)

256 #ifde‡
__BORLANDC__


257 
	#FAR
 
_Ár


	)

259 
	#FAR
 
Ár


	)

264 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

268 #ifde‡
ZLIB_DLL


269 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

270 #ifde‡
ZLIB_INTERNAL


271 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

273 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

281 #ifde‡
ZLIB_WINAPI


282 #ifde‡
FAR


283 #unde‡
FAR


285 
	~<wödows.h
>

288 
	#ZEXPORT
 
WINAPI


	)

289 #ifde‡
WIN32


290 
	#ZEXPORTVA
 
WINAPIV


	)

292 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

297 #i‡
deföed
 (
__BEOS__
)

298 #ifde‡
ZLIB_DLL


299 #ifde‡
ZLIB_INTERNAL


300 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

301 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

303 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

304 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

309 #ifde‡
HAVE_VISIBILITY_PRAGMA


310 
	#ZEXTERN
 
	`__©åibuã__
((
	`visibûôy
 ("deÁu…"))Ë

	)

313 #i‚de‡
ZEXTERN


314 
	#ZEXTERN
 

	)

316 #i‚de‡
ZEXPORT


317 
	#ZEXPORT


	)

319 #i‚de‡
ZEXPORTVA


320 
	#ZEXPORTVA


	)

323 #i‚de‡
FAR


324 
	#FAR


	)

327 #i‡!
deföed
(
__MACTYPES__
)

328 
	tByã
;

330 
	tuI¡
;

331 
	tuL⁄g
;

333 #ifde‡
SMALL_MEDIUM


335 
	#Byãf
 
Byã
 
FAR


	)

337 
Byã
 
	tFAR
 
	tByãf
;

339 
	tFAR
 
	tch¨f
;

340 
	tFAR
 
	tötf
;

341 
uI¡
 
	tFAR
 
	tuI¡f
;

342 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

344 #ifde‡
STDC


345 c⁄° *
	tvoidpc
;

346 
	tFAR
 *
	tvoidpf
;

347 *
	tvoidp
;

349 
Byã
 c⁄° *
	tvoidpc
;

350 
Byã
 
	tFAR
 *
	tvoidpf
;

351 
Byã
 *
	tvoidp
;

354 
	~"zlibdefs.h
"

356 #ifde‡
_LARGEFILE64_SOURCE


357 
	~<sys/ty≥s.h
>

360 #i‚de‡
SEEK_SET


361 
	#SEEK_SET
 0

	)

362 
	#SEEK_CUR
 1

	)

363 
	#SEEK_END
 2

	)

365 #i‚de‡
z_off_t


366 
	#z_off_t
 

	)

369 #i‡
deföed
(
__OS400__
)

370 
	#NO_v¢¥ötf


	)

373 #i‡
deföed
(
__MVS__
)

374 
	#NO_v¢¥ötf


	)

378 #i‡
deföed
(
__MVS__
)

379 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

380 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

381 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

382 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

383 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

384 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

385 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

386 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

387 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

388 #¥agm®
m≠
(
com¥essBound
,"CMBND")

389 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

390 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

391 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

73 
	#IP_MULTICAST_ALL
 49

	)

76 
	#IP_ORIGDSTADDR
 20

	)

77 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

79 
	#IP_MINTTL
 21

	)

83 
	#IP_PMTUDISC_DONT
 0

	)

84 
	#IP_PMTUDISC_WANT
 1

	)

85 
	#IP_PMTUDISC_DO
 2

	)

86 
	#IP_PMTUDISC_PROBE
 3

	)

89 
	#SOL_IP
 0

	)

91 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

92 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

93 
	#IP_MAX_MEMBERSHIPS
 20

	)

95 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


99 
	sù_›ts


101 
ö_addr
 
	mù_d°
;

102 
	mù_›ts
[40];

106 
	sù_mªqn


108 
ö_addr
 
	mimr_mu…üddr
;

109 
ö_addr
 
	mimr_addªss
;

110 
	mimr_ifödex
;

114 
	sö_pktöfo


116 
	mùi_ifödex
;

117 
ö_addr
 
	mùi_•ec_d°
;

118 
ö_addr
 
	mùi_addr
;

125 
	#IPV6_ADDRFORM
 1

	)

126 
	#IPV6_2292PKTINFO
 2

	)

127 
	#IPV6_2292HOPOPTS
 3

	)

128 
	#IPV6_2292DSTOPTS
 4

	)

129 
	#IPV6_2292RTHDR
 5

	)

130 
	#IPV6_2292PKTOPTIONS
 6

	)

131 
	#IPV6_CHECKSUM
 7

	)

132 
	#IPV6_2292HOPLIMIT
 8

	)

134 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

136 
	#IPV6_NEXTHOP
 9

	)

137 
	#IPV6_AUTHHDR
 10

	)

138 
	#IPV6_UNICAST_HOPS
 16

	)

139 
	#IPV6_MULTICAST_IF
 17

	)

140 
	#IPV6_MULTICAST_HOPS
 18

	)

141 
	#IPV6_MULTICAST_LOOP
 19

	)

142 
	#IPV6_JOIN_GROUP
 20

	)

143 
	#IPV6_LEAVE_GROUP
 21

	)

144 
	#IPV6_ROUTER_ALERT
 22

	)

145 
	#IPV6_MTU_DISCOVER
 23

	)

146 
	#IPV6_MTU
 24

	)

147 
	#IPV6_RECVERR
 25

	)

148 
	#IPV6_V6ONLY
 26

	)

149 
	#IPV6_JOIN_ANYCAST
 27

	)

150 
	#IPV6_LEAVE_ANYCAST
 28

	)

151 
	#IPV6_IPSEC_POLICY
 34

	)

152 
	#IPV6_XFRM_POLICY
 35

	)

154 
	#IPV6_RECVPKTINFO
 49

	)

155 
	#IPV6_PKTINFO
 50

	)

156 
	#IPV6_RECVHOPLIMIT
 51

	)

157 
	#IPV6_HOPLIMIT
 52

	)

158 
	#IPV6_RECVHOPOPTS
 53

	)

159 
	#IPV6_HOPOPTS
 54

	)

160 
	#IPV6_RTHDRDSTOPTS
 55

	)

161 
	#IPV6_RECVRTHDR
 56

	)

162 
	#IPV6_RTHDR
 57

	)

163 
	#IPV6_RECVDSTOPTS
 58

	)

164 
	#IPV6_DSTOPTS
 59

	)

166 
	#IPV6_RECVTCLASS
 66

	)

167 
	#IPV6_TCLASS
 67

	)

170 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

171 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

172 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

173 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

176 
	#IPV6_PMTUDISC_DONT
 0

	)

177 
	#IPV6_PMTUDISC_WANT
 1

	)

178 
	#IPV6_PMTUDISC_DO
 2

	)

179 
	#IPV6_PMTUDISC_PROBE
 3

	)

182 
	#SOL_IPV6
 41

	)

183 
	#SOL_ICMPV6
 58

	)

186 
	#IPV6_RTHDR_LOOSE
 0

	)

187 
	#IPV6_RTHDR_STRICT
 1

	)

189 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

52 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


53 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

55 
__BEGIN_DECLS


58 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

59 
__liov˙t
,

60 
__c⁄°
 
iovec
 *
__rvec
,

61 
__riov˙t
,

62 
__Êags
)

63 
__THROW
;

66 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

67 
__liov˙t
,

68 
__c⁄°
 
iovec
 *
__rvec
,

69 
__riov˙t
,

70 
__Êags
)

71 
__THROW
;

73 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/zlibdefs.h

6 
	~<sys/ty≥s.h
>

7 
	~<uni°d.h
>

8 #ifde‡
VMS


9 
	~<unixio.h
>

11 #i‚de‡
z_off_t


12 
	#z_off_t
 
off_t


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_CAIF
 37

	)

113 
	#PF_ALG
 38

	)

114 
	#PF_NFC
 39

	)

115 
	#PF_MAX
 40

	)

118 
	#AF_UNSPEC
 
PF_UNSPEC


	)

119 
	#AF_LOCAL
 
PF_LOCAL


	)

120 
	#AF_UNIX
 
PF_UNIX


	)

121 
	#AF_FILE
 
PF_FILE


	)

122 
	#AF_INET
 
PF_INET


	)

123 
	#AF_AX25
 
PF_AX25


	)

124 
	#AF_IPX
 
PF_IPX


	)

125 
	#AF_APPLETALK
 
PF_APPLETALK


	)

126 
	#AF_NETROM
 
PF_NETROM


	)

127 
	#AF_BRIDGE
 
PF_BRIDGE


	)

128 
	#AF_ATMPVC
 
PF_ATMPVC


	)

129 
	#AF_X25
 
PF_X25


	)

130 
	#AF_INET6
 
PF_INET6


	)

131 
	#AF_ROSE
 
PF_ROSE


	)

132 
	#AF_DEC√t
 
PF_DEC√t


	)

133 
	#AF_NETBEUI
 
PF_NETBEUI


	)

134 
	#AF_SECURITY
 
PF_SECURITY


	)

135 
	#AF_KEY
 
PF_KEY


	)

136 
	#AF_NETLINK
 
PF_NETLINK


	)

137 
	#AF_ROUTE
 
PF_ROUTE


	)

138 
	#AF_PACKET
 
PF_PACKET


	)

139 
	#AF_ASH
 
PF_ASH


	)

140 
	#AF_ECONET
 
PF_ECONET


	)

141 
	#AF_ATMSVC
 
PF_ATMSVC


	)

142 
	#AF_RDS
 
PF_RDS


	)

143 
	#AF_SNA
 
PF_SNA


	)

144 
	#AF_IRDA
 
PF_IRDA


	)

145 
	#AF_PPPOX
 
PF_PPPOX


	)

146 
	#AF_WANPIPE
 
PF_WANPIPE


	)

147 
	#AF_LLC
 
PF_LLC


	)

148 
	#AF_CAN
 
PF_CAN


	)

149 
	#AF_TIPC
 
PF_TIPC


	)

150 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

151 
	#AF_IUCV
 
PF_IUCV


	)

152 
	#AF_RXRPC
 
PF_RXRPC


	)

153 
	#AF_ISDN
 
PF_ISDN


	)

154 
	#AF_PHONET
 
PF_PHONET


	)

155 
	#AF_IEEE802154
 
PF_IEEE802154


	)

156 
	#AF_CAIF
 
PF_CAIF


	)

157 
	#AF_ALG
 
PF_ALG


	)

158 
	#AF_NFC
 
PF_NFC


	)

159 
	#AF_MAX
 
PF_MAX


	)

165 
	#SOL_RAW
 255

	)

166 
	#SOL_DECNET
 261

	)

167 
	#SOL_X25
 262

	)

168 
	#SOL_PACKET
 263

	)

169 
	#SOL_ATM
 264

	)

170 
	#SOL_AAL
 265

	)

171 
	#SOL_IRDA
 266

	)

174 
	#SOMAXCONN
 128

	)

177 
	~<bôs/sockaddr.h
>

180 
	ssockaddr


182 
__SOCKADDR_COMMON
 (
ß_
);

183 
	mß_d©a
[14];

189 
	#__ss_Æig¡y≥
 

	)

190 
	#_SS_SIZE
 128

	)

191 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

193 
	ssockaddr_°‹age


195 
__SOCKADDR_COMMON
 (
ss_
);

196 
__ss_Æig¡y≥
 
	m__ss_Æign
;

197 
	m__ss_∑ddög
[
_SS_PADSIZE
];

204 
	mMSG_OOB
 = 0x01,

205 
	#MSG_OOB
 
MSG_OOB


	)

206 
	mMSG_PEEK
 = 0x02,

207 
	#MSG_PEEK
 
MSG_PEEK


	)

208 
	mMSG_DONTROUTE
 = 0x04,

209 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

210 #ifde‡
__USE_GNU


212 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

213 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

215 
	mMSG_CTRUNC
 = 0x08,

216 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

217 
	mMSG_PROXY
 = 0x10,

218 
	#MSG_PROXY
 
MSG_PROXY


	)

219 
	mMSG_TRUNC
 = 0x20,

220 
	#MSG_TRUNC
 
MSG_TRUNC


	)

221 
	mMSG_DONTWAIT
 = 0x40,

222 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

223 
	mMSG_EOR
 = 0x80,

224 
	#MSG_EOR
 
MSG_EOR


	)

225 
	mMSG_WAITALL
 = 0x100,

226 
	#MSG_WAITALL
 
MSG_WAITALL


	)

227 
	mMSG_FIN
 = 0x200,

228 
	#MSG_FIN
 
MSG_FIN


	)

229 
	mMSG_SYN
 = 0x400,

230 
	#MSG_SYN
 
MSG_SYN


	)

231 
	mMSG_CONFIRM
 = 0x800,

232 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

233 
	mMSG_RST
 = 0x1000,

234 
	#MSG_RST
 
MSG_RST


	)

235 
	mMSG_ERRQUEUE
 = 0x2000,

236 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

237 
	mMSG_NOSIGNAL
 = 0x4000,

238 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

239 
	mMSG_MORE
 = 0x8000,

240 
	#MSG_MORE
 
MSG_MORE


	)

241 
	mMSG_WAITFORONE
 = 0x10000,

242 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

244 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

247 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

253 
	smsghdr


255 *
	mmsg_«me
;

256 
sockÀn_t
 
	mmsg_«mñí
;

258 
iovec
 *
	mmsg_iov
;

259 
size_t
 
	mmsg_iovÀn
;

261 *
	mmsg_c⁄åﬁ
;

262 
size_t
 
	mmsg_c⁄åﬁÀn
;

267 
	mmsg_Êags
;

270 #ifde‡
__USE_GNU


272 
	smmsghdr


274 
msghdr
 
	mmsg_hdr
;

275 
	mmsg_Àn
;

280 
	scmsghdr


282 
size_t
 
	mcmsg_Àn
;

287 
	mcmsg_Àvñ
;

288 
	mcmsg_ty≥
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

295 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

296 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

298 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

300 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

301 
	#CMSG_FIRSTHDR
(
mhdr
) \

302 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

303 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

304 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

305 & (
size_t
Ë~( (size_tË- 1))

	)

306 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

307 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

308 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

310 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

311 
cmsghdr
 *
__cmsg
Ë
__THROW
;

312 #ifde‡
__USE_EXTERN_INLINES


313 #i‚de‡
_EXTERN_INLINE


314 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

316 
_EXTERN_INLINE
 
cmsghdr
 *

317 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

319 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

321  (
cmsghdr
 *) 0;

323 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

324 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

325 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


326 + 
__mhdr
->
msg_c⁄åﬁÀn
)

327 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

328 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

330  (
cmsghdr
 *) 0;

331  
__cmsg
;

332 
	}
}

339 
	mSCM_RIGHTS
 = 0x01

340 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

341 #ifde‡
__USE_GNU


342 , 
	mSCM_CREDENTIALS
 = 0x02

343 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

347 #ifde‡
__USE_GNU


349 
	su¸ed


351 
pid_t
 
	mpid
;

352 
uid_t
 
	muid
;

353 
gid_t
 
	mgid
;

358 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


359 #i‚de‡
FIOGETOWN


360 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

362 #i‚de‡
FIOSETOWN


363 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

365 #i‚de‡
SIOCATMARK


366 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

368 #i‚de‡
SIOCGPGRP


369 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

371 #i‚de‡
SIOCGSTAMP


372 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

374 #i‚de‡
SIOCGSTAMPNS


375 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

377 #i‚de‡
SIOCSPGRP


378 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

383 
	~<asm/sockë.h
>

385 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


386 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


387 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


388 #unde‡
FIOGETOWN


390 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


391 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


392 #unde‡
FIOSETOWN


394 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


395 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


396 #unde‡
SIOCATMARK


398 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


399 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


400 #unde‡
SIOCGPGRP


402 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


403 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


404 #unde‡
SIOCGSTAMP


406 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


407 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


408 #unde‡
SIOCGSTAMPNS


410 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


411 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


412 #unde‡
SIOCSPGRP


417 
	slögî


419 
	ml_⁄off
;

420 
	ml_lögî
;

424 
__BEGIN_DECLS


431 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

432 
__vÀn
, 
__Êags
,

433 
__c⁄°
 
time•ec
 *
__tmo
);

439 
£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

440 
__vÀn
, 
__Êags
);

442 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
138
3367
allegro.h
android_frontend.cpp
android_frontend_list.h
android_frontend_menu.h
android_frontend_splash.h
android_main.cpp
blit.cpp
config.cpp
dirty.h
fileio.cpp
fronthlp.cpp
input.cpp
minimal.c
minimal.h
osd_cpu.h
osinline.h
port_wrapper.h
shared.c
shared.h
sound.cpp
video.cpp
wiimote.c
wiimote.h
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/errno.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/netinet/in.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/zconf.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/errno.h
/usr/include/bits/in.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/socket.h
/usr/include/sys/sysmacros.h
/usr/include/zlibdefs.h
/usr/include/bits/libc-lock.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/wchar.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/sys/uio.h
/usr/include/wchar.h
/usr/include/asm/errno.h
/usr/include/asm/socket.h
/usr/include/bits/sockaddr.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/wctype.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/socket.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/sockios.h
/usr/include/asm-generic/sockios.h
